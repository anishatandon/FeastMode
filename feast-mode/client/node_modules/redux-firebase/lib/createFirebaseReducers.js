'use strict';

exports.__esModule = true;
exports['default'] = createFirebaseReducer;

var _ActionTypes = require('./ActionTypes');

var _immutable = require('immutable');

var _reduxActions = require('redux-actions');

var _types = require('./types');

var emptyMeta = _types.Meta();
function defineMeta(path, value) {
  if (!_immutable.Iterable.isIterable(value)) {
    return value;
  }
  Object.defineProperty(value, 'meta', {
    value: emptyMeta.merge({
      id: path.last(),
      path: path
    })
  });
  value.forEach(function (child, childKey) {
    return defineMeta(path.push(childKey), child);
  });
  return value;
}

function toArrayPath(strPath) {
  return strPath.split('/');
}

function createFirebaseReducer() {
  var _handleActions;

  var initialState = arguments.length <= 0 || arguments[0] === undefined ? _immutable.Map() : arguments[0];

  return _reduxActions.handleActions((_handleActions = {}, _handleActions[_ActionTypes.PATHS_SYNCED] = function (state, _ref) {
    var payload = _ref.payload;

    return payload.reduce(function (state, value, path) {
      var arrayPath = toArrayPath(path);
      return state.setIn(arrayPath, defineMeta(_immutable.List(arrayPath), value));
    }, state);
  }, _handleActions), initialState);
}

module.exports = exports['default'];