{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Wizard.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { SignUpSchema } from './SignUpSchema.js';\n\nclass Wizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.next = values => this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values\n    }));\n\n    this.previous = () => this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n    this.handleSubmit = (values, bag) => {\n      const _this$props = this.props,\n            children = _this$props.children,\n            onSubmit = _this$props.onSubmit;\n      const page = this.state.page;\n      const isLastPage = page === React.Children.count(children) - 1;\n\n      if (isLastPage) {\n        return onSubmit(values, bag);\n      } else {\n        bag.setTouched({});\n        bag.setSubmitting(false);\n        this.next(values);\n        console.log(\"Next\");\n      }\n    };\n\n    this.state = {\n      page: 0,\n      values: props.initialValues,\n      schema: props.validationSchema\n    };\n  }\n\n  render() {\n    const children = this.props.children;\n    const _this$state = this.state,\n          page = _this$state.page,\n          values = _this$state.values,\n          schema = _this$state.schema;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return React.createElement(Formik, {\n      initialValues: values,\n      enableReinitialize: false,\n      validationSchema: SI,\n      onSubmit: this.handleSubmit,\n      render: ({\n        errors,\n        touched,\n        handleSubmit,\n        isSubmitting\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"classic-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, activePage, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, page > 0 && React.createElement(\"button\", {\n        type: \"button\",\n        className: \"classic-button\",\n        onClick: this.previous,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" Previous \"), !isLastPage && React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"classic-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Next \"), isLastPage && React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: \"classic-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" Submit \"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nWizard.Page = ({\n  children\n}) => children;\n\nexport default Wizard;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Wizard.js"],"names":["React","Component","Formik","SignUpSchema","Wizard","constructor","props","next","values","setState","state","page","Math","min","children","length","previous","max","handleSubmit","bag","onSubmit","isLastPage","Children","count","setTouched","setSubmitting","console","log","initialValues","schema","validationSchema","render","activePage","toArray","SI","errors","touched","isSubmitting","Page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAG7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,IATmB,GASZC,MAAM,IACX,KAAKC,QAAL,CAAcC,KAAK,KAAK;AACtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACC,IAAN,GAAa,CAAtB,EAAyB,KAAKL,KAAL,CAAWQ,QAAX,CAAoBC,MAApB,GAA6B,CAAtD,CADgB;AAEtBP,MAAAA;AAFsB,KAAL,CAAnB,CAViB;;AAAA,SAenBQ,QAfmB,GAeR,MACT,KAAKP,QAAL,CAAcC,KAAK,KAAK;AACtBC,MAAAA,IAAI,EAAEC,IAAI,CAACK,GAAL,CAASP,KAAK,CAACC,IAAN,GAAa,CAAtB,EAAyB,CAAzB;AADgB,KAAL,CAAnB,CAhBiB;;AAAA,SAwBnBO,YAxBmB,GAwBJ,CAACV,MAAD,EAASW,GAAT,KAAiB;AAAA,0BACC,KAAKb,KADN;AAAA,YACtBQ,QADsB,eACtBA,QADsB;AAAA,YACZM,QADY,eACZA,QADY;AAAA,YAEtBT,IAFsB,GAEb,KAAKD,KAFQ,CAEtBC,IAFsB;AAG9B,YAAMU,UAAU,GAAGV,IAAI,KAAKX,KAAK,CAACsB,QAAN,CAAeC,KAAf,CAAqBT,QAArB,IAAiC,CAA7D;;AACA,UAAIO,UAAJ,EAAgB;AACd,eAAOD,QAAQ,CAACZ,MAAD,EAASW,GAAT,CAAf;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,CAACK,UAAJ,CAAe,EAAf;AACAL,QAAAA,GAAG,CAACM,aAAJ,CAAkB,KAAlB;AACA,aAAKlB,IAAL,CAAUC,MAAV;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,KApCkB;;AAEjB,SAAKjB,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXH,MAAAA,MAAM,EAAEF,KAAK,CAACsB,aAFH;AAGXC,MAAAA,MAAM,EAAEvB,KAAK,CAACwB;AAHH,KAAb;AAKD;;AA+BDC,EAAAA,MAAM,GAAG;AAAA,UACCjB,QADD,GACc,KAAKR,KADnB,CACCQ,QADD;AAAA,wBAE0B,KAAKJ,KAF/B;AAAA,UAECC,IAFD,eAECA,IAFD;AAAA,UAEOH,MAFP,eAEOA,MAFP;AAAA,UAEeqB,MAFf,eAEeA,MAFf;AAGP,UAAMG,UAAU,GAAGhC,KAAK,CAACsB,QAAN,CAAeW,OAAf,CAAuBnB,QAAvB,EAAiCH,IAAjC,CAAnB;AACA,UAAMU,UAAU,GAAGV,IAAI,KAAKX,KAAK,CAACsB,QAAN,CAAeC,KAAf,CAAqBT,QAArB,IAAiC,CAA7D;AAEA,WACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAIN,MADnB;AAEE,MAAA,kBAAkB,EAAI,KAFxB;AAGE,MAAA,gBAAgB,EAAK0B,EAHvB;AAIE,MAAA,QAAQ,EAAI,KAAKhB,YAJnB;AAKE,MAAA,MAAM,EAAI,CAAC;AAAEiB,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBlB,QAAAA,YAAnB;AAAiCmB,QAAAA;AAAjC,OAAD,KACR;AAAM,QAAA,QAAQ,EAAInB,YAAlB;AAAgC,QAAA,SAAS,EAAG,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGc,UADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGrB,IAAI,GAAG,CAAP,IAAY;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,SAAS,EAAG,gBAApC;AAAqD,QAAA,OAAO,EAAE,KAAKK,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFf,EAGG,CAACK,UAAD,IAAe;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,SAAS,EAAG,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHlB,EAIGA,UAAU,IAAI;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,QAAQ,EAAIgB,YAApC;AAAkD,QAAA,SAAS,EAAG,gBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJjB,CAFF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAqBD;;AApE4B;;AAAzBjC,M,CACGkC,I,GAAO,CAAC;AAAExB,EAAAA;AAAF,CAAD,KAAkBA,Q;;AAsElC,eAAeV,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\n\nimport { SignUpSchema } from './SignUpSchema.js'\n\nclass Wizard extends Component {\n  static Page = ({ children }) => children\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n      values: props.initialValues,\n      schema: props.validationSchema\n    }\n  }\n\n  next = values =>\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values,\n  }))\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0),\n  }))\n\n  // validate = () => {\n  //   return this.props.validate\n  // }\n\n  handleSubmit = (values, bag) => {\n    const { children, onSubmit } = this.props\n    const { page } = this.state\n    const isLastPage = page === React.Children.count(children) - 1\n    if (isLastPage) {\n      return onSubmit(values, bag)\n    } else {\n      bag.setTouched({})\n      bag.setSubmitting(false)\n      this.next(values)\n      console.log(\"Next\")\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    const { page, values, schema } = this.state\n    const activePage = React.Children.toArray(children)[page]\n    const isLastPage = page === React.Children.count(children) - 1\n\n    return (\n      <Formik\n        initialValues = {values}\n        enableReinitialize = {false}\n        validationSchema = { SI}\n        onSubmit = {this.handleSubmit}\n        render = {({ errors, touched, handleSubmit, isSubmitting }) => (\n          <form onSubmit = {handleSubmit} className = \"classic-form\">\n            {activePage}\n            <div>\n\n              {page > 0 && <button type = \"button\" className = \"classic-button\" onClick={this.previous}> Previous </button>}\n              {!isLastPage && <button type = \"submit\" className = \"classic-button\"> Next </button>}\n              {isLastPage && <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Submit </button>}\n\n            </div>\n\n          </form>\n        )}\n      />\n    )\n  }\n}\n\nexport default Wizard"]},"metadata":{},"sourceType":"module"}