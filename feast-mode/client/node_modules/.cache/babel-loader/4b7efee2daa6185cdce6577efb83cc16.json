{"ast":null,"code":"import * as yup from 'yup';\nconst ProfileChangeSchema = yup.object().shape({\n  firstName: yup.string(\"Must be a valid name\").required(\"Please enter your name\"),\n  lastName: yup.string(\"Must be a valid name\"),\n  username: yup.string(\"Must be a valid username\").min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n  phone: yup.number().typeError('Please enter a valid phone number').positive('Please enter a valid phone number').required('Please enter a phone number'),\n  passwordOne: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter a password\"),\n  passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\"),\n  creditCard: yup.number().typeError('Please enter a valid credit card number').positive('Please enter a valid credit card number').required('Please enter your credit card number'),\n  expDate: yup.number().typeError('Please enter a valid expiration date').positive('Please enter a valid expiration date').test('len', 'Must be of the form MMYY', val => val.toString().length === 4) // makes sure it is exactly four numbers\n  .required('Please enter the expiration date'),\n  secCode: yup.number().typeError('Please enter a valid security code').positive('Please enter a valid security code').required('Please enter the security code'),\n  creditCardType: yup.string().required(\"Credit card type is required\")\n});\nexport default ProfileChangeSchema;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Profile/ProfileSchemas.js"],"names":["yup","ProfileChangeSchema","object","shape","firstName","string","required","lastName","username","min","email","phone","number","typeError","positive","passwordOne","passwordTwo","oneOf","ref","creditCard","expDate","test","val","toString","length","secCode","creditCardType"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,MAAMC,mBAAmB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC3CC,EAAAA,SAAS,EACLJ,GAAG,CAACK,MAAJ,CAAW,sBAAX,EACCC,QADD,CACU,wBADV,CAFuC;AAK3CC,EAAAA,QAAQ,EACJP,GAAG,CAACK,MAAJ,CAAW,sBAAX,CANuC;AAQ3CG,EAAAA,QAAQ,EACJR,GAAG,CAACK,MAAJ,CAAW,0BAAX,EACCI,GADD,CACK,CADL,EACQ,wCADR,EAECH,QAFD,CAEU,yBAFV,CATuC;AAa3CI,EAAAA,KAAK,EACDV,GAAG,CAACK,MAAJ,CAAW,uBAAX,EACCK,KADD,CACO,uBADP,EAECJ,QAFD,CAEU,uBAFV,CAduC;AAkB3CK,EAAAA,KAAK,EACDX,GAAG,CAACY,MAAJ,GACCC,SADD,CACW,mCADX,EAECC,QAFD,CAEU,mCAFV,EAGCR,QAHD,CAGU,6BAHV,CAnBuC;AAwB3CS,EAAAA,WAAW,EACPf,GAAG,CAACK,MAAJ,GACCI,GADD,CACK,CADL,EACQ,wCADR,EAECH,QAFD,CAEU,yBAFV,CAzBuC;AA6B3CU,EAAAA,WAAW,EACPhB,GAAG,CAACK,MAAJ,GACCY,KADD,CACO,CAACjB,GAAG,CAACkB,GAAJ,CAAQ,aAAR,CAAD,EAAyB,IAAzB,CADP,EACuC,uBADvC,EAECZ,QAFD,CAEU,2CAFV,CA9BuC;AAkC3Ca,EAAAA,UAAU,EACNnB,GAAG,CAACY,MAAJ,GACCC,SADD,CACW,yCADX,EAECC,QAFD,CAEU,yCAFV,EAGCR,QAHD,CAGU,sCAHV,CAnCuC;AAwC3Cc,EAAAA,OAAO,EACHpB,GAAG,CAACY,MAAJ,GACCC,SADD,CACW,sCADX,EAECC,QAFD,CAEU,sCAFV,EAGCO,IAHD,CAGM,KAHN,EAGa,0BAHb,EAGyCC,GAAG,IAAIA,GAAG,CAACC,QAAJ,GAAeC,MAAf,KAA0B,CAH1E,EAG6E;AAH7E,GAIClB,QAJD,CAIU,kCAJV,CAzCuC;AA+C3CmB,EAAAA,OAAO,EACHzB,GAAG,CAACY,MAAJ,GACCC,SADD,CACW,oCADX,EAECC,QAFD,CAEU,oCAFV,EAGCR,QAHD,CAGU,gCAHV,CAhDuC;AAqD3CoB,EAAAA,cAAc,EACV1B,GAAG,CAACK,MAAJ,GACKC,QADL,CACc,8BADd;AAtDuC,CAAnB,CAA5B;AA0DA,eAAeL,mBAAf","sourcesContent":["import * as yup from 'yup'\n\nconst ProfileChangeSchema = yup.object().shape({\n    firstName:\n        yup.string(\"Must be a valid name\")\n        .required(\"Please enter your name\"),\n\n    lastName:\n        yup.string(\"Must be a valid name\"),\n\n    username:\n        yup.string(\"Must be a valid username\")\n        .min(4, \"Username must be at least 4 characters\")\n        .required(\"Please enter a username\"),\n\n    email:\n        yup.string(\"Must be a valid email\")\n        .email(\"Must be a valid email\")\n        .required(\"Please enter an email\"),\n\n    phone:\n        yup.number()\n        .typeError('Please enter a valid phone number')\n        .positive('Please enter a valid phone number')\n        .required('Please enter a phone number'),\n\n    passwordOne: \n        yup.string()\n        .min(8, \"Password must be at least 8 characters\")\n        .required(\"Please enter a password\"),\n\n    passwordTwo:\n        yup.string()\n        .oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\")\n        .required(\"Make sure you can remember your password!\"),\n            \n    creditCard:\n        yup.number()\n        .typeError('Please enter a valid credit card number')\n        .positive('Please enter a valid credit card number')\n        .required('Please enter your credit card number'),\n\n    expDate:\n        yup.number()\n        .typeError('Please enter a valid expiration date')\n        .positive('Please enter a valid expiration date')\n        .test('len', 'Must be of the form MMYY', val => val.toString().length === 4) // makes sure it is exactly four numbers\n        .required('Please enter the expiration date'),\n        \n    secCode:\n        yup.number()\n        .typeError('Please enter a valid security code')\n        .positive('Please enter a valid security code')\n        .required('Please enter the security code'),\n    \n    creditCardType:\n        yup.string()\n            .required(\"Credit card type is required\"),\n})\n\nexport default ProfileChangeSchema"]},"metadata":{},"sourceType":"module"}