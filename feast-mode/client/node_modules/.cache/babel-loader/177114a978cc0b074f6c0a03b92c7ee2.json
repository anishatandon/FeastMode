{"ast":null,"code":"import * as actions from './actionTypes.js';\nexport const sendInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.SEND_INVITE_START\n  });\n\n  try {\n    const res = await firestore.collection('friends').doc(inviteId).get(); // console.log(res);\n\n    if (!res.data() || !res.data().requests) {\n      console.log('in here');\n      firestore.collection('friends').doc(inviteId).set({\n        requests: [userId]\n      });\n    } else {\n      // console.log(userId != inviteId);\n      if (res.data().requests.indexOf(userId) === -1 && userId !== inviteId) {\n        firestore.collection('friends').doc(inviteId).update({\n          requests: [...res.data().requests, userId]\n        });\n      } // console.log(\"complete\")\n\n    }\n\n    dispatch({\n      type: actions.SEND_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.SEND_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const acceptInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.ACCEPT_INVITE_START\n  });\n\n  try {\n    const resUser = await firestore.collection('friends').doc(userId).get();\n    const resInvite = await firestore.collection('friends').doc(inviteId).get();\n    const userPrevious = resUser.data().requests.filter(request => request !== inviteId);\n\n    if (!resUser.data() || !resUser.data().friends) {\n      console.log('resuser in here');\n      firestore.collection('friends').doc(userId).set({\n        friends: [inviteId],\n        requests: userPrevious\n      });\n    } else {\n      console.log(\"resuser\");\n\n      if (resUser.data().friends.indexOf(inviteId) === -1) {\n        firestore.collection('friends').doc(userId).update({\n          friends: [...resUser.data().friends, inviteId],\n          requests: userPrevious\n        });\n      }\n    }\n\n    if (!resInvite.data() || !resInvite.data().friends) {\n      // console.log(\"resinvite in here\")\n      firestore.collection('friends').doc(inviteId).set({\n        friends: [userId],\n        requests: [...resInvite.data().requests]\n      });\n    } else {\n      // console.log(\"resinvite\")\n      if (resInvite.data().friends.indexOf(userId) === -1) {\n        firestore.collection('friends').doc(inviteId).update({\n          friends: [...resInvite.data().friends, userId],\n          requests: [...resInvite.data().requests]\n        });\n      } // console.log(\"complete\")\n\n    }\n\n    dispatch({\n      type: actions.SEND_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.SEND_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const deleteInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.DELETE_INVITE_START\n  });\n\n  try {\n    const resUser = await firestore.collection('friends').doc(userId).get();\n    const userPrevious = resUser.data().requests.filter(request => request !== inviteId); // console.log(userPrevious)\n\n    firestore.collection('friends').doc(userId).update({\n      requests: userPrevious\n    }); // console.log(\"past\")\n\n    dispatch({\n      type: actions.DELETE_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.DELETE_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const deleteFriend = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.DELETE_FRIEND_START\n  });\n\n  try {\n    const resUser = await firestore.collection('friends').doc(userId).get();\n    const resInvite = await firestore.collection('friends').doc(inviteId).get(); // console.log(userPrevious)\n    // console.log(invitePrevious)\n    // console.log(!resUser.data() )\n\n    if (resUser.data()) {\n      const userPrevious = resUser.data().friends.filter(friend => friend !== inviteId);\n      firestore.collection('friends').doc(userId).update({\n        friends: userPrevious\n      });\n    }\n\n    if (resInvite.data()) {\n      const invitePrevious = resInvite.data().friends.filter(friend => friend !== userId);\n      firestore.collection('friends').doc(inviteId).update({\n        friends: invitePrevious\n      });\n    }\n\n    dispatch({\n      type: actions.DELETE_FRIEND_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.DELETE_FRIEND_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/backend/store/actions/appActions.js"],"names":["actions","sendInvite","data","dispatch","getState","getFirebase","getFirestore","firebase","firestore","inviteId","userId","auth","uid","type","SEND_INVITE_START","res","collection","doc","get","requests","console","log","set","indexOf","update","SEND_INVITE_SUCCESS","err","SEND_INVITE_FAIL","payload","message","acceptInvite","ACCEPT_INVITE_START","resUser","resInvite","userPrevious","filter","request","friends","deleteInvite","DELETE_INVITE_START","DELETE_INVITE_SUCCESS","DELETE_INVITE_FAIL","deleteFriend","DELETE_FRIEND_START","friend","invitePrevious","DELETE_FRIEND_SUCCESS","DELETE_FRIEND_FAIL"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes.js'\n\n\nexport const sendInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    \n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.SEND_INVITE_START })\n    try {\n        const res = await firestore\n            .collection('friends')\n            .doc(inviteId)\n            .get();\n        // console.log(res);\n        if (!res.data() || !res.data().requests) {\n            console.log('in here')\n            firestore\n            .collection('friends')\n            .doc(inviteId)\n            .set({\n                requests: [userId],\n            });\n            \n        } else { \n            // console.log(userId != inviteId);\n            if(res.data().requests.indexOf(userId) === -1 && userId !== inviteId ){\n                firestore\n                .collection('friends')\n                .doc(inviteId)\n                .update({\n                    requests: [...res.data().requests, userId],\n                });\n            }\n            \n            // console.log(\"complete\")\n        }\n\n        dispatch({ type: actions.SEND_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.SEND_INVITE_FAIL, payload: err.message })\n    }\n}\n\n\nexport const acceptInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.ACCEPT_INVITE_START })\n    try {\n        const resUser = await firestore\n            .collection('friends')\n            .doc(userId)\n            .get();\n        const resInvite = await firestore\n            .collection('friends')\n            .doc(inviteId)\n            .get();\n            \n        const userPrevious = resUser.data().requests.filter(request => request !== inviteId);\n        if (!resUser.data() || !resUser.data().friends) {\n            console.log('resuser in here')\n            firestore\n            .collection('friends')\n            .doc(userId)\n            .set({\n                friends: [inviteId],\n                requests: userPrevious,\n            });\n            \n        } \n        else { \n            console.log(\"resuser\")\n            if(resUser.data().friends.indexOf(inviteId) === -1 ){\n                firestore\n                .collection('friends')\n                .doc(userId)\n                .update({\n                    friends: [...resUser.data().friends, inviteId],\n                    requests: userPrevious,\n                });\n            }\n        }\n\n\n        if (!resInvite.data() || !resInvite.data().friends) {\n            // console.log(\"resinvite in here\")\n            firestore\n            .collection('friends')\n            .doc(inviteId)\n            .set({\n                friends: [userId],\n                requests: [...resInvite.data().requests],\n            });\n            \n        } \n        \n        else { \n            // console.log(\"resinvite\")\n            if(resInvite.data().friends.indexOf(userId) === -1 ){\n                firestore\n                .collection('friends')\n                .doc(inviteId)\n                .update({\n                    friends: [...resInvite.data().friends, userId],\n                    requests: [...resInvite.data().requests],\n                });\n            }\n            \n            // console.log(\"complete\")\n        }\n\n        dispatch({ type: actions.SEND_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.SEND_INVITE_FAIL, payload: err.message })\n    }\n}\n\n\nexport const deleteInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_INVITE_START })\n    try {\n        const resUser = await firestore\n            .collection('friends')\n            .doc(userId)\n            .get();\n        const userPrevious = resUser.data().requests.filter(request => request !== inviteId);\n        // console.log(userPrevious)\n        firestore\n            .collection('friends')\n            .doc(userId)\n            .update({\n                requests: userPrevious,\n            });\n        // console.log(\"past\")\n        dispatch({ type: actions.DELETE_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.DELETE_INVITE_FAIL, payload: err.message })\n    }\n}\n\n\nexport const deleteFriend = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_FRIEND_START })\n    try {\n\n        const resUser = await firestore\n            .collection('friends')\n            .doc(userId)\n            .get();\n        const resInvite = await firestore\n            .collection('friends')\n            .doc(inviteId)\n            .get();\n        \n        // console.log(userPrevious)\n        // console.log(invitePrevious)\n        // console.log(!resUser.data() )\n        if (resUser.data() ) {\n            const userPrevious = resUser.data().friends.filter(friend => friend !== inviteId);\n            firestore\n            .collection('friends')\n            .doc(userId)\n            .update({\n                friends: userPrevious,\n            });\n        } \n        \n        if (resInvite.data() ) {\n            const invitePrevious = resInvite.data().friends.filter(friend => friend !== userId);\n            firestore\n            .collection('friends')\n            .doc(inviteId)\n            .update({\n                friends: invitePrevious,\n            });\n        } \n\n        dispatch({ type: actions.DELETE_FRIEND_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.DELETE_FRIEND_FAIL, payload: err.message })\n    }\n}"]},"metadata":{},"sourceType":"module"}