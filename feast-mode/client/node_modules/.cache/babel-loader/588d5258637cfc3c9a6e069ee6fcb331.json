{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nimport { Formik, Form, Field, ErrorMessage, FormikProps, withFormik } from 'formik';\nimport Yup from 'yup';\n\nconst SignUpFormBase2 = ({\n  values,\n  handleChange\n}) => React.createElement(Form, {\n  className: \"classic-form\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"aligned-inputs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \" First Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"firstName\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \" Last Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"lastName\",\n  value: this.state.lastName,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"lastName\"),\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: [\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \" Username \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"username\",\n  value: this.state.username,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"username\"),\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"error-text\",\n  style: {\n    display: shouldMarkError(\"username\") ? \"block\" : \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \" Please enter a username \")), React.createElement(\"div\", {\n  className: [\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \" Email \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"email\",\n  value: this.state.email,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"email\"),\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"error-text\",\n  style: {\n    display: shouldMarkError(\"email\") ? \"block\" : \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \" Please enter your email \")), React.createElement(\"div\", {\n  className: [\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \" Phone Number \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"phone\",\n  value: this.state.phone,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"phone\"),\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"error-text\",\n  style: {\n    display: shouldMarkError(\"phone\") ? \"block\" : \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, \" Please enter your phone number \")), React.createElement(\"div\", {\n  className: \"aligned-inputs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: shouldMarkError(\"passwordOne\") && \"error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \" Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"passwordOne\",\n  value: this.state.passwordOne,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"passwordOne\"),\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"error-text\",\n  style: {\n    display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, \" Please enter a password \")), React.createElement(\"div\", {\n  className: shouldMarkError(\"passwordTwo\") && \"error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  name: \"passwordTwo\",\n  value: this.state.passwordTwo,\n  onChange: this.handleChange,\n  onBlur: this.handleBlur(\"passwordTwo\"),\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"error-text\",\n  style: {\n    display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, \" Passwords don't match \"))), React.createElement(\"button\", {\n  type: \"submit\",\n  className: \"classic-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \" Next \"));\n\nconst FormikForm = withFormik({\n  mapPropsToValues() {\n    return {\n      name: '',\n      password: ''\n    };\n  },\n\n  handleSubmit(values) {\n    console.log(\"Hello World\");\n  }\n\n})(SignUpFormBase2);\nconst INITIAL_STATE = {\n  firstName: '',\n  lastName: '',\n  username: '',\n  passwordOne: '',\n  passwordTwo: '',\n  email: '',\n  phone: '',\n  touched: {\n    firstName: false,\n    lastName: false,\n    username: false,\n    passwordOne: false,\n    passwordTwo: false,\n    email: false,\n    phone: false\n  }\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            phone = _this$state.phone,\n            passwordOne = _this$state.passwordOne,\n            passwordTwo = _this$state.passwordTwo;\n      event.preventDefault();\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          phone\n        });\n      }).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push('/pay');\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: _objectSpread({}, this.state.touched, {\n          [field]: true\n        })\n      });\n    };\n\n    this.validate = () => {\n      return {\n        firstName: this.state.firstName.length == 0,\n        lastName: this.state.lastName.length == 0,\n        username: this.state.username.length == 0,\n        passwordOne: this.state.passwordOne.length == 0,\n        passwordTwo: this.state.passwordTwo != this.state.passwordOne,\n        phone: this.state.phone.length == 0,\n        email: this.state.email.length == 0\n      };\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const errors = this.validate();\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError && shouldShow;\n    };\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"classic-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"aligned-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: shouldMarkError(\"firstName\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" First Name \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"firstName\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"firstName\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \" Please enter your name \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \" Last Name \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"lastName\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \" Username \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"username\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"username\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \" Please enter a username \")), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \" Email \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"email\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"email\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \" Please enter your email \")), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" Phone Number \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"phone\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"phone\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"phone\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \" Please enter your phone number \")), React.createElement(\"div\", {\n      className: \"aligned-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: shouldMarkError(\"passwordOne\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \" Password \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: this.state.passwordOne,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"passwordOne\"),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \" Please enter a password \")), React.createElement(\"div\", {\n      className: shouldMarkError(\"passwordTwo\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: this.state.passwordTwo,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"passwordTwo\"),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \" Passwords don't match \"))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"classic-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \" Next \"));\n  }\n\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(FormikForm);\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301\n  },\n  __self: this\n}, \"New to FeastMode?   \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 302\n  },\n  __self: this\n}, \"Sign Up\"));\n\nexport default SignUpForm;\nexport { SignUpLink, INITIAL_STATE };","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js"],"names":["React","Component","Link","withRouter","compose","ROUTES","withFirebase","Formik","Form","Field","ErrorMessage","FormikProps","withFormik","Yup","SignUpFormBase2","values","handleChange","state","lastName","handleBlur","shouldMarkError","join","username","display","email","phone","passwordOne","passwordTwo","FormikForm","mapPropsToValues","name","password","handleSubmit","console","log","INITIAL_STATE","firstName","touched","SignUpFormBase","constructor","props","event","preventDefault","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","setState","history","push","catch","error","target","value","field","evt","validate","length","render","errors","hasError","shouldShow","SignUpForm","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\n\nimport { Formik, Form, Field, ErrorMessage, FormikProps, withFormik } from 'formik'\nimport Yup from 'yup'\n\nconst SignUpFormBase2 = ({\n    values,\n    handleChange,\n}) => (\n    <Form className = \"classic-form\">\n        <div className = \"aligned-inputs\"> \n            <div>\n                <label> First Name </label> <br />\n                <Field\n                name = \"firstName\"\n                type = \"text\"\n                /> <br />\n            </div>\n\n            <div>\n                <label> Last Name </label> <br />\n                <input\n                name = \"lastName\"\n                value = {this.state.lastName}\n                onChange = {this.handleChange}\n                onBlur = {this.handleBlur(\"lastName\")}\n                type = \"text\"\n                /> <br/>\n            </div>\n        </div>\n\n        <div className = {[\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \")}>\n            <label> Username </label> <br />\n            <input\n            name = \"username\"\n            value = {this.state.username}\n            onChange = {this.handleChange}\n            onBlur = {this.handleBlur(\"username\")}\n            type = \"text\"\n            /> <br/>\n            <p className = \"error-text\" style = {{ display: shouldMarkError(\"username\") ? \"block\" : \"none\" }}> Please enter a username </p>\n        </div>\n        \n        <div className = {[\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \")}> \n            <label> Email </label> <br />\n            <input\n            name = \"email\"\n            value = {this.state.email}\n            onChange = {this.handleChange}\n            onBlur = {this.handleBlur(\"email\")}\n            type = \"text\"\n            /> <br/>\n            <p className = \"error-text\" style = {{ display: shouldMarkError(\"email\") ? \"block\" : \"none\" }}> Please enter your email </p>\n        </div>\n        \n        <div className = {[\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \")}>\n            <label> Phone Number </label> <br />\n            <input\n            name = \"phone\"\n            value = {this.state.phone}\n            onChange = {this.handleChange}\n            onBlur = {this.handleBlur(\"phone\")}\n            type = \"text\"\n            /> <br/>\n            <p className = \"error-text\" style = {{ display: shouldMarkError(\"phone\") ? \"block\" : \"none\" }}> Please enter your phone number </p>\n        </div>\n        \n        <div className = \"aligned-inputs\"> \n            <div className = {shouldMarkError(\"passwordOne\") && \"error\"}>\n                <label> Password </label> <br />\n                <input\n                name = \"passwordOne\"\n                value = {this.state.passwordOne}\n                onChange ={ this.handleChange}\n                onBlur = {this.handleBlur(\"passwordOne\")}\n                type = \"password\"\n                /> <br/>\n                <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\" }}> Please enter a password </p>\n            </div>\n            \n            <div className = {shouldMarkError(\"passwordTwo\") && \"error\"}>\n                <label> Confirm Password </label> <br />\n                <input\n                name = \"passwordTwo\"\n                value = {this.state.passwordTwo}\n                onChange = {this.handleChange}\n                onBlur = {this.handleBlur(\"passwordTwo\")}\n                type = \"password\"\n                /> <br/>\n                <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\" }}> Passwords don't match </p>\n            </div>\n        </div>\n\n        <button type = \"submit\" className = \"classic-button\"> Next </button>\n    </Form>\n)\n\nconst  FormikForm = withFormik({\n    mapPropsToValues() {\n        return {\n            name: '',\n            password: ''\n        }\n    },\n\n    handleSubmit(values) {\n        console.log(\"Hello World\")\n    }\n})(SignUpFormBase2)\n\nconst INITIAL_STATE = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    passwordOne: '',\n    passwordTwo: '',\n    email: '',\n    phone: '',\n    touched: {\n        firstName: false,\n        lastName: false,\n        username: false,\n        passwordOne: false,\n        passwordTwo: false,\n        email: false,\n        phone: false,\n    }\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    handleSubmit = event => {\n        const { username, email, phone, passwordOne, passwordTwo } = this.state;\n        \n        event.preventDefault();\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n            // Create a user in your Firebase realtime database\n            return this.props.firebase\n                .user(authUser.user.uid)\n                .set({\n                username,\n                email,\n                phone,\n                })\n            })\n            .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push('/pay');\n            })\n            .catch(error => {\n            this.setState({ error });\n            });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: {\n                ...this.state.touched, [field]: true\n            }\n        })\n    }\n\n    validate = () => {\n        return {\n            firstName: this.state.firstName.length == 0,\n            lastName: this.state.lastName.length == 0,\n            username: this.state.username.length == 0,\n            passwordOne: this.state.passwordOne.length == 0,\n            passwordTwo: this.state.passwordTwo != this.state.passwordOne,\n            phone: this.state.phone.length == 0,\n            email: this.state.email.length == 0\n        }\n    }\n    \n    render() {\n        const errors = this.validate()\n        const shouldMarkError = (field) => {\n            const hasError = errors[field]\n            const shouldShow = this.state.touched[field]\n            return hasError && shouldShow\n        }\n\n        return (\n            <form onSubmit={this.handleSubmit} className = \"classic-form\">\n\n                <div className = \"aligned-inputs\"> \n                    <div className = {shouldMarkError(\"firstName\") && \"error\"}>\n                        <label> First Name </label> <br />\n                        <input\n                        name = \"firstName\"\n                        value = {this.state.firstName}\n                        onChange = {this.handleChange}\n                        onBlur = {this.handleBlur(\"firstName\")}\n                        type = \"text\"\n                        /> <br />\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"firstName\") ? \"block\" : \"none\" }}> Please enter your name </p>\n                    </div>\n\n                    <div>\n                        <label> Last Name </label> <br />\n                        <input\n                        name = \"lastName\"\n                        value = {this.state.lastName}\n                        onChange = {this.handleChange}\n                        onBlur = {this.handleBlur(\"lastName\")}\n                        type = \"text\"\n                        /> <br/>\n                    </div>\n                </div>\n\n                <div className = {[\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \")}>\n                    <label> Username </label> <br />\n                    <input\n                    name = \"username\"\n                    value = {this.state.username}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"username\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"username\") ? \"block\" : \"none\" }}> Please enter a username </p>\n                </div>\n                \n                <div className = {[\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \")}> \n                    <label> Email </label> <br />\n                    <input\n                    name = \"email\"\n                    value = {this.state.email}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"email\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"email\") ? \"block\" : \"none\" }}> Please enter your email </p>\n                </div>\n                \n                <div className = {[\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \")}>\n                    <label> Phone Number </label> <br />\n                    <input\n                    name = \"phone\"\n                    value = {this.state.phone}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"phone\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"phone\") ? \"block\" : \"none\" }}> Please enter your phone number </p>\n                </div>\n                \n                <div className = \"aligned-inputs\"> \n                    <div className = {shouldMarkError(\"passwordOne\") && \"error\"}>\n                        <label> Password </label> <br />\n                        <input\n                        name = \"passwordOne\"\n                        value = {this.state.passwordOne}\n                        onChange ={ this.handleChange}\n                        onBlur = {this.handleBlur(\"passwordOne\")}\n                        type = \"password\"\n                        /> <br/>\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\" }}> Please enter a password </p>\n                    </div>\n                    \n                    <div className = {shouldMarkError(\"passwordTwo\") && \"error\"}>\n                        <label> Confirm Password </label> <br />\n                        <input\n                        name = \"passwordTwo\"\n                        value = {this.state.passwordTwo}\n                        onChange = {this.handleChange}\n                        onBlur = {this.handleBlur(\"passwordTwo\")}\n                        type = \"password\"\n                        /> <br/>\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\" }}> Passwords don't match </p>\n                    </div>\n                </div>\n\n                <button type = \"submit\" className = \"classic-button\"> Next </button>\n\n            </form>\n        );\n    }\n}\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(FormikForm);\n\nconst SignUpLink = () => (\n    <pre className = \"link-text\">\n      New to FeastMode?   <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\n    </pre>\n);\n\nexport default SignUpForm\nexport { SignUpLink, INITIAL_STATE };\n"]},"metadata":{},"sourceType":"module"}