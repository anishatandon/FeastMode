{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Food/Menu/InviteFriends.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Modal from '../../Modal/Modal';\nimport Friend from '../../Friends/Friend.js';\nimport Button from '../../../style/FormUI/Buttons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nconst InviteFriends = ({\n  userId,\n  allFriends\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpened = _useState2[0],\n        setisOpened = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        clicked = _useState4[0],\n        setClicked = _useState4[1];\n\n  if (!allFriends) return null;\n  let content = null;\n  let friendKeys = allFriends[userId].friends;\n\n  if (friendKeys && friendKeys.length !== 0) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, friendKeys.map(user => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"friend\",\n      key: user.friendId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Friend, {\n      display: true,\n      friendId: user.friendId,\n      friendFirst: user.friendFirst,\n      friendLast: user.friendLast,\n      friendEmail: user.friendEmail,\n      friendPhone: user.friendPhone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(Button, {\n      contain: true,\n      onClick: setClicked(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, clicked ? \"DONE\" : \"INVITE\"))));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    contain: true,\n    onClick: () => setisOpened(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUsers,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \" \\xA0 | \\xA0 INVITE FRIENDS\"), React.createElement(Modal, {\n    opened: isOpened,\n    close: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    contain: true,\n    onClick: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Done \"), React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Choose Your Friends \"), content)));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore\n}) => ({\n  userId: firebase.auth.uid,\n  allFriends: firestore.data.friends\n});\n\nexport default compose(connect(mapStateToProps), firestoreConnect(props => [\"friends/\"]))(InviteFriends);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Food/Menu/InviteFriends.js"],"names":["React","useState","connect","firestoreConnect","compose","Modal","Friend","Button","FontAwesomeIcon","faUsers","InviteFriends","userId","allFriends","isOpened","setisOpened","clicked","setClicked","content","friendKeys","friends","length","map","user","friendId","friendFirst","friendLast","friendEmail","friendPhone","mapStateToProps","firebase","firestore","auth","uid","data","props"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nimport Modal from '../../Modal/Modal'\nimport Friend from '../../Friends/Friend.js'\nimport Button from '../../../style/FormUI/Buttons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUsers } from '@fortawesome/free-solid-svg-icons'\n\n\nconst InviteFriends = ({ userId, allFriends }) => {\n    const [isOpened, setisOpened] = useState(false);\n    const [clicked, setClicked] = useState(false)\n    if (!allFriends) return null\n    \n    let content = null\n    let friendKeys = allFriends[userId].friends\n\n    if (friendKeys && friendKeys.length !== 0) {\n        content = (\n            <div>\n              {\n                friendKeys.map(user => \n                <>\n                <div className=\"friend\" key = {user.friendId}>\n                \n                    <Friend \n                      display={true} \n                      friendId={user.friendId} \n                      friendFirst={user.friendFirst} \n                      friendLast={user.friendLast} \n                      friendEmail={user.friendEmail} \n                      friendPhone={user.friendPhone} \n                    />\n                </div>\n                <Button contain onClick ={setClicked(true)}>{ clicked ? \"DONE\" : \"INVITE\" }</Button>\n                </>\n              )}\n            </div>\n          )\n    }\n  \n  return (\n    <>\n    <Button contain onClick={() => setisOpened(true)}>\n        <FontAwesomeIcon icon = {faUsers} color = \"white\"/> &nbsp; | &nbsp; INVITE FRIENDS \n    </Button>\n    <Modal opened = {isOpened} close = {() => setisOpened(false)}>\n      <Button contain onClick = {() => setisOpened(false)}> Done </Button >\n      <div className = \"friends-change\"> \n        <h1> Choose Your Friends </h1>\n        {content}\n      </div>\n    </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore }) => ({\n  userId: firebase.auth.uid,\n  allFriends: firestore.data.friends,\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => [\"friends/\"]),\n)(InviteFriends)\n"]},"metadata":{},"sourceType":"module"}