{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/summer19/Desktop/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar regeneratorRuntime = require(\"regenerator-runtime\");\n\nvar handleUrl = function () {\n  var a = _asyncToGenerator(_regeneratorRuntime.mark(function b(c) {\n    var d, e;\n    return _regeneratorRuntime.wrap(function (g) {\n      for (;;) switch (g.prev = g.next) {\n        case 0:\n          return g.next = 2, fetch(c).catch(function () {\n            return Promise.reject(new Error(\"Error fetching data\"));\n          });\n\n        case 2:\n          return d = g.sent, g.next = 5, d.json().catch(function () {\n            return log(\"Error parsing server response\"), Promise.reject(new Error(\"Error parsing server response\"));\n          });\n\n        case 5:\n          if (e = g.sent, \"OK\" !== e.status) {\n            g.next = 9;\n            break;\n          }\n\n          return log(e), g.abrupt(\"return\", e);\n\n        case 9:\n          return log(\"Server returned status code \" + e.status, !0), g.abrupt(\"return\", Promise.reject(new Error(\"Server returned status code \" + e.status)));\n\n        case 11:\n        case \"end\":\n          return g.stop();\n      }\n    }, b, this);\n  }));\n\n  return function () {\n    return a.apply(this, arguments);\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nfunction _asyncToGenerator(a) {\n  return function () {\n    var b = a.apply(this, arguments);\n    return new Promise(function (c, d) {\n      function e(f, g) {\n        try {\n          var h = b[f](g),\n              i = h.value;\n        } catch (j) {\n          return void d(j);\n        }\n\n        return h.done ? void c(i) : Promise.resolve(i).then(function (j) {\n          e(\"next\", j);\n        }, function (j) {\n          e(\"throw\", j);\n        });\n      }\n\n      return e(\"next\");\n    });\n  };\n}\n\nvar DEBUG = !1,\n    API_KEY = null,\n    GOOGLE_API = \"https://maps.google.com/maps/api/geocode/json\";\n\nfunction log(a) {\n  var b = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];\n  DEBUG && (b ? console.warn(a) : console.log(a));\n}\n\nexports.default = {\n  setApiKey: function setApiKey(a) {\n    API_KEY = a;\n  },\n  enableDebug: function enableDebug() {\n    var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : !0;\n    DEBUG = a;\n  },\n  fromLatLng: function fromLatLng(a, b, c) {\n    var d = this;\n    return _asyncToGenerator(_regeneratorRuntime.mark(function e() {\n      var f, g;\n      return _regeneratorRuntime.wrap(function (i) {\n        for (;;) switch (i.prev = i.next) {\n          case 0:\n            if (a && b) {\n              i.next = 3;\n              break;\n            }\n\n            return log(\"Provided coordinates are invalid\", !0), i.abrupt(\"return\", Promise.reject(new Error(\"Provided coordinates are invalid\")));\n\n          case 3:\n            return f = a + \",\" + b, g = GOOGLE_API + \"?latlng=\" + encodeURI(f), (c || API_KEY) && (API_KEY = c || API_KEY, g += \"&key=\" + API_KEY), i.abrupt(\"return\", handleUrl(g));\n\n          case 7:\n          case \"end\":\n            return i.stop();\n        }\n      }, e, d);\n    }))();\n  },\n  fromAddress: function fromAddress(a, b) {\n    var c = this;\n    return _asyncToGenerator(_regeneratorRuntime.mark(function d() {\n      var e;\n      return _regeneratorRuntime.wrap(function (g) {\n        for (;;) switch (g.prev = g.next) {\n          case 0:\n            if (a) {\n              g.next = 3;\n              break;\n            }\n\n            return log(\"Provided address is invalid\", !0), g.abrupt(\"return\", Promise.reject(new Error(\"Provided address is invalid\")));\n\n          case 3:\n            return e = GOOGLE_API + \"?address=\" + encodeURI(a), (b || API_KEY) && (API_KEY = b || API_KEY, e += \"&key=\" + API_KEY), g.abrupt(\"return\", handleUrl(e));\n\n          case 6:\n          case \"end\":\n            return g.stop();\n        }\n      }, d, c);\n    }))();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}