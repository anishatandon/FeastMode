{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%\\n    \", \" {\\n        display: none;\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    max-width: 60rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport styled from 'styled-components';\nimport * as actions from '../../../backend/store/actions'; // Components\n\nimport { ProfileEditSchema } from './ProfileSchemas.js';\nimport { ProfileDeleteLink } from '../../../style/FormUI/Links.js'; // import ImageUpload from './ImageUpload.js';\n// Images\n\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg'; // Style\n\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js';\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js';\nimport Button from '../../../style/FormUI/Buttons.js';\nimport Heading from '../../../style/FormUI/Heading.js';\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js';\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js';\nconst EditProfileWrapper = styled(FormWrapper)(_templateObject());\nconst CoverWrapper = styled.div(_templateObject2());\nconst Cover = styled.div(_templateObject3(), AlignedWrapper);\n\nconst ProfileEdit = ({\n  firebase,\n  error,\n  loading,\n  cleanUp,\n  editProfile\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  if (!firebase.profile.isLoaded) return null;\n  return React.createElement(EditProfileWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    size: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Edit Your Profile \"), React.createElement(Formik, {\n    initialValues: {\n      firstName: firebase.profile.firstName,\n      lastName: firebase.profile.lastName,\n      username: firebase.profile.username,\n      email: firebase.auth.email,\n      phone: firebase.profile.phone,\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: firebase.profile.creditCard,\n      expDate: firebase.profile.expDate,\n      secCode: firebase.profile.secCode,\n      creditCardType: firebase.profile.creditCardType,\n      apps: firebase.profile.apps // picture: firebase.profile.picture, // initial picture, the default one given at signup\n\n    },\n    validationSchema: ProfileEditSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await editProfile(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ({\n    values,\n    isValid,\n    isSubmitting\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Cover, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \", React.createElement(CoverWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }))), \" \"), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Card Number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Expiration Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Security Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \" What apps do you have? \"), React.createElement(\"ul\", {\n    className: \"checkbox-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.postmates\",\n    type: \"checkbox\",\n    id: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.grubhub\",\n    type: \"checkbox\",\n    id: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.doordash\",\n    type: \"checkbox\",\n    id: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.ubereats\",\n    type: \"checkbox\",\n    id: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), \" \"))), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Making changes...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, error)), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Message, {\n    success: true,\n    show: error === false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \" Profile changed successfully \")))));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  auth\n}) => ({\n  firebase,\n  loading: auth.profileEdit.loading,\n  error: auth.profileEdit.error\n});\n\nconst mapDispatchToProps = {\n  editProfile: actions.editProfile,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEdit);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit.js"],"names":["React","useEffect","connect","Formik","Field","styled","actions","ProfileEditSchema","ProfileDeleteLink","postmates","doordash","grubhub","ubereats","StyledForm","AlignedWrapper","TextInput","Label","Button","Heading","FormWrapper","Message","MessageWrapper","EditProfileWrapper","CoverWrapper","div","Cover","ProfileEdit","firebase","error","loading","cleanUp","editProfile","profile","isLoaded","firstName","lastName","username","email","auth","phone","passwordOne","passwordTwo","creditCard","expDate","secCode","creditCardType","apps","values","resetForm","setSubmitting","isValid","isSubmitting","mapStateToProps","profileEdit","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Field } from 'formik'\nimport styled from 'styled-components'\nimport * as actions from '../../../backend/store/actions'\n\n// Components\nimport { ProfileEditSchema } from './ProfileSchemas.js'\nimport { ProfileDeleteLink } from '../../../style/FormUI/Links.js'\n// import ImageUpload from './ImageUpload.js';\n\n// Images\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\n\n// Style\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js'\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js'\nimport Button from '../../../style/FormUI/Buttons.js'\nimport Heading from '../../../style/FormUI/Heading.js'\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js'\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js'\n\nconst EditProfileWrapper = styled(FormWrapper)`\n    max-width: 60rem;\n`\nconst CoverWrapper = styled.div`\n    width: 100%\n`\nconst Cover = styled.div`\n    width: 100%\n    ${AlignedWrapper} {\n        display: none;\n    }\n`\n\nconst ProfileEdit = ({ firebase, error, loading, cleanUp, editProfile }) => {\n    useEffect(() => {\n        return () => {\n            cleanUp()\n        }\n    }, [cleanUp])\n\n    if (!firebase.profile.isLoaded) return null\n\n    return (\n        <EditProfileWrapper>\n            <Heading size = \"h1\"> Edit Your Profile </Heading> \n            {/* <ImageUpload /> */}\n            <Formik\n                initialValues={{\n                    firstName: firebase.profile.firstName,\n                    lastName: firebase.profile.lastName,\n                    username: firebase.profile.username,\n                    email: firebase.auth.email,\n                    phone: firebase.profile.phone,\n                    passwordOne: \"\",\n                    passwordTwo: \"\",\n                    creditCard: firebase.profile.creditCard,\n                    expDate: firebase.profile.expDate,\n                    secCode: firebase.profile.secCode,\n                    creditCardType: firebase.profile.creditCardType,\n                    apps: firebase.profile.apps,\n                    // picture: firebase.profile.picture, // initial picture, the default one given at signup\n                }}\n                validationSchema = {ProfileEditSchema}\n                onSubmit = {async (values, { resetForm, setSubmitting }) => {\n                    await editProfile(values)\n                    resetForm()\n                    setSubmitting(false)\n                }}\n            >\n                {({ values, isValid, isSubmitting }) => (\n                    <StyledForm>\n                        {/* <div className = \"compensate-input text-input\"> \n                            <label> Profile Picture </label> <br />\n                            <Field name = \"picture\" type = \"file\"/> <br/>\n                        </div> */}\n                        <Cover> <CoverWrapper>\n                            <AlignedWrapper>\n                                <Field name = \"firstName\" type = \"text\" component = {TextInput} label = \"First Name\"/>\n                                <Field name = \"lastName\" type = \"text\" component = {TextInput} label = \"Last Name\"/>\n                            </AlignedWrapper>\n\n                            <Field name = \"username\" type = \"text\" component = {TextInput} label = \"Username\"/>\n                            <Field name = \"email\" type = \"email\" component = {TextInput} label = \"Email\"/>\n                            <Field name = \"phone\" type = \"text\" component = {TextInput} label = \"Phone\"/>\n                            \n                            <AlignedWrapper>\n                                <Field name = \"passwordOne\" type = \"password\" component = {TextInput} label = \"Password\"/>\n                                <Field name = \"passwordTwo\" type = \"password\" component = {TextInput} label = \"Confirm Password\"/>\n                            </AlignedWrapper>\n                        </CoverWrapper> </Cover>\n\n                        <Field name = \"creditCard\" type = \"text\" component = {TextInput} label = \"Card Number\"/>\n                        <AlignedWrapper>\n                            <Field name = \"expDate\" type = \"text\" component = {TextInput} label = \"Expiration Date\"/>\n                            <Field name = \"secCode\" type = \"text\" component = {TextInput} label = \"Security Code\"/>\n                        </AlignedWrapper>\n\n                        <Label> What apps do you have? </Label>\n                        <ul className = \"checkbox-input\">\n                            <li>\n                            <Field name = \"apps.postmates\" type = \"checkbox\" id = \"Postmates\"/>\n                            <label for = \"Postmates\"> <img src = {postmates} /> </label>\n                            </li>\n\n                            <li>\n                            <Field name = \"apps.grubhub\" type = \"checkbox\" id = \"GrubHub\"/>\n                            <label for = \"GrubHub\"> <img src = {grubhub} /> </label>\n                            </li>\n\n                            <li>\n                            <Field name = \"apps.doordash\" type = \"checkbox\" id = \"DoorDash\"/>\n                            <label for = \"DoorDash\"> <img src = {doordash} /> </label>\n                            </li>\n\n                            <li>\n                            <Field name = \"apps.ubereats\" type = \"checkbox\" id = \"UberEats\"/>\n                            <label for = \"UberEats\"> <img src = {ubereats} /> </label>\n                            </li>\n                        </ul>\n\n                        <Button\n                            disabled = { !isValid || isSubmitting}\n                            loading = {loading ? 'Making changes...' : null}\n                            type = \"submit\"\n                        > \n                            Edit Profile \n                        </Button>\n                    \n                        <MessageWrapper>\n                            <Message error show = {error}>{ error }</Message>\n                        </MessageWrapper>\n                        <MessageWrapper>\n                            <Message success show = {error === false}> Profile changed successfully </Message>\n                        </MessageWrapper>\n                    </StyledForm>\n                )}\n            </Formik>\n            {/* <ProfileDeleteLink /> */}\n        </EditProfileWrapper>\n    )\n}\n\nconst mapStateToProps = ({ firebase, auth }) => ({\n    firebase,\n    loading: auth.profileEdit.loading,\n    error: auth.profileEdit.error\n})\n\nconst mapDispatchToProps = {\n    editProfile: actions.editProfile,\n    cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEdit)"]},"metadata":{},"sourceType":"module"}