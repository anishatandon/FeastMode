{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friends.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Friend from './Friend';\nimport AcceptFriendButton from './AcceptFriendButton';\nimport Loader from '../Loader/index.js';\n\nconst Friends = ({\n  users,\n  friends,\n  userId,\n  hasRequested\n}) => {\n  let content;\n\n  if (!friends || !friends[userId]) {\n    content = React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  } else {\n    if (!friends[userId].requests || friends[userId].requests.length === 0) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"No friends requests\");\n    } else {\n      content = React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Friend Requests\"), friends[userId].requests.map(user => React.createElement(\"div\", {\n        className: \"friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Friend, {\n        display: true,\n        key: user,\n        friend: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(AcceptFriendButton, {\n        key: \"b\" + user,\n        friend: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))));\n    }\n\n    if (!friends[userId].friends || friends[userId].friends.length === 0) {\n      content = React.createElement(React.Fragment, null, content, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"You have no friends.\"));\n    } else {\n      content = React.createElement(React.Fragment, null, content, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Your Friends\"), friends[userId].friends.map(user => React.createElement(\"div\", {\n        className: \"friend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Friend, {\n        display: true,\n        key: user,\n        friend: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.friends,\n  hasRequested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"friends/\"]), firestoreConnect(props => [\"users/\"]))(Friends);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friends.js"],"names":["React","useEffect","connect","firestoreConnect","compose","Friend","AcceptFriendButton","Loader","Friends","users","friends","userId","hasRequested","content","requests","length","map","user","mapStateToProps","firebase","firestore","app","auth","uid","data","status","requested","mapDispatchToProps","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nimport Friend from './Friend';\nimport AcceptFriendButton from './AcceptFriendButton'\nimport Loader from '../Loader/index.js';\n\nconst Friends = ({users, friends, userId, hasRequested }) => {\n\n  let content ;\n  \n  if(!friends || !friends[userId]) \n  {\n    content = (\n      <Loader />\n    );\n  }\n\n  else {\n    if(!friends[userId].requests || friends[userId].requests.length === 0 )\n    {\n        content = (\n            <p>No friends requests</p>\n        )\n    }\n\n    else{\n        content = (\n            <>\n                <h1>Friend Requests</h1>\n                {friends[userId].requests.map(user =>\n                <div className=\"friend\">\n                    <Friend display={true} key={user} friend={user} />\n                    <AcceptFriendButton key={\"b\"+user} friend={user}/>\n                </div>\n                )}\n            </>\n        )\n    } \n\n    if(!friends[userId].friends || friends[userId].friends.length === 0)\n    {\n        content = (\n            <>\n                {content}\n                <p>You have no friends.</p>\n            </>\n        )\n    }\n\n    else\n    {\n        content = (\n            <>\n                {content}\n                <h1>Your Friends</h1>\n                {friends[userId].friends.map(user =>\n                <div className=\"friend\">\n                    <Friend display={true} key={user} friend={user} />\n                </div>\n                )}\n            </>\n        )\n        \n        \n    }\n\n\n  }\n  \n  \n  \n \n\n  return (\n    <div className = \"friends-change\">\n      <h1></h1>\n      {content}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.friends,\n  hasRequested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"friends/\"]),\n  firestoreConnect(props => [\"users/\"]),\n)(Friends)\n"]},"metadata":{},"sourceType":"module"}