{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriends.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Friend from './Friend';\nimport AddFriendButton from './Buttons/AddFriendButton';\nimport Loader from '../Loader/index.js';\nimport Modal from '../Modal/Modal';\nimport Button from '../../style/FormUI/Buttons';\nimport './AddFriends.css';\n\nconst AddFriends = ({\n  users,\n  userId,\n  allFriends\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpened = _useState2[0],\n        setisOpened = _useState2[1];\n\n  let content;\n\n  if (!users) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  } else if (users.length === 0) {\n    content = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"There are no users!\");\n  } else {\n    let userKeys = Object.keys(users).filter(user => user !== userId);\n    let friendKeys = allFriends[userId].friends;\n\n    if (friendKeys && friendKeys.length !== 0) {\n      friendKeys = friendKeys.map(user => user.friendId);\n      userKeys = userKeys.filter(key => friendKeys.indexOf(key) === -1);\n    }\n\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, userKeys.map(user => React.createElement(\"div\", {\n      className: \"friend\",\n      key: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Friend, {\n      display: true,\n      friendId: user,\n      friendFirst: users[user].firstName,\n      friendLast: users[user].lastName,\n      friendEmail: users[user].email,\n      friendPhone: users[user].phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(AddFriendButton, {\n      friend: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    color: \"main\",\n    contain: true,\n    onClick: () => setisOpened(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add Friends\"), React.createElement(Modal, {\n    opened: isOpened,\n    close: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"main\",\n    contain: true,\n    onClick: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Done\"), React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" All Users \"), content)));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  userId: firebase.auth.uid,\n  users: firestore.data.users,\n  allFriends: firestore.data.friends,\n  hasRequested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"users/\"]), firestoreConnect(props => [\"friends/\"]))(AddFriends);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriends.js"],"names":["React","useEffect","useState","connect","firestoreConnect","compose","Friend","AddFriendButton","Loader","Modal","Button","AddFriends","users","userId","allFriends","isOpened","setisOpened","content","length","userKeys","Object","keys","filter","user","friendKeys","friends","map","friendId","key","indexOf","firstName","lastName","email","phone","mapStateToProps","firebase","firestore","app","auth","uid","data","hasRequested","status","requested","mapDispatchToProps","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nimport Friend from './Friend';\nimport AddFriendButton from './Buttons/AddFriendButton';\nimport Loader from '../Loader/index.js';\nimport Modal from '../Modal/Modal'\nimport Button from '../../style/FormUI/Buttons'\nimport './AddFriends.css';\n\n\nconst AddFriends = ({ users, userId, allFriends }) => {\n  const [isOpened, setisOpened] = useState(false);\n\n  let content;\n  \n  if(!users) {\n    return <Loader />\n  }\n  \n  else if( users.length === 0 ) {\n    content = (\n      <p>There are no users!</p>\n    )\n  }\n\n  else {\n    let userKeys = Object.keys(users).filter(user => user !== userId)\n    let friendKeys = allFriends[userId].friends\n    if(friendKeys && friendKeys.length !== 0)\n    {\n      friendKeys = friendKeys.map(user => user.friendId)\n      userKeys = userKeys.filter(key => friendKeys.indexOf(key) === -1)\n    }\n  \n    content = (\n      <div>\n        {\n          userKeys.map(user => \n            \n          <div className=\"friend\" key={user}>\n          \n              <Friend \n                display={true} \n                friendId={user} \n                friendFirst={users[user].firstName} \n                friendLast={users[user].lastName} \n                friendEmail={users[user].email} \n                friendPhone={users[user].phone} \n              />\n              <AddFriendButton friend={user}/>\n          </div>\n        )}\n        \n      </div>\n    )\n  }\n\n  return (\n    <>\n    <Button color=\"main\" contain onClick={() => setisOpened(true)}>\n      Add Friends\n    </Button>\n    <Modal opened = {isOpened} close = {() => setisOpened(false)}>\n      <Button color = \"main\" contain onClick = {() => setisOpened(false)}>\n        Done\n      </Button >\n      <div className = \"friends-change\"> \n      <h1> All Users </h1>\n      {content}\n      </div>\n    </Modal>\n    </>\n  )\n}\n\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  userId: firebase.auth.uid,\n  users: firestore.data.users,\n  allFriends: firestore.data.friends,\n  hasRequested: firestore.status.requested,\n})\n\n\nconst mapDispatchToProps = {}\n\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"users/\"]),\n  firestoreConnect(props => [\"friends/\"]),\n)(AddFriends)\n"]},"metadata":{},"sourceType":"module"}