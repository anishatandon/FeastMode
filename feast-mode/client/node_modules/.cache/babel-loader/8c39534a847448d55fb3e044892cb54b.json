{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/DisplayFriends.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Friend from './Friend';\nimport Loader from '../Loader/index.js';\n\nconst DisplayFriends = ({\n  friends,\n  requests,\n  userId,\n  requested\n}) => {\n  let content;\n\n  if (!friends) {\n    content = React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  } else if (friends[userId].friends.length === 0) {\n    content = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"You have no todos!\");\n  } else {\n    content = friends[userId].friends.map(friend => React.createElement(Friend, {\n      display: true,\n      key: friend.id,\n      friend: friend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n    content += friends[userId].requested.map(friend => React.createElement(Friend, {\n      display: false,\n      key: friend.id,\n      friend: friend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Display Friends \"), friends && friends.map(friend => {\n    return React.createElement(Friend, {\n      friend: friend,\n      key: friend.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }), requests && requests.map(request => {\n    return React.createElement(Friend, {\n      friend: request,\n      key: request.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.todos,\n  requested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"friends/\".concat(props.userId)]))(DisplayFriends);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/DisplayFriends.js"],"names":["React","useEffect","connect","firestoreConnect","compose","Friend","Loader","DisplayFriends","friends","requests","userId","requested","content","length","map","friend","id","request","mapStateToProps","firebase","firestore","app","auth","uid","data","todos","status","mapDispatchToProps","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,MAApB;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AAElE,MAAIC,OAAJ;;AACA,MAAG,CAACJ,OAAJ,EACA;AACEI,IAAAA,OAAO,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GALD,MAMK,IAAIJ,OAAO,CAACE,MAAD,CAAP,CAAgBF,OAAhB,CAAwBK,MAAxB,KAAmC,CAAvC,EACL;AACID,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF;AAGH,GALI,MAOL;AACEA,IAAAA,OAAO,GAAGJ,OAAO,CAACE,MAAD,CAAP,CAAgBF,OAAhB,CAAwBM,GAAxB,CAA4BC,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,IAAjB;AAAuB,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAnC;AAAuC,MAAA,MAAM,EAAED,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAAV;AACAH,IAAAA,OAAO,IAAIJ,OAAO,CAACE,MAAD,CAAP,CAAgBC,SAAhB,CAA0BG,GAA1B,CAA8BC,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAjB;AAAwB,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApC;AAAwC,MAAA,MAAM,EAAED,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC,CAAX;AACD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGMP,OAAO,IAAIA,OAAO,CAACM,GAAR,CAAYC,MAAM,IAAI;AAC/B,WACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,MAAhB;AAAwB,MAAA,GAAG,EAAEA,MAAM,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJU,CAHjB,EAWMP,QAAQ,IAAIA,QAAQ,CAACK,GAAT,CAAaG,OAAO,IAAI;AAClC,WACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,OAAhB;AAAyB,MAAA,GAAG,EAAEA,OAAO,CAACD,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJW,CAXlB,CADF;AAqBD,CA3CD;;AA6CA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,MAAmC;AACzDF,EAAAA,QADyD;AAEzDT,EAAAA,MAAM,EAAES,QAAQ,CAACG,IAAT,CAAcC,GAFmC;AAGzDf,EAAAA,OAAO,EAAEY,SAAS,CAACI,IAAV,CAAeC,KAHiC;AAIzDd,EAAAA,SAAS,EAAES,SAAS,CAACM,MAAV,CAAiBf;AAJ6B,CAAnC,CAAxB;;AAOA,MAAMgB,kBAAkB,GAAG,EAA3B;AAEA,eAAevB,OAAO,CACpBF,OAAO,CAACgB,eAAD,EAAkBS,kBAAlB,CADa,EAEpBxB,gBAAgB,CAACyB,KAAK,IAAI,mBAAYA,KAAK,CAAClB,MAAlB,EAAV,CAFI,CAAP,CAGbH,cAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nimport Friend from './Friend';\nimport Loader from '../Loader/index.js';\n\nconst DisplayFriends = ({friends, requests, userId, requested }) => {\n\n  let content;\n  if(!friends)\n  {\n    content = (\n      <Loader />\n    );\n  }\n  else if( friends[userId].friends.length === 0 )\n  {\n      content = (\n        <p>You have no todos!</p>\n      )\n  }\n  else\n  {\n    content = friends[userId].friends.map(friend => <Friend display={true} key={friend.id} friend={friend} />)\n    content += friends[userId].requested.map(friend => <Friend display={false} key={friend.id} friend={friend} />)\n  }\n \n\n  return (\n    <div className = \"friends-change\">\n      <h1> Display Friends </h1>\n        {\n          friends && friends.map(friend => {\n            return (\n              <Friend friend={friend} key={friend.id} />\n            )\n          })\n        }\n\n        {\n          requests && requests.map(request => {\n            return (\n              <Friend friend={request} key={request.id} />\n            )\n          })\n        }\n\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.todos,\n  requested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [`friends/${props.userId}`]),\n)(DisplayFriends)\n"]},"metadata":{},"sourceType":"module"}