{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Test.js\";\nimport React, { useEffect } from 'react';\nimport { FormikWizardProvider, Wizard, StepsList, Step, ButtonsList, PreviousButton, NextButton, SubmitButton } from \"formik-wizard-form\";\nimport { withFormik } from 'formik';\nimport SignUpForm2 from './SignUpForm2.js';\nimport PaymentInfo from './PaymentInfo.js';\nimport AppsYouHave from './AppsYouHave.js';\nimport * as actions from '../../backend/store/actions';\nimport { connect } from 'react-redux';\n\nconst UserForm = props => React.createElement(FormikWizardProvider, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), renderProps => React.createElement(Wizard, Object.assign({}, renderProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(StepsList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Step, {\n  component: SignUpForm2,\n  title: \"SignUpForm2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(Step, {\n  component: PaymentInfo,\n  title: \"Contact Details\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(Step, {\n  component: AppsYouHave,\n  title: \"Address Details\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n})), React.createElement(ButtonsList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(PreviousButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(NextButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(SubmitButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})))); // Finally wrap this form in withFormik higher order component given by formik\n\n\nconst Test = ({\n  signUp,\n  loading,\n  error,\n  cleanUp\n}) => {\n  console.log(error); // remove this when you get error to show\n\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return withFormik({\n    mapPropsToValues: () => ({\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: ''\n    }),\n    handleSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await signUp(values);\n      resetForm();\n      setSubmitting(false);\n      console.log(\"Submitted\");\n    }\n  })(UserForm);\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nconnect(mapStateToProps, mapDispatchToProps)(UserForm);\nexport default Test;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Test.js"],"names":["React","useEffect","FormikWizardProvider","Wizard","StepsList","Step","ButtonsList","PreviousButton","NextButton","SubmitButton","withFormik","SignUpForm2","PaymentInfo","AppsYouHave","actions","connect","UserForm","props","renderProps","Test","signUp","loading","error","cleanUp","console","log","mapPropsToValues","firstName","lastName","username","email","phone","passwordOne","passwordTwo","handleSubmit","values","resetForm","setSubmitting","mapStateToProps","auth","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n\tFormikWizardProvider,\n\tWizard,\n\tStepsList,\n\tStep,\n\tButtonsList,\n\tPreviousButton,\n\tNextButton,\n\tSubmitButton\n} from  \"formik-wizard-form\";\nimport { withFormik } from 'formik'\nimport SignUpForm2 from './SignUpForm2.js'\nimport PaymentInfo from './PaymentInfo.js'\nimport AppsYouHave from './AppsYouHave.js'\nimport * as actions from '../../backend/store/actions'\nimport { connect } from 'react-redux'\n\nconst UserForm = props => (\n\t<FormikWizardProvider {...props}>\n\t\t{(renderProps) => (\n\t\t\t<Wizard {...renderProps}>\n\t\t\t\t<StepsList>\n\t\t\t\t\t<Step component={SignUpForm2} title=\"SignUpForm2\" />\n\t\t\t\t\t<Step component={PaymentInfo} title=\"Contact Details\" />\n\t\t\t\t\t<Step component={AppsYouHave} title=\"Address Details\" />\n\t\t\t\t</StepsList>\n\t\t\t\t<ButtonsList>\n\t\t\t\t\t<PreviousButton />\n\t\t\t\t\t<NextButton />\n\t\t\t\t\t<SubmitButton />\n\t\t\t\t</ButtonsList>\n\t\t\t</Wizard>\n\t\t)}\n\t</FormikWizardProvider>\n)\n\n// Finally wrap this form in withFormik higher order component given by formik\nconst Test = ({ signUp, loading, error, cleanUp }) => {\n    console.log(error) // remove this when you get error to show\n    useEffect(() => {\n        return () => {\n            cleanUp()\n        }\n    }, [cleanUp])\n\n    return(\n        withFormik({\n            mapPropsToValues: () => ({\n                firstName: \"\",\n                lastName: \"\",\n                username: \"\",\n                email: \"\",\n                phone: \"\",\n                passwordOne: \"\",\n                passwordTwo: '',\n            }),\n            handleSubmit: async ( values, { resetForm, setSubmitting }) => {\n                await signUp(values)\n                resetForm()\n                setSubmitting(false)\n                console.log(\"Submitted\")\n            }\n        })(UserForm)\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error,\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp,\n    cleanUp: actions.clean,\n}\n\nconnect(mapStateToProps, mapDispatchToProps)(UserForm)\n\nexport default Test"]},"metadata":{},"sourceType":"module"}