{"ast":null,"code":"'use strict';\n\nvar httpJson = require('./http-json.js');\n\nvar urls = require('./urls.json');\n\nvar Address = require('./Address.js');\n\nvar findNearbyStores = function (address, pickUpType, callback) {\n  if (typeof pickUpType == 'function') {\n    callback = pickUpType;\n    pickUpType = 'Delivery';\n  }\n\n  if (!address || !callback) {\n    if (!callback) {\n      throw 'invalid findNearbyStores request. address and callback are required at a minimum.';\n    }\n\n    if (callback) {\n      callback({\n        success: false,\n        message: 'At least a partial address (minimum accepted is zipcode) is required to find stores'\n      });\n    }\n\n    return false;\n  }\n\n  var address = new Address(address);\n  var addressLines = address.getAddressLines();\n  var url = urls.store.find.replace('${line1}', encodeURI(addressLines.line1)).replace('${line2}', encodeURI(addressLines.line2)).replace('${type}', pickUpType || 'Delivery');\n  httpJson.get(url, callback);\n};\n\nmodule.exports = {\n  findNearbyStores: findNearbyStores\n};","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/dominos/src/Utilities.js"],"names":["httpJson","require","urls","Address","findNearbyStores","address","pickUpType","callback","success","message","addressLines","getAddressLines","url","store","find","replace","encodeURI","line1","line2","get","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIG,gBAAgB,GAAG,UAASC,OAAT,EAAkBC,UAAlB,EAA8BC,QAA9B,EAAwC;AAC3D,MAAG,OAAOD,UAAP,IAAqB,UAAxB,EAAmC;AAC/BC,IAAAA,QAAQ,GAACD,UAAT;AACAA,IAAAA,UAAU,GAAC,UAAX;AACH;;AACD,MAAG,CAACD,OAAD,IAAY,CAACE,QAAhB,EAA0B;AACtB,QAAG,CAACA,QAAJ,EAAa;AACT,YAAM,mFAAN;AACH;;AACD,QAAGA,QAAH,EAAa;AACTA,MAAAA,QAAQ,CACJ;AACIC,QAAAA,OAAO,EAAE,KADb;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADI,CAAR;AAMH;;AACD,WAAO,KAAP;AACH;;AAED,MAAIJ,OAAO,GAAG,IAAIF,OAAJ,CAAYE,OAAZ,CAAd;AACA,MAAIK,YAAY,GAACL,OAAO,CAACM,eAAR,EAAjB;AAEA,MAAIC,GAAG,GAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CACN,UADM,EAENC,SAAS,CACPN,YAAY,CAACO,KADN,CAFH,EAKRF,OALQ,CAMN,UANM,EAONC,SAAS,CACPN,YAAY,CAACQ,KADN,CAPH,EAURH,OAVQ,CAWN,SAXM,EAYNT,UAAU,IAAE,UAZN,CAAV;AAeAN,EAAAA,QAAQ,CAACmB,GAAT,CAAaP,GAAb,EAAkBL,QAAlB;AACH,CAvCD;;AAyCAa,MAAM,CAACC,OAAP,GAAiB;AACbjB,EAAAA,gBAAgB,EAAEA;AADL,CAAjB","sourcesContent":["'use strict';\n\nvar httpJson = require('./http-json.js');\nvar urls = require('./urls.json');\nvar Address = require('./Address.js');\n\nvar findNearbyStores = function(address, pickUpType, callback) {\n    if(typeof pickUpType == 'function'){\n        callback=pickUpType;\n        pickUpType='Delivery';\n    }\n    if(!address || !callback) {\n        if(!callback){\n            throw('invalid findNearbyStores request. address and callback are required at a minimum.');\n        }\n        if(callback) {\n            callback(\n                {\n                    success: false,\n                    message: 'At least a partial address (minimum accepted is zipcode) is required to find stores'\n                }\n            );\n        }\n        return false;\n    }\n\n    var address = new Address(address)\n    var addressLines=address.getAddressLines();\n\n    var url = urls.store.find.replace(\n        '${line1}',\n        encodeURI(\n          addressLines.line1\n        )\n    ).replace(\n        '${line2}',\n        encodeURI(\n          addressLines.line2\n        )\n    ).replace(\n        '${type}',\n        pickUpType||'Delivery'\n    );\n\n    httpJson.get(url, callback);\n};\n\nmodule.exports = {\n    findNearbyStores: findNearbyStores\n};\n"]},"metadata":{},"sourceType":"module"}