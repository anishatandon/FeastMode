{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit/ProfileEditForm.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: \", \";\\n    align-items: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport * as actions from '../../../../backend/store/actions';\nimport Cards from 'react-credit-cards';\nimport styled from 'styled-components'; // import FileUploader from \"react-firebase-file-uploader\"\n// import * as firebase from \"firebase\";\n// Components\n\nimport { ProfileEditSchema } from '../ProfileSchemas.js';\nimport Dropdown from './Dropdown.js'; // import ImageUpload from './ImageUpload.js';\n// Images\n\nimport postmates from '../../../../images/postmates.jpg';\nimport doordash from '../../../../images/doordash.jpg';\nimport grubhub from '../../../../images/grubhub.png';\nimport ubereats from '../../../../images/ubereats.jpeg'; // Style\n\nimport { StyledForm, AlignedWrapper } from '../../../../style/FormUI/FormWrappers.js';\nimport { TextInput, Label } from '../../../../style/FormUI/Inputs.js';\nimport Button from '../../../../style/FormUI/Buttons.js';\nimport { Message, MessageWrapper } from '../../../../style/FormUI/Message.js';\nconst Wrapper = styled.div(_templateObject(), props => props.theme.mediaQueries.small ? \"column\" : \"row\");\n\nconst ProfileEditForm = ({\n  firebase,\n  error,\n  loading,\n  cleanUp,\n  editProfile\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        focused = _useState2[0],\n        setFocused = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        avatar = _useState4[0],\n        setAvatar = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        avatarURL = _useState6[0],\n        setAvatarURL = _useState6[1]; // const handleUploadSuccess = filename => {\n  //     setAvatar(filename);\n  //     firebase\n  //         .storage()\n  //         .ref(\"images\")\n  //         .child(filename)\n  //         .getDownloadURL()\n  //         .then(url => setAvatarURL(url));\n  // }\n\n\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  if (!firebase.profile.isLoaded) return null;\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: firebase.profile.firstName,\n      lastName: firebase.profile.lastName,\n      username: firebase.profile.username,\n      email: firebase.auth.email,\n      phone: firebase.profile.phone,\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: firebase.profile.creditCard,\n      expDate: firebase.profile.expDate,\n      secCode: firebase.profile.secCode,\n      creditCardType: firebase.profile.creditCardType,\n      apps: firebase.profile.apps,\n      file: avatar,\n      url: avatarURL\n    },\n    validationSchema: ProfileEditSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await editProfile(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, ({\n    values,\n    isValid,\n    isSubmitting\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    title: \"Personal information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(Dropdown, {\n    title: \"Credit Card Information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Cards, {\n    number: values.creditCard,\n    name: values.firstName + \" \" + values.lastName,\n    expiry: values.expDate,\n    cvc: values.secCode,\n    focused: focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Card Number\",\n    onClick: () => setFocused(\"number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Expiration Date\",\n    onClick: () => setFocused(\"expiry\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Security Code\",\n    onClick: () => setFocused(\"cvc\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), React.createElement(Dropdown, {\n    title: \"Apps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \" What apps do you have? \"), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"checkbox-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.postmates\",\n    type: \"checkbox\",\n    id: \"Postmates\",\n    checked: values.apps.postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.grubhub\",\n    type: \"checkbox\",\n    id: \"GrubHub\",\n    checked: values.apps.grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.doordash\",\n    type: \"checkbox\",\n    id: \"DoorDash\",\n    checked: values.apps.doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.ubereats\",\n    type: \"checkbox\",\n    id: \"UberEats\",\n    checked: values.apps.ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), \" \"))))), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Making changes...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Edit Profile\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, error)), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Message, {\n    success: true,\n    show: error === false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \" Profile changed successfully \"))));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  auth\n}) => ({\n  firebase,\n  loading: auth.profileEdit.loading,\n  error: auth.profileEdit.error\n});\n\nconst mapDispatchToProps = {\n  editProfile: actions.editProfile,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit/ProfileEditForm.js"],"names":["React","useEffect","useState","connect","Formik","Field","actions","Cards","styled","ProfileEditSchema","Dropdown","postmates","doordash","grubhub","ubereats","StyledForm","AlignedWrapper","TextInput","Label","Button","Message","MessageWrapper","Wrapper","div","props","theme","mediaQueries","small","ProfileEditForm","firebase","error","loading","cleanUp","editProfile","focused","setFocused","avatar","setAvatar","avatarURL","setAvatarURL","profile","isLoaded","firstName","lastName","username","email","auth","phone","passwordOne","passwordTwo","creditCard","expDate","secCode","creditCardType","apps","file","url","values","resetForm","setSubmitting","isValid","isSubmitting","mapStateToProps","profileEdit","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Field } from 'formik'\nimport * as actions from '../../../../backend/store/actions'\nimport Cards from 'react-credit-cards'\nimport styled from 'styled-components'\n// import FileUploader from \"react-firebase-file-uploader\"\n// import * as firebase from \"firebase\";\n\n// Components\nimport { ProfileEditSchema } from '../ProfileSchemas.js'\nimport Dropdown from './Dropdown.js'\n// import ImageUpload from './ImageUpload.js';\n\n// Images\nimport postmates from '../../../../images/postmates.jpg';\nimport doordash from '../../../../images/doordash.jpg';\nimport grubhub from '../../../../images/grubhub.png';\nimport ubereats from '../../../../images/ubereats.jpeg';\n\n// Style\nimport { StyledForm, AlignedWrapper } from '../../../../style/FormUI/FormWrappers.js'\nimport { TextInput, Label } from '../../../../style/FormUI/Inputs.js'\nimport Button from '../../../../style/FormUI/Buttons.js'\nimport { Message, MessageWrapper } from '../../../../style/FormUI/Message.js'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: ${props => props.theme.mediaQueries.small ? \"column\" : \"row\"};\n    align-items: center;\n`\n\nconst ProfileEditForm = ({ firebase, error, loading, cleanUp, editProfile }) => {\n    const [focused, setFocused] = useState(\"\")\n    const [avatar, setAvatar] = useState(\"\")\n    const [avatarURL, setAvatarURL] = useState(\"\")\n\n    // const handleUploadSuccess = filename => {\n    //     setAvatar(filename);\n    //     firebase\n    //         .storage()\n    //         .ref(\"images\")\n    //         .child(filename)\n    //         .getDownloadURL()\n    //         .then(url => setAvatarURL(url));\n    // }\n\n    useEffect(() => {\n        return () => {\n            cleanUp()\n        }\n    }, [cleanUp])\n\n    if (!firebase.profile.isLoaded) return null\n\n    return (\n        <Formik\n            initialValues={{\n                firstName: firebase.profile.firstName,\n                lastName: firebase.profile.lastName,\n                username: firebase.profile.username,\n                email: firebase.auth.email,\n                phone: firebase.profile.phone,\n                passwordOne: \"\",\n                passwordTwo: \"\",\n                creditCard: firebase.profile.creditCard,\n                expDate: firebase.profile.expDate,\n                secCode: firebase.profile.secCode,\n                creditCardType: firebase.profile.creditCardType,\n                apps: firebase.profile.apps,\n                file: avatar,\n                url: avatarURL,\n            }}\n            validationSchema = {ProfileEditSchema}\n            onSubmit = {async (values, { resetForm, setSubmitting }) => {\n                await editProfile(values)\n                resetForm()\n                setSubmitting(false)\n            }}\n        >\n            {({ values, isValid, isSubmitting }) => (\n                <StyledForm>\n                    {/* <div className=\"compensate-input text-input\">\n                            <label >Profile Picture</label>\n                            {avatarURL && <img src={avatarURL} />}\n                            <FileUploader\n                                accept=\"image/*\"\n                                name=\"avatar\"\n                                randomizeFilename\n                                storageRef={firebase.storage().ref(\"images\")}\n                                onUploadSuccess={handleUploadSuccess}\n                            />\n                    </div> */}\n                    <Dropdown title = \"Personal information\">\n                        <AlignedWrapper>\n                            <Field name = \"firstName\" type = \"text\" component = {TextInput} label = \"First Name\"/>\n                            <Field name = \"lastName\" type = \"text\" component = {TextInput} label = \"Last Name\"/>\n                        </AlignedWrapper>\n\n                        <Field name = \"username\" type = \"text\" component = {TextInput} label = \"Username\"/>\n                        <Field name = \"email\" type = \"email\" component = {TextInput} label = \"Email\"/>\n                        <Field name = \"phone\" type = \"text\" component = {TextInput} label = \"Phone\"/>\n                        \n                        <AlignedWrapper>\n                            <Field name = \"passwordOne\" type = \"password\" component = {TextInput} label = \"Password\"/>\n                            <Field name = \"passwordTwo\" type = \"password\" component = {TextInput} label = \"Confirm Password\"/>\n                        </AlignedWrapper>\n                    </Dropdown>\n\n                    <Dropdown title = \"Credit Card Information\">\n                        <Cards\n                            number={values.creditCard}\n                            name={values.firstName + \" \" + values.lastName}\n                            expiry={values.expDate}\n                            cvc={values.secCode}\n                            focused={focused}\n                        />\n                        <Field name = \"creditCard\" type = \"text\" component = {TextInput} label = \"Card Number\" onClick = {() => setFocused(\"number\")}/>\n                        <AlignedWrapper>\n                            <Field name = \"expDate\" type = \"text\" component = {TextInput} label = \"Expiration Date\" onClick = {() => setFocused(\"expiry\")}/>\n                            <Field name = \"secCode\" type = \"text\" component = {TextInput} label = \"Security Code\" onClick = {() => setFocused(\"cvc\")}/>\n                        </AlignedWrapper>\n                    </Dropdown>\n\n                    <Dropdown title = \"Apps\">\n                        <Label> What apps do you have? </Label>\n                        <Wrapper>\n                            <ul className = \"checkbox-input\">\n                                <li>\n                                <Field name = \"apps.postmates\" type = \"checkbox\" id = \"Postmates\" checked = {values.apps.postmates}/>\n                                <label for = \"Postmates\"> <img src = {postmates} /> </label>\n                                </li>\n\n                                <li>\n                                <Field name = \"apps.grubhub\" type = \"checkbox\" id = \"GrubHub\" checked = {values.apps.grubhub}/>\n                                <label for = \"GrubHub\"> <img src = {grubhub} /> </label>\n                                </li>\n\n                                <li>\n                                <Field name = \"apps.doordash\" type = \"checkbox\" id = \"DoorDash\" checked = {values.apps.doordash}/>\n                                <label for = \"DoorDash\"> <img src = {doordash} /> </label>\n                                </li>\n\n                                <li>\n                                <Field name = \"apps.ubereats\" type = \"checkbox\" id = \"UberEats\" checked = {values.apps.ubereats}/>\n                                <label for = \"UberEats\"> <img src = {ubereats} /> </label>\n                                </li>\n                            </ul>\n                        </Wrapper>\n                    </Dropdown>\n\n                    <Button\n                        disabled = { !isValid || isSubmitting}\n                        loading = {loading ? 'Making changes...' : null}\n                        type = \"submit\"\n                    > \n                        Edit Profile \n                    </Button>\n                \n                    <MessageWrapper>\n                        <Message error show = {error}>{ error }</Message>\n                    </MessageWrapper>\n                    <MessageWrapper>\n                        <Message success show = {error === false}> Profile changed successfully </Message>\n                    </MessageWrapper>\n                </StyledForm>\n            )}\n        </Formik>\n    )\n}\n\nconst mapStateToProps = ({ firebase, auth }) => ({\n    firebase,\n    loading: auth.profileEdit.loading,\n    error: auth.profileEdit.error\n})\n\nconst mapDispatchToProps = {\n    editProfile: actions.editProfile,\n    cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditForm)"]},"metadata":{},"sourceType":"module"}