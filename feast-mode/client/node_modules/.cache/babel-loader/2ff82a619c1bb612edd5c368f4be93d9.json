{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 1;\\n  width: 100%;\\n  min-height: 100vh;\\n  padding: 8rem 0rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Landing from './Auth/Landing';\nimport SignUp from './Auth/SignUp';\nimport LogOut from './Auth/LogOut';\nimport Home from './Home';\nimport SideDrawer from './Navigation/SideDrawer.js';\nimport PasswordReset from './Profile/PasswordReset.js.js';\nimport Profile from './Profile/index.js';\nimport About from './About';\nimport Navbar from './Navigation';\nimport EmailVerification from './Auth/EmailVerification';\nimport DisplayFriends from './Friends/Friends';\nimport PickFood from './Food/PickFood';\nimport Menu from './Food/Menu/index.js';\nimport DisplayMap from './Location/index.js'; // import Twilio from '../backend/server_twilio/src/App.js'\n\nimport '../style/Backdrop.css';\nimport '../style/EmailVerification.css';\nimport '../style/about.css';\nimport '../style/Card.css';\nimport '../style/AppsFormWrapper.css';\nexport const MainWrapper = styled.main(_templateObject(), ({\n  loggedIn,\n  path\n}) => !loggedIn || path === \"/profile_edit\" || path === \"/email_verification\" ? 'var(--color-background)' : 'var(--color-white)');\n\nconst App = ({\n  loggedIn,\n  emailVerified,\n  location\n}) => {\n  let routes;\n\n  if (loggedIn && !emailVerified) {\n    routes = React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.EMAIL_VERIFICATION,\n      component: EmailVerification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.ABOUT,\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LOG_OUT,\n      component: LogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.EMAIL_VERIFICATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  } else if (loggedIn && emailVerified) {\n    routes = React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.HOME,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LOG_OUT,\n      component: LogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.SIDEDRAWER,\n      component: SideDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PROFILE,\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.ABOUT,\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.DISPLAY_FRIENDS,\n      component: DisplayFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PICK_FOOD,\n      component: PickFood,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.MENU,\n      component: Menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.MAP,\n      component: DisplayMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.HOME,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n  } else {\n    routes = React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LANDING,\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.SIGN_UP,\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PASSWORD_RESET,\n      component: PasswordReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.LANDING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, null, routes);\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified\n});\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/App.js"],"names":["React","withRouter","Route","Switch","Redirect","ROUTES","connect","styled","Landing","SignUp","LogOut","Home","SideDrawer","PasswordReset","Profile","About","Navbar","EmailVerification","DisplayFriends","PickFood","Menu","DisplayMap","MainWrapper","main","loggedIn","path","App","emailVerified","location","routes","pathname","EMAIL_VERIFICATION","ABOUT","LOG_OUT","HOME","SIDEDRAWER","PROFILE","DISPLAY_FRIENDS","PICK_FOOD","MENU","MAP","LANDING","SIGN_UP","PASSWORD_RESET","mapStateToProps","firebase","auth","uid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Landing from './Auth/Landing'\nimport SignUp from './Auth/SignUp'\nimport LogOut from './Auth/LogOut'\nimport Home from './Home'\nimport SideDrawer from './Navigation/SideDrawer.js'\nimport PasswordReset from './Profile/PasswordReset.js.js'\nimport Profile from './Profile/index.js'\nimport About from './About'\nimport Navbar from './Navigation'\nimport EmailVerification from './Auth/EmailVerification'\nimport DisplayFriends from './Friends/Friends'\nimport PickFood from './Food/PickFood'\nimport Menu from './Food/Menu/index.js'\nimport DisplayMap from './Location/index.js'\n// import Twilio from '../backend/server_twilio/src/App.js'\n\nimport '../style/Backdrop.css'\nimport '../style/EmailVerification.css'\nimport '../style/about.css'\nimport '../style/Card.css'\nimport '../style/AppsFormWrapper.css'\n\nexport const MainWrapper = styled.main`\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  min-height: 100vh;\n  padding: 8rem 0rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${({ loggedIn, path }) => !loggedIn || path === \"/profile_edit\" || path === \"/email_verification\" ? 'var(--color-background)' : 'var(--color-white)'};\n`\n\nconst App = ({ loggedIn, emailVerified, location }) => {\n  let routes\n  \n  if (loggedIn && !emailVerified) {\n    routes = (\n      <>\n        <Navbar path = {location.pathname}/>\n        <MainWrapper loggedIn = {loggedIn} path = {location.pathname}>\n          <Switch> \n            <Route exact path={ROUTES.EMAIL_VERIFICATION} component={EmailVerification} />\n            <Route exact path={ROUTES.ABOUT} component={About} />\n            <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\n            <Redirect to={ROUTES.EMAIL_VERIFICATION} />\n          </Switch>\n        </MainWrapper>\n      </>\n    )\n    } else if (loggedIn && emailVerified) {\n    routes = (\n      <>\n        <Navbar path = {location.pathname}/>\n        <SideDrawer path = {location.pathname}/>\n\n        <MainWrapper loggedIn = {loggedIn} path = {location.pathname}>\n          <Switch>\n            <Route exact path={ROUTES.HOME} component={Home} />\n            <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\n            <Route exact path={ROUTES.SIDEDRAWER} component={SideDrawer} />\n            <Route exact path={ROUTES.PROFILE} component={Profile}/>\n            <Route exact path={ROUTES.ABOUT} component={About} />\n            <Route exact path={ROUTES.DISPLAY_FRIENDS} component={DisplayFriends} />\n            <Route exact path={ROUTES.PICK_FOOD} component={PickFood} />\n            <Route exact path={ROUTES.MENU} component={Menu} />\n            <Route exact path={ROUTES.MAP} component={DisplayMap} />\n            {/* <Route exact path={ROUTES.TWILIO} component={Twilio} /> */}\n            <Redirect to={ROUTES.HOME} />\n          </Switch>\n          \n        </MainWrapper>\n      </>\n    )\n  } else {\n    routes = (\n      <MainWrapper loggedIn = {loggedIn}>\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={Landing} />\n          <Route exact path={ROUTES.SIGN_UP} component={SignUp} />\n          <Route exact path={ROUTES.PASSWORD_RESET} component={PasswordReset} />\n          <Redirect to={ROUTES.LANDING} />\n        </Switch>\n      </MainWrapper>\n    )\n  }\n\n  return <>{ routes }</>\n}\n\nconst mapStateToProps = ({ firebase }) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified,\n})\n\nexport default withRouter(connect(mapStateToProps)(App))"]},"metadata":{},"sourceType":"module"}