{"ast":null,"code":"// import React, { Component } from 'react'\n// import { Link, withRouter } from 'react-router-dom'\n// import * as ROUTES from '../../constants/routes'\n// import { compose } from 'recompose'\n// import { withFirebase } from '../../backend/Firebase'\n// const INITIAL_STATE = {\n//   email: '',\n//   password: '',\n//   error: null,\n//   friends: [],\n//   orders: [],\n//   image: null,\n//   user: null,\n// }\n// const USER = null;\n// class SignInFormBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { ...INITIAL_STATE }\n//   }\n//   // conponentWillMount() {\n//   //   this.songsRef = base.syncState('users', {\n//   //     context: this,\n//   //     state: 'users'\n//   //   })\n//   // }\n//   //\n//   // componentWillUnmount() {\n//   //   base.\n//   // }\n//   onSubmit = event => {\n//     const { email, password } = this.state;\n//     this.props.firebase\n//       .doSignInWithEmailAndPassword(email, password)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       // .then( () => {\n//       //   this.props.history.push(ROUTES.HOME); // Can't perform a React state update on an unmounted component\n//       // })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n//     event.preventDefault();\n//   };\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n//   render() {\n//     const { email, password, error } = this.state;\n//     const isInvalid = password === '' || email === '';\n//     return (\n//       <form onSubmit={this.onSubmit} className = \"classic-form\">\n//         <div className = \"text-input\">\n//           <label> Email </label> <br />\n//           <input\n//             name = \"email\"\n//             value = {email}\n//             onChange = {this.onChange}\n//             type = \"text\"\n//           /> <br />\n//         </div>\n//         <div className = \"text-input\">\n//           <label> Password </label> <br />\n//           <input\n//             name = \"password\"\n//             value = {password}\n//             onChange = {this.onChange}\n//             type = \"password\"\n//           /> <br />\n//         </div>\n//         <button disabled={isInvalid} type = \"submit\" className = \"classic-button\"> Log In </button>\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n// const SignInForm = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFormBase);\n// const SignInLink = () => (\n//   <pre className = \"link-text\">\n//     Already have an account?   <Link to={ROUTES.LANDING} className = \"link\">Log In</Link>\n//   </pre>\n// );\n// export default SignInForm\n// export { SignInLink }","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignIn/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import React, { Component } from 'react'\n// import { Link, withRouter } from 'react-router-dom'\n// import * as ROUTES from '../../constants/routes'\n// import { compose } from 'recompose'\n// import { withFirebase } from '../../backend/Firebase'\n\n// const INITIAL_STATE = {\n//   email: '',\n//   password: '',\n//   error: null,\n//   friends: [],\n//   orders: [],\n//   image: null,\n//   user: null,\n// }\n\n// const USER = null;\n\n// class SignInFormBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { ...INITIAL_STATE }\n//   }\n\n//   // conponentWillMount() {\n//   //   this.songsRef = base.syncState('users', {\n//   //     context: this,\n//   //     state: 'users'\n//   //   })\n//   // }\n//   //\n//   // componentWillUnmount() {\n//   //   base.\n//   // }\n\n//   onSubmit = event => {\n//     const { email, password } = this.state;\n\n//     this.props.firebase\n//       .doSignInWithEmailAndPassword(email, password)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       // .then( () => {\n//       //   this.props.history.push(ROUTES.HOME); // Can't perform a React state update on an unmounted component\n//       // })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n\n//   render() {\n//     const { email, password, error } = this.state;\n\n//     const isInvalid = password === '' || email === '';\n\n//     return (\n//       <form onSubmit={this.onSubmit} className = \"classic-form\">\n\n//         <div className = \"text-input\">\n//           <label> Email </label> <br />\n//           <input\n//             name = \"email\"\n//             value = {email}\n//             onChange = {this.onChange}\n//             type = \"text\"\n//           /> <br />\n//         </div>\n        \n//         <div className = \"text-input\">\n//           <label> Password </label> <br />\n//           <input\n//             name = \"password\"\n//             value = {password}\n//             onChange = {this.onChange}\n//             type = \"password\"\n//           /> <br />\n//         </div>\n\n//         <button disabled={isInvalid} type = \"submit\" className = \"classic-button\"> Log In </button>\n\n//         {error && <p>{error.message}</p>}\n\n//       </form>\n//     );\n//   }\n// }\n\n// const SignInForm = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFormBase);\n\n// const SignInLink = () => (\n//   <pre className = \"link-text\">\n//     Already have an account?   <Link to={ROUTES.LANDING} className = \"link\">Log In</Link>\n//   </pre>\n// );\n\n// export default SignInForm\n// export { SignInLink }\n"]},"metadata":{},"sourceType":"module"}