{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Wizard.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\n\nclass Wizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.next = values => this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values\n    }));\n\n    this.previous = () => this.setState(state => ({\n      page: Math.max(state.page - 1, 0)\n    }));\n\n    this.validate = values => {\n      const activePage = React.Children.toArray(this.props.children)[this.state.page];\n      return activePage.props.validate ? activePage.props.validate(values) : {};\n    };\n\n    this.handleSubmit = (values, bag) => {\n      const _this$props = this.props,\n            children = _this$props.children,\n            onSubmit = _this$props.onSubmit;\n      const page = this.state.page;\n      const isLastPage = page === React.Children.count(children) - 1;\n\n      if (isLastPage) {\n        return onSubmit(values, bag);\n      } else {\n        bag.setTouched({});\n        bag.setSubmitting(false);\n        this.next(values);\n        console.log(\"Next\");\n      }\n    };\n\n    this.state = {\n      page: 0,\n      values: props.initialValues\n    };\n  }\n\n  render() {\n    const children = this.props.children;\n    const _this$state = this.state,\n          page = _this$state.page,\n          values = _this$state.values;\n    const activePage = React.Children.toArray(children)[page];\n    const isLastPage = page === React.Children.count(children) - 1;\n    return React.createElement(Formik, {\n      initialValues: values,\n      enableReinitialize: false,\n      validate: this.validate,\n      onSubmit: this.handleSubmit,\n      render: ({\n        values,\n        handleSubmit,\n        isSubmitting,\n        handleReset\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, activePage, React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, page > 0 && React.createElement(\"button\", {\n        type: \"button\",\n        className: \"classic-button\",\n        onClick: this.previous,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Previous\"), !isLastPage && React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"classic-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" Next \"), isLastPage && React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Submit\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nWizard.Page = ({\n  children\n}) => children;\n\nexport default Wizard;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/Wizard.js"],"names":["React","Component","Formik","Wizard","constructor","props","next","values","setState","state","page","Math","min","children","length","previous","max","validate","activePage","Children","toArray","handleSubmit","bag","onSubmit","isLastPage","count","setTouched","setSubmitting","console","log","initialValues","render","isSubmitting","handleReset","Page"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\n\nclass Wizard extends Component {\n  static Page = ({ children }) => children\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n      values: props.initialValues,\n    }\n  }\n\n  next = values =>\n    this.setState(state => ({\n      page: Math.min(state.page + 1, this.props.children.length - 1),\n      values,\n  }))\n\n  previous = () =>\n    this.setState(state => ({\n      page: Math.max(state.page - 1, 0),\n  }))\n\n  validate = values => {\n    const activePage = React.Children.toArray(this.props.children)[\n      this.state.page\n    ]\n    return activePage.props.validate ? activePage.props.validate(values) : {}\n  }\n\n  handleSubmit = (values, bag) => {\n    const { children, onSubmit } = this.props\n    const { page } = this.state\n    const isLastPage = page === React.Children.count(children) - 1\n    if (isLastPage) {\n      return onSubmit(values, bag)\n    } else {\n      bag.setTouched({})\n      bag.setSubmitting(false)\n      this.next(values)\n      console.log(\"Next\")\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    const { page, values } = this.state\n    const activePage = React.Children.toArray(children)[page]\n    const isLastPage = page === React.Children.count(children) - 1\n\n    return (\n      <Formik\n        initialValues = {values}\n        enableReinitialize = {false}\n        validate = {this.validate}\n        onSubmit = {this.handleSubmit}\n        render = {({ values, handleSubmit, isSubmitting, handleReset }) => (\n          <form onSubmit={handleSubmit}>\n            {activePage}\n            <div className=\"buttons\">\n              {page > 0 && (\n                <button type = \"button\" className = \"classic-button\" onClick={this.previous}>\n                  Previous\n</button>\n              )}\n\n              {!isLastPage && <button type = \"submit\" className = \"classic-button\"> Next </button>}\n              {isLastPage && (\n                <button type=  \"submit\" disabled = {isSubmitting}>\n                  Submit\n                </button>\n              )}\n            </div>\n\n          </form>\n        )}\n      />\n    )\n  }\n}\n\n\nexport default Wizard"]},"metadata":{},"sourceType":"module"}