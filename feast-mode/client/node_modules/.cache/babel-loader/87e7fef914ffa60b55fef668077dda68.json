{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/SignUp/SignUpForm.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: \", \";\\n  align-items: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, Formik } from 'formik';\nimport * as actions from '../../../backend/store/actions';\nimport { connect } from 'react-redux';\nimport Cards from 'react-credit-cards';\nimport styled from 'styled-components';\nimport { SignUpSchema } from './SignUpSchema.js';\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js';\nimport Button from '../../../style/FormUI/Buttons.js';\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js';\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js';\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\nconst Wrapper = styled.div(_templateObject(), props => props.theme.mediaQueries.small ? \"column\" : \"row\");\n\nconst SignUpForm = ({\n  signUp,\n  cleanUp,\n  error,\n  loading\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        focused = _useState2[0],\n        setFocused = _useState2[1];\n\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: \"\",\n      creditCardType: \"\",\n      expDate: \"\",\n      secCode: \"\",\n      apps: {\n        postmates: false,\n        grubhub: false,\n        doordash: false,\n        ubereats: false\n      }\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await signUp(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, ({\n    values,\n    isSubmitting,\n    isValid\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"First Name\",\n    onClick: () => setFocused(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Last Name\",\n    onClick: () => setFocused(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    required: true,\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    required: true,\n    component: TextInput,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Cards, {\n    number: values.creditCard,\n    name: values.firstName + \" \" + values.lastName,\n    expiry: values.expDate,\n    cvc: values.secCode,\n    focused: focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Card Number\",\n    onClick: () => setFocused(\"number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Expiration Date\",\n    onClick: () => setFocused(\"expiry\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Security Code\",\n    onClick: () => setFocused(\"cvc\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" What apps do you have? \"), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"checkbox-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.postmates\",\n    type: \"checkbox\",\n    id: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: postmates,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.grubhub\",\n    type: \"checkbox\",\n    id: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: grubhub,\n    alt: GribHub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.doordash\",\n    type: \"checkbox\",\n    id: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: doordash,\n    alt: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.ubereats\",\n    type: \"checkbox\",\n    id: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: ubereats,\n    alt: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), \" \")))), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Creating account...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, error))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/SignUp/SignUpForm.js"],"names":["React","useEffect","useState","Field","Formik","actions","connect","Cards","styled","SignUpSchema","StyledForm","AlignedWrapper","Button","TextInput","Label","Message","MessageWrapper","postmates","doordash","grubhub","ubereats","Wrapper","div","props","theme","mediaQueries","small","SignUpForm","signUp","cleanUp","error","loading","focused","setFocused","firstName","lastName","username","email","phone","passwordOne","passwordTwo","creditCard","creditCardType","expDate","secCode","apps","values","setSubmitting","isSubmitting","isValid","GribHub","mapStateToProps","auth","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Field, Formik } from 'formik'\nimport * as actions from '../../../backend/store/actions'\nimport { connect } from 'react-redux'\nimport Cards from 'react-credit-cards'\nimport styled from 'styled-components'\n\nimport { SignUpSchema } from './SignUpSchema.js'\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js'\nimport Button from '../../../style/FormUI/Buttons.js'\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js'\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js'\n\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg'\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: ${props => props.theme.mediaQueries.small ? \"column\" : \"row\"};\n  align-items: center;\n`\n\nconst SignUpForm = ({ signUp, cleanUp, error, loading }) => {\n  const [focused, setFocused] = useState(\"\")\n\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return (\n    <Formik\n      initialValues = {{\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        phone: \"\",\n        passwordOne: \"\",\n        passwordTwo: \"\",\n        creditCard: \"\",\n        creditCardType: \"\",\n        expDate: \"\",\n        secCode: \"\",\n        apps: { postmates: false, grubhub: false, doordash: false, ubereats: false },\n      }}\n      validationSchema = {SignUpSchema}\n      onSubmit = {async (values, { setSubmitting }) => {\n        await signUp(values)\n        setSubmitting(false)\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <StyledForm>\n\n          <AlignedWrapper>\n            <Field name = \"firstName\" type = \"text\" required component = {TextInput} label = \"First Name\" onClick = {() => setFocused(\"name\")} />\n            <Field name = \"lastName\" type = \"text\" required component = {TextInput} label = \"Last Name\" onClick = {() => setFocused(\"name\")} />\n          </AlignedWrapper>\n\n          <Field name = \"username\" type = \"text\" required component = {TextInput} label = \"Username\" />\n          <Field name = \"email\" type = \"email\" required component = {TextInput} label = \"Email\" />\n          <Field name = \"phone\" type = \"text\" required component = {TextInput} label = \"Phone\" />\n\n          <AlignedWrapper>\n            <Field name = \"passwordOne\" type = \"password\" required component = {TextInput} label = \"Password\" />\n            <Field name = \"passwordTwo\" type = \"password\" required component = {TextInput} label = \"Confirm Password\" />\n          </AlignedWrapper>\n\n          <Cards\n            number = {values.creditCard}\n            name = {values.firstName + \" \" + values.lastName}\n            expiry = {values.expDate}\n            cvc = {values.secCode}\n            focused = {focused}\n          />\n\n          <Field name = \"creditCard\" type = \"text\" required component = {TextInput} label = \"Card Number\" onClick = {() => setFocused(\"number\")} />\n          <AlignedWrapper>\n            <Field name = \"expDate\" type = \"text\" required component = {TextInput} label = \"Expiration Date\" onClick = {() => setFocused(\"expiry\")} />\n            <Field name = \"secCode\" type = \"text\" required component = {TextInput} label = \"Security Code\" onClick = {() => setFocused(\"cvc\")} />\n          </AlignedWrapper>\n\n          <Label> What apps do you have? </Label>\n          <Wrapper>\n            <ul className=\"checkbox-input\">\n              <li>\n                <Field name = \"apps.postmates\" type=\"checkbox\" id=\"Postmates\" />\n                <label for = \"Postmates\"> <img src={postmates} alt/> </label>\n              </li>\n\n              <li>\n                <Field name = \"apps.grubhub\" type=\"checkbox\" id=\"GrubHub\" />\n                <label for = \"GrubHub\"> <img src={grubhub} alt = {GribHub}/> </label>\n              </li>\n\n              <li>\n                <Field name = \"apps.doordash\" type = \"checkbox\" id = \"DoorDash\" />\n                <label for = \"DoorDash\"> <img src = {doordash} alt = \"DoorDash\" /> </label>\n              </li>\n\n              <li>\n                <Field name = \"apps.ubereats\" type = \"checkbox\" id = \"UberEats\" />\n                <label for = \"UberEats\"> <img src = {ubereats} alt = \"UberEats\" /> </label>\n              </li>\n            </ul>\n          </Wrapper>\n\n          <Button\n            disabled={!isValid || isSubmitting}\n            loading={loading ? 'Creating account...' : null}\n            type=\"submit\"\n          >\n            Sign Up\n          </Button>\n\n          <MessageWrapper>\n            <Message error show={error}>{error}</Message>\n          </MessageWrapper>\n\n        </StyledForm>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)"]},"metadata":{},"sourceType":"module"}