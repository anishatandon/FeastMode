{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nconst INITIAL_STATE = {\n  firstName: '',\n  lastName: '',\n  username: '',\n  passwordOne: '',\n  passwordTwo: '',\n  email: '',\n  phone: '',\n  touched: {\n    firstName: false,\n    lastName: false,\n    username: false,\n    passwordOne: false,\n    passwordTwo: true,\n    email: false,\n    phone: false\n  }\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (isInvalid === true) {\n        if (passwordOne === '' || email === '' || phone === '' || username === '') {\n          alert(\"Please fill out all fields\");\n        } else {\n          alert(\"Passwords must match\");\n        }\n      } else {\n        this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n          // Create a user in your Firebase realtime database\n          return this.props.firebase.user(authUser.user.uid).set({\n            username,\n            email,\n            phone\n          });\n        }).then(() => {\n          this.setState(_objectSpread({}, INITIAL_STATE));\n          this.props.history.push('/pay');\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: _objectSpread({}, this.state.touched, {\n          [field]: true\n        })\n      });\n    };\n\n    this.validate = () => {\n      return {\n        firstName: this.state.firstName.length == 0,\n        lastName: this.state.lastName.length == 0,\n        username: this.state.username.length == 0,\n        passwordOne: this.state.passwordOne.length == 0,\n        passwordTwo: this.state.passwordTwo != this.state.passwordOne,\n        phone: this.state.phone.length == 0,\n        email: this.state.email.length == 0\n      };\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const errors = this.validate();\n\n    const shouldMarkError = field => {\n      const hasError = errors[field];\n      const shouldShow = this.state.touched[field];\n      return hasError && shouldShow;\n    };\n\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"classic-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"aligned-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: shouldMarkError(\"firstName\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" First Name \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"firstName\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"firstName\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" Please enter your name \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Last Name \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"lastName\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" Username \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"username\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"username\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" Please enter a username \")), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \" Email \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"email\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"email\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Please enter your email \")), React.createElement(\"div\", {\n      className: [\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" Phone Number \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"phone\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"phone\"),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"phone\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" Please enter your phone number \")), React.createElement(\"div\", {\n      className: \"aligned-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: shouldMarkError(\"passwordOne\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" Password \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: this.state.passwordOne,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur(\"passwordOne\"),\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" Please enter a password \")), React.createElement(\"div\", {\n      className: shouldMarkError(\"passwordTwo\") && \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: this.state.passwordTwo,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error-text\",\n      style: {\n        display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" Passwords don't match \"))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"classic-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" Next \"));\n  }\n\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 200\n  },\n  __self: this\n}, \"New to FeastMode?   \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 201\n  },\n  __self: this\n}, \"Sign Up\"));\n\nexport default SignUpForm;\nexport { SignUpLink, INITIAL_STATE };","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js"],"names":["React","Component","Link","withRouter","compose","ROUTES","withFirebase","INITIAL_STATE","firstName","lastName","username","passwordOne","passwordTwo","email","phone","touched","SignUpFormBase","constructor","props","handleSubmit","event","preventDefault","isInvalid","alert","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","setState","history","push","catch","error","handleChange","target","name","value","handleBlur","field","evt","state","validate","length","render","errors","shouldMarkError","hasError","shouldShow","display","join","SignUpForm","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    passwordOne: '',\n    passwordTwo: '',\n    email: '',\n    phone: '',\n    touched: {\n        firstName: false,\n        lastName: false,\n        username: false,\n        passwordOne: false,\n        passwordTwo: true,\n        email: false,\n        phone: false,\n    }\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        if (isInvalid === true) {\n            if (passwordOne === '' || email === '' || phone === '' || username === ''){\n                alert(\"Please fill out all fields\")\n            } else {\n                alert(\"Passwords must match\")\n            }\n        } else {\n            this.props.firebase\n                .doCreateUserWithEmailAndPassword(email, passwordOne)\n                .then(authUser => {\n                // Create a user in your Firebase realtime database\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                    username,\n                    email,\n                    phone,\n                    })\n                })\n                .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push('/pay');\n                })\n                .catch(error => {\n                this.setState({ error });\n                });\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: {\n                ...this.state.touched, [field]: true\n            }\n        })\n    }\n\n    validate = () => {\n        return {\n            firstName: this.state.firstName.length == 0,\n            lastName: this.state.lastName.length == 0,\n            username: this.state.username.length == 0,\n            passwordOne: this.state.passwordOne.length == 0,\n            passwordTwo: this.state.passwordTwo != this.state.passwordOne,\n            phone: this.state.phone.length == 0,\n            email: this.state.email.length == 0\n        }\n    }\n    \n    render() {\n        const errors = this.validate()\n        const shouldMarkError = (field) => {\n            const hasError = errors[field]\n            const shouldShow = this.state.touched[field]\n            return hasError && shouldShow\n        }\n\n       \n\n        return (\n            <form onSubmit={this.handleSubmit} className = \"classic-form\">\n\n                <div className = \"aligned-inputs\"> \n                    <div className = {shouldMarkError(\"firstName\") && \"error\"}>\n                        <label> First Name </label> <br />\n                        <input\n                        name = \"firstName\"\n                        value = {this.state.firstName}\n                        onChange = {this.handleChange}\n                        onBlur = {this.handleBlur(\"firstName\")}\n                        type = \"text\"\n                        /> <br />\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"firstName\") ? \"block\" : \"none\" }}> Please enter your name </p>\n                    </div>\n\n                    <div>\n                        <label> Last Name </label> <br />\n                        <input\n                        name = \"lastName\"\n                        value = {this.state.lastName}\n                        onChange = {this.handleChange}\n                        onBlur = {this.handleBlur(\"lastName\")}\n                        type = \"text\"\n                        /> <br/>\n                    </div>\n                </div>\n\n                <div className = {[\"compensate-input\", shouldMarkError(\"username\") && \"error\"].join(\" \")}>\n                    <label> Username </label> <br />\n                    <input\n                    name = \"username\"\n                    value = {this.state.username}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"username\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"username\") ? \"block\" : \"none\" }}> Please enter a username </p>\n                </div>\n                \n                <div className = {[\"compensate-input\", shouldMarkError(\"email\") && \"error\"].join(\" \")}> \n                    <label> Email </label> <br />\n                    <input\n                    name = \"email\"\n                    value = {this.state.email}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"email\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"email\") ? \"block\" : \"none\" }}> Please enter your email </p>\n                </div>\n                \n                <div className = {[\"compensate-input\", shouldMarkError(\"phone\") && \"error\"].join(\" \")}>\n                    <label> Phone Number </label> <br />\n                    <input\n                    name = \"phone\"\n                    value = {this.state.phone}\n                    onChange = {this.handleChange}\n                    onBlur = {this.handleBlur(\"phone\")}\n                    type = \"text\"\n                    /> <br/>\n                    <p className = \"error-text\" style = {{ display: shouldMarkError(\"phone\") ? \"block\" : \"none\" }}> Please enter your phone number </p>\n                </div>\n                \n                <div className = \"aligned-inputs\"> \n                    <div className = {shouldMarkError(\"passwordOne\") && \"error\"}>\n                        <label> Password </label> <br />\n                        <input\n                        name = \"passwordOne\"\n                        value = {this.state.passwordOne}\n                        onChange ={ this.handleChange}\n                        onBlur = {this.handleBlur(\"passwordOne\")}\n                        type = \"password\"\n                        /> <br/>\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordOne\") ? \"block\" : \"none\" }}> Please enter a password </p>\n                    </div>\n                    \n                    <div className = {shouldMarkError(\"passwordTwo\") && \"error\"}>\n                        <label> Confirm Password </label> <br />\n                        <input\n                        name = \"passwordTwo\"\n                        value = {this.state.passwordTwo}\n                        onChange = {this.handleChange}\n                        type = \"password\"\n                        /> <br/>\n                        <p className = \"error-text\" style = {{ display: shouldMarkError(\"passwordTwo\") ? \"block\" : \"none\" }}> Passwords don't match </p>\n                    </div>\n                </div>\n\n                <button type = \"submit\" className = \"classic-button\"> Next </button>\n\n            </form>\n        );\n    }\n}\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nconst SignUpLink = () => (\n    <pre className = \"link-text\">\n      New to FeastMode?   <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\n    </pre>\n);\n\nexport default SignUpForm\nexport { SignUpLink, INITIAL_STATE };\n"]},"metadata":{},"sourceType":"module"}