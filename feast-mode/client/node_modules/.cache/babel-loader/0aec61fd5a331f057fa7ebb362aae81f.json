{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../../backend/Firebase';\nimport { Form, Field, ErrorMessage, withFormik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../backend/store/actions';\n\nconst SignUpForm = ({\n  errors,\n  touched,\n  isSubmitting\n}) => React.createElement(Form, {\n  className: \"classic-form\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"aligned-inputs text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: touched.firstName && errors.firstName && \"text-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \" First Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"firstName\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"firstName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: touched.lastName && errors.lastName && \"text-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \" Last Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"lastName\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"lastName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: [\"compensate-input text-input\", touched.username && errors.username && \"text-error\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \" Username \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"username\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"username\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: [\"compensate-input text-input\", touched.email && errors.email && \"text-error\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \" Email \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"email\",\n  type: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: [\"compensate-input text-input\", touched.phone && errors.phone && \"text-error\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \" Phone Number \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"phone\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"phone\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"aligned-inputs text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: touched.passwordOne && errors.passwordOne && \"text-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \" Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"passwordOne\",\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"passwordOne\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: touched.passwordTwo && errors.passwordTwo && \"text-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"passwordTwo\",\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"passwordTwo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}))), React.createElement(\"button\", {\n  disabled: isSubmitting,\n  className: \"classic-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \" Next \"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, \" \"));\n\nconst FormikForm = withFormik({\n  mapPropsToValues() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\"\n    };\n  },\n\n  validationSchema: yup.object().shape({\n    firstName: yup.string(\"Must be a velid name\").required(\"Please enter your name\"),\n    lastName: yup.string(\"Must be a velid name\"),\n    username: yup.string(\"Must be a velid username\").min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n    email: yup.string(\"Must be a velid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n    phone: yup.number(\"Must be a valid phone number\").positive(\"Must be a valid phone number\").integer(\"Must be a valid phone number\").required(\"Please enter a phone number\"),\n    passwordOne: yup.string().min(6, \"Password must be at least 6 characters\").required(\"Please enter a password\"),\n    passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setSubmitting\n  }) {\n    const username = values.username,\n          email = values.email,\n          phone = values.phone,\n          passwordOne = values.passwordOne; // Firebase.doCreateUserWithEmailAndPassword(email, passwordOne)\n    //     .then(authUser => {\n    //     // Create a user in your Firebase realtime database\n    //     return Firebase\n    //         .user(authUser.user.uid)\n    //         .set({\n    //         username,\n    //         email,\n    //         phone,\n    //         })\n    //     })\n    //     .then(() => {\n    //     this.setState({ ...INITIAL_STATE })\n    //     this.props.history.push('/pay')\n    //     })\n    //     .catch(error => {\n    //     this.setState({ error })\n    // })\n\n    setTimeout(() => {\n      console.log(\"Submitted\");\n      resetForm();\n      setSubmitting(false);\n    }, 1000);\n  }\n\n})(SignUpForm);\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp // const INITIAL_STATE = {\n  //     firstName: '',\n  //     lastName: '',\n  //     username: '',\n  //     passwordOne: '',\n  //     passwordTwo: '',\n  //     email: '',\n  //     phone: '',\n  //     touched: {\n  //         firstName: false,\n  //         lastName: false,\n  //         username: false,\n  //         passwordOne: false,\n  //         passwordTwo: false,\n  //         email: false,\n  //         phone: false,\n  // //     }\n  // };\n  // class SignUpFormBase extends Component {\n  //     constructor(props) {\n  //         super(props);\n  //         this.state = { ...INITIAL_STATE };\n  //     }\n  //     handleSubmit = event => {\n  //         const { username, email, phone, passwordOne, passwordTwo } = this.state;\n  //         event.preventDefault();\n  //         this.props.firebase\n  //             .doCreateUserWithEmailAndPassword(email, passwordOne)\n  //             .then(authUser => {\n  //             // Create a user in your Firebase realtime database\n  //             return this.props.firebase\n  //                 .user(authUser.user.uid)\n  //                 .set({\n  //                 username,\n  //                 email,\n  //                 phone,\n  //                 })\n  //             })\n  //             .then(() => {\n  //             this.setState({ ...INITIAL_STATE });\n  //             this.props.history.push('/pay');\n  //             })\n  //             .catch(error => {\n  //             this.setState({ error });\n  //             });\n  //     }\n  //     render() {\n  //         return (\n  //             <div> All gone </div>\n  //         );\n  //     }\n  // }\n  // const SignUpForm = compose(\n  //     withRouter,\n  //     withFirebase,\n  // )(FormikForm);\n\n};\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, \"New to FeastMode?   \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196\n  },\n  __self: this\n}, \"Sign Up\"));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);\nexport { SignUpLink };","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js"],"names":["React","Component","Link","withRouter","compose","ROUTES","withFirebase","Form","Field","ErrorMessage","withFormik","yup","connect","actions","SignUpForm","errors","touched","isSubmitting","firstName","msg","lastName","username","join","email","phone","passwordOne","passwordTwo","FormikForm","mapPropsToValues","validationSchema","object","shape","string","required","min","number","positive","integer","oneOf","ref","handleSubmit","values","resetForm","setSubmitting","setTimeout","console","log","mapStateToProps","state","mapDispatchToProps","signUp","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../../backend/Firebase'\nimport { Form, Field, ErrorMessage, withFormik } from 'formik'\nimport * as yup from 'yup'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../backend/store/actions'\n\nconst SignUpForm = ({\n    errors,\n    touched,\n    isSubmitting\n}) => (\n    <Form className = \"classic-form\">\n        <div className = \"aligned-inputs text-input\"> \n            <div className = {touched.firstName && errors.firstName && \"text-error\"}>\n                <label> First Name </label> <br />\n                <Field name = \"firstName\" type = \"text\"/> <br />\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"firstName\" />\n            </div>\n\n            <div className = {touched.lastName && errors.lastName && \"text-error\"}>\n                <label> Last Name </label> <br />\n                <Field name = \"lastName\" type = \"text\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"lastName\" />\n            </div>\n        </div>\n\n        <div className = {[\"compensate-input text-input\", touched.username && errors.username && \"text-error\"].join(' ')}>\n            <label> Username </label> <br />\n            <Field name = \"username\" type = \"text\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"username\" />\n        </div>\n        \n        <div className = {[\"compensate-input text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \n            <label> Email </label> <br />\n            <Field name = \"email\" type = \"email\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\n        </div>\n        \n        <div className = {[\"compensate-input text-input\", touched.phone && errors.phone && \"text-error\"].join(' ')}>\n            <label> Phone Number </label> <br />\n            <Field name = \"phone\" type = \"text\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"phone\" />\n        </div>\n        \n        <div className = \"aligned-inputs text-input\"> \n            <div className = {touched.passwordOne && errors.passwordOne && \"text-error\"}>\n                <label> Password </label> <br />\n                <Field name = \"passwordOne\" type = \"password\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"passwordOne\" />\n            </div>\n            \n            <div className = {touched.passwordTwo && errors.passwordTwo && \"text-error\"}>\n                <label> Confirm Password </label> <br />\n                <Field name = \"passwordTwo\" type = \"password\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"passwordTwo\" />\n            </div>\n        </div>\n\n        <button disabled = {isSubmitting} className = \"classic-button\"> Next </button>\n        <p> </p>\n\n    </Form>\n)\n\nconst FormikForm = withFormik({\n    mapPropsToValues() {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            username: \"\",\n            email: \"\",\n            phone: \"\",\n            passwordOne: \"\",\n            passwordTwo: \"\"\n        }\n    },\n\n    validationSchema: yup.object().shape({\n        firstName: yup.string(\"Must be a velid name\").required(\"Please enter your name\"),\n        lastName: yup.string(\"Must be a velid name\"),\n        username: yup.string(\"Must be a velid username\").min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n        email: yup.string(\"Must be a velid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n        phone: yup.number(\"Must be a valid phone number\").positive(\"Must be a valid phone number\").integer(\"Must be a valid phone number\").required(\"Please enter a phone number\"),\n        passwordOne: yup.string().min(6, \"Password must be at least 6 characters\").required(\"Please enter a password\"),\n        passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n    }),\n\n    handleSubmit(values, { resetForm, setSubmitting }) {\n        const { username, email, phone, passwordOne} = values\n\n        // Firebase.doCreateUserWithEmailAndPassword(email, passwordOne)\n        //     .then(authUser => {\n        //     // Create a user in your Firebase realtime database\n        //     return Firebase\n        //         .user(authUser.user.uid)\n        //         .set({\n        //         username,\n        //         email,\n        //         phone,\n        //         })\n        //     })\n        //     .then(() => {\n        //     this.setState({ ...INITIAL_STATE })\n        //     this.props.history.push('/pay')\n        //     })\n        //     .catch(error => {\n        //     this.setState({ error })\n        // })\n\n        setTimeout(() => {\n            console.log(\"Submitted\") \n            resetForm()\n            setSubmitting(false)\n        }, 1000)\n    }\n})(SignUpForm)\n\nconst mapStateToProps = (state) => ({\n    \n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp\n}\n\n// const INITIAL_STATE = {\n//     firstName: '',\n//     lastName: '',\n//     username: '',\n//     passwordOne: '',\n//     passwordTwo: '',\n//     email: '',\n//     phone: '',\n//     touched: {\n//         firstName: false,\n//         lastName: false,\n//         username: false,\n//         passwordOne: false,\n//         passwordTwo: false,\n//         email: false,\n//         phone: false,\n// //     }\n// };\n\n// class SignUpFormBase extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { ...INITIAL_STATE };\n//     }\n\n//     handleSubmit = event => {\n//         const { username, email, phone, passwordOne, passwordTwo } = this.state;\n\n//         event.preventDefault();\n\n//         this.props.firebase\n//             .doCreateUserWithEmailAndPassword(email, passwordOne)\n//             .then(authUser => {\n//             // Create a user in your Firebase realtime database\n//             return this.props.firebase\n//                 .user(authUser.user.uid)\n//                 .set({\n//                 username,\n//                 email,\n//                 phone,\n//                 })\n//             })\n//             .then(() => {\n//             this.setState({ ...INITIAL_STATE });\n//             this.props.history.push('/pay');\n//             })\n//             .catch(error => {\n//             this.setState({ error });\n//             });\n//     }\n\n//     render() {\n//         return (\n//             <div> All gone </div>\n//         );\n//     }\n// }\n\n// const SignUpForm = compose(\n//     withRouter,\n//     withFirebase,\n// )(FormikForm);\n\nconst SignUpLink = () => (\n    <pre className = \"link-text\">\n      New to FeastMode?   <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\n    </pre>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)\nexport { SignUpLink }"]},"metadata":{},"sourceType":"module"}