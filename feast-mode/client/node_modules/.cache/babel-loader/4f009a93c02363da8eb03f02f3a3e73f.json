{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ImageUpload.js\";\nimport React, { Component, useEffect, useState } from 'react'; // import { connect } from 'react-redux'\n// import { Formik, Field } from 'formik'\n// import * as actions from '../../../../backend/store/actions'\n\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\"; // import * as actions from '../../../../backend/store/actions'\n// import editProfilePicture from '../../../backend/store/actions/authActions.js'\n\nclass ImageUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      avatar: \"\",\n      avatarURL: \"\"\n    };\n\n    this.handleUploadSuccess = filename => {\n      this.setState({\n        avatar: filename\n      });\n      firebase.storage().ref(\"images\").child(filename).getDownloadURL().then(url => this.setState({\n        avatarURL: url\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Profile Picture:\"), this.state.avatarURL && React.createElement(\"img\", {\n      src: this.state.avatarURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(FileUploader, {\n      accept: \"image/*\",\n      name: \"avatar\",\n      randomizeFilename: true,\n      storageRef: firebase.storage().ref(\"images\"),\n      onUploadSuccess: this.handleUploadSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n} // class ImageUpload2 extends Component {\n//     state = {\n//         avatar: \"\",\n//         avatarURL: \"\"\n//     };\n//     handleUploadSuccess = filename => {\n//         this.setState({ avatar: filename});\n//         firebase\n//             .storage()\n//             .ref(\"images\")\n//             .child(filename)\n//             .getDownloadURL()\n//             .then(url => this.setState({ avatarURL: url }));\n//     };\n//     handleSubmit = () => {async (values, { resetForm, setSubmitting }) => {\n//         await editProfilePicture(values)\n//         resetForm()\n//         setSubmitting(false)\n//     }}\n//     render() {\n//         return (\n//             <div>\n//                 <form>\n//                     <label >Profile Picture:</label>\n//                     {this.state.avatarURL && <img src={this.state.avatarURL} />}\n//                     <FileUploader\n//                         accept=\"image/*\"\n//                         name=\"avatar\"\n//                         randomizeFilename\n//                         storageRef={firebase.storage().ref(\"images\")}\n//                         onUploadSuccess={this.handleUploadSuccess}\n//                     />\n//                     <button onSubmit={this.handleSubmit}>Upload all the things</button>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n// const mapStateToProps = ({ firebase, auth }) => ({\n//     firebase,\n//     loading: auth.profileEdit.loading,\n//     error: auth.profileEdit.error\n// })\n// const mapDispatchToProps = {\n//     editProfilePicture: actions.editProfilePicture,\n//     cleanUp: actions.clean,\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(ImageUpload)\n\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ImageUpload.js"],"names":["React","Component","useEffect","useState","firebase","FileUploader","ImageUpload","state","avatar","avatarURL","handleUploadSuccess","filename","setState","storage","ref","child","getDownloadURL","then","url","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD,C,CACA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CACA;AACA;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADwB;;AAAA,SAMhCC,mBANgC,GAMVC,QAAQ,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEG;AAAV,OAAd;AACAP,MAAAA,QAAQ,CACHS,OADL,GAEKC,GAFL,CAES,QAFT,EAGKC,KAHL,CAGWJ,QAHX,EAIKK,cAJL,GAKKC,IALL,CAKUC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAES;AAAb,OAAd,CALjB;AAMH,KAd+B;AAAA;;AAgBhCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEK,KAAKZ,KAAL,CAAWE,SAAX,IAAwB;AAAK,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7B,EAGI,oBAAC,YAAD;AACI,MAAA,MAAM,EAAC,SADX;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,iBAAiB,MAHrB;AAII,MAAA,UAAU,EAAEL,QAAQ,CAACS,OAAT,GAAmBC,GAAnB,CAAuB,QAAvB,CAJhB;AAKI,MAAA,eAAe,EAAE,KAAKJ,mBAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AAeH;;AAhC+B,C,CAoCpC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeJ,WAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\n// import { connect } from 'react-redux'\n// import { Formik, Field } from 'formik'\n// import * as actions from '../../../../backend/store/actions'\n\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n// import * as actions from '../../../../backend/store/actions'\n// import editProfilePicture from '../../../backend/store/actions/authActions.js'\n\n\nclass ImageUpload extends Component {\n    state = {\n        avatar: \"\",\n        avatarURL: \"\"\n    };\n\n    handleUploadSuccess = filename => {\n        this.setState({ avatar: filename});\n        firebase\n            .storage()\n            .ref(\"images\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => this.setState({ avatarURL: url }));\n    };\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label >Profile Picture:</label>\n                    {this.state.avatarURL && <img src={this.state.avatarURL} />}\n                    <FileUploader\n                        accept=\"image/*\"\n                        name=\"avatar\"\n                        randomizeFilename\n                        storageRef={firebase.storage().ref(\"images\")}\n                        onUploadSuccess={this.handleUploadSuccess}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\n\n// class ImageUpload2 extends Component {\n//     state = {\n//         avatar: \"\",\n//         avatarURL: \"\"\n//     };\n\n//     handleUploadSuccess = filename => {\n//         this.setState({ avatar: filename});\n//         firebase\n//             .storage()\n//             .ref(\"images\")\n//             .child(filename)\n//             .getDownloadURL()\n//             .then(url => this.setState({ avatarURL: url }));\n//     };\n\n//     handleSubmit = () => {async (values, { resetForm, setSubmitting }) => {\n//         await editProfilePicture(values)\n//         resetForm()\n//         setSubmitting(false)\n//     }}\n\n//     render() {\n//         return (\n//             <div>\n//                 <form>\n//                     <label >Profile Picture:</label>\n//                     {this.state.avatarURL && <img src={this.state.avatarURL} />}\n//                     <FileUploader\n//                         accept=\"image/*\"\n//                         name=\"avatar\"\n//                         randomizeFilename\n//                         storageRef={firebase.storage().ref(\"images\")}\n//                         onUploadSuccess={this.handleUploadSuccess}\n//                     />\n//                     <button onSubmit={this.handleSubmit}>Upload all the things</button>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n// const mapStateToProps = ({ firebase, auth }) => ({\n//     firebase,\n//     loading: auth.profileEdit.loading,\n//     error: auth.profileEdit.error\n// })\n// const mapDispatchToProps = {\n//     editProfilePicture: actions.editProfilePicture,\n//     cleanUp: actions.clean,\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ImageUpload)\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}