{"ast":null,"code":"// Generated by CoffeeScript 1.8.0\n(function () {\n  var Payment, React, exp, images, validate;\n  React = require('react');\n  Payment = require('payment');\n  images = require('./card-images.js');\n  validate = Payment.fns;\n  module.exports = React.createClass({\n    displayName: 'Card',\n    getDefaultProps: function () {\n      return {\n        number: null,\n        cvc: null,\n        name: '',\n        expiry: '',\n        focused: null,\n        namePlaceholder: 'FULL NAME',\n        expiryBefore: 'month/year',\n        expiryAfter: 'valid thru',\n        shinyAfterBack: '',\n        type: null\n      };\n    },\n    render: function () {\n      var isAmex;\n      isAmex = this.state.type && this.state.type.name === \"amex\";\n      return React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__container\"\n      }, React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \" \" + this.typeClassName() + (this.props.focused === \"cvc\" && !isAmex ? \" \" + exp.prefix + \"--flipped\" : \"\")\n      }, React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__front\"\n      }, React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__lower\"\n      }, React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__shiny\"\n      }), React.createElement(\"img\", {\n        \"className\": \"\" + exp.prefix + \"__logo \" + this.typeClassName(),\n        \"src\": images[this.props.type ? this.props.type : this.state.type.name]\n      }), isAmex ? React.createElement(\"div\", {\n        \"className\": this.displayClassName(\"cvc_front\")\n      }, this.getValue(\"cvc\")) : void 0, React.createElement(\"div\", {\n        \"className\": this.displayClassName(\"number\")\n      }, this.getValue(\"number\")), React.createElement(\"div\", {\n        \"className\": this.displayClassName(\"name\")\n      }, this.getValue(\"name\")), React.createElement(\"div\", {\n        \"className\": this.displayClassName(\"expiry\"),\n        \"data-before\": this.props.expiryBefore,\n        \"data-after\": this.props.expiryAfter\n      }, this.getValue(\"expiry\")))), React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__back\"\n      }, React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__bar\"\n      }), React.createElement(\"div\", {\n        \"className\": this.displayClassName(\"cvc\")\n      }, this.getValue(\"cvc\")), React.createElement(\"div\", {\n        \"className\": \"\" + exp.prefix + \"__shiny\",\n        \"data-after\": this.props.shinyAfterBack\n      }))));\n    },\n    displayClassName: function (base) {\n      var className;\n      className = \"\" + exp.prefix + \"__\" + base + (\" \" + exp.prefix + \"__display\");\n\n      if (this.props.focused === base) {\n        className += \" \" + exp.prefix + \"--focused\";\n      }\n\n      return className;\n    },\n    typeClassName: function () {\n      return \"\" + exp.prefix + \"--\" + (this.props.type ? this.props.type : this.state.type.name);\n    },\n    getValue: function (name) {\n      return this[name]();\n    },\n    componentWillMount: function () {\n      return this.updateType(this.props);\n    },\n    componentWillReceiveProps: function (nextProps) {\n      return this.updateType(nextProps);\n    },\n    getInitialState: function () {\n      return {\n        type: {\n          name: \"unknown\",\n          length: 16\n        }\n      };\n    },\n    updateType: function (props) {\n      var type;\n\n      if (!props.number) {\n        return this.setState({\n          type: {\n            name: \"unknown\",\n            length: 16\n          }\n        });\n      }\n\n      if (type = this.props.type || validate.cardType(props.number)) {\n        if (type === \"amex\") {\n          return this.setState({\n            type: {\n              name: type,\n              length: 15\n            }\n          });\n        } else {\n          return this.setState({\n            type: {\n              name: type,\n              length: 16\n            }\n          });\n        }\n      }\n\n      return this.setState({\n        type: {\n          name: \"unknown\",\n          length: 16\n        }\n      });\n    },\n    number: function () {\n      var amountOfSpaces, i, maxLength, space_index, space_index1, space_index2, string, _i;\n\n      if (!this.props.number) {\n        string = \"\";\n      } else {\n        string = this.props.number.toString();\n      }\n\n      maxLength = this.state.type.length;\n\n      if (string.length > maxLength) {\n        string = string.slice(0, maxLength);\n      }\n\n      while (string.length < maxLength) {\n        string += \"•\";\n      }\n\n      if (this.state.type.name === \"amex\") {\n        space_index1 = 4;\n        space_index2 = 10;\n        string = string.substring(0, space_index1) + \" \" + string.substring(space_index1, space_index2) + \" \" + string.substring(space_index2);\n      } else {\n        amountOfSpaces = Math.ceil(maxLength / 4);\n\n        for (i = _i = 1; 1 <= amountOfSpaces ? _i < amountOfSpaces : _i > amountOfSpaces; i = 1 <= amountOfSpaces ? ++_i : --_i) {\n          space_index = i * 4 + (i - 1);\n          string = string.slice(0, space_index) + \" \" + string.slice(space_index);\n        }\n      }\n\n      return string;\n    },\n    name: function () {\n      if (this.props.name === \"\") {\n        return this.props.namePlaceholder;\n      } else {\n        return this.props.name;\n      }\n    },\n    expiry: function () {\n      var expiry, expiryMaxLength;\n\n      if (this.props.expiry === \"\") {\n        return \"••/••\";\n      } else {\n        expiry = this.props.expiry.toString();\n        expiryMaxLength = 6;\n\n        if (expiry.match(/\\//)) {\n          expiry = expiry.replace(\"/\", \"\");\n        }\n\n        if (!expiry.match(/^[0-9]*$/)) {\n          return \"••/••\";\n        }\n\n        while (expiry.length < 4) {\n          expiry += \"•\";\n        }\n\n        expiry = expiry.slice(0, 2) + \"/\" + expiry.slice(2, expiryMaxLength);\n        return expiry;\n      }\n    },\n    cvc: function () {\n      if (this.props.cvc === null) {\n        return \"•••\";\n      } else {\n        if (this.props.cvc.toString().length <= 4) {\n          return this.props.cvc;\n        } else {\n          return this.props.cvc.toString().slice(0, 4);\n        }\n      }\n    }\n  });\n  exp = module.exports;\n  exp.prefix = \"react-credit-card\";\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}