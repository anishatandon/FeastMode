{"ast":null,"code":"var _jsxFileName = \"/Users/cherma/Desktop/FeastMode/feast-mode/client/src/components/Friends/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Friend from './Friend';\nimport AcceptFriendButton from './Buttons/AcceptFriendButton';\nimport DeleteFriendButton from './Buttons/DeleteFriendButton';\nimport DeleteInviteButton from './Buttons/DeleteInviteButton';\nimport AddFriends from './AddFriends';\nimport Loader from '../Loader/index.js';\n\nconst Friends = ({\n  users,\n  friends,\n  userId,\n  hasRequested\n}) => {\n  let content;\n\n  if (!friends || !friends[userId]) {\n    content = React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  } else {\n    if (!friends[userId].requests || friends[userId].requests.length === 0) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"No friends requests\");\n    } else {\n      content = React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Friend Requests\"), friends[userId].requests.map(user => React.createElement(\"div\", {\n        className: \"friend\",\n        key: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Friend, {\n        display: true,\n        friendId: user.friendId,\n        friendFirst: user.friendFirst,\n        friendLast: user.friendLast,\n        friendEmail: user.friendEmail,\n        friendPhone: user.friendPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(AcceptFriendButton, {\n        friend: {\n          friendId: user.friendId,\n          friendFirst: user.friendFirst,\n          friendLast: user.friendLast,\n          friendEmail: user.friendEmail,\n          friendPhone: user.friendPhone\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(DeleteInviteButton, {\n        friend: user.friendId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))));\n    }\n\n    if (!friends[userId].friends || friends[userId].friends.length === 0) {\n      content = React.createElement(React.Fragment, null, content, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"You have no friends.\"));\n    } else {\n      content = React.createElement(React.Fragment, null, content, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Your Friends\"), friends[userId].friends.map(user => React.createElement(\"div\", {\n        className: \"friend\",\n        key: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Friend, {\n        display: true,\n        friendId: user.friendId,\n        friendFirst: user.friendFirst,\n        friendLast: user.friendLast,\n        friendEmail: user.friendEmail,\n        friendPhone: user.friendPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(DeleteFriendButton, {\n        friend: user.friendId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(AddFriends, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.friends,\n  hasRequested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"friends/\"]), firestoreConnect(props => [\"users/\"]))(Friends);","map":{"version":3,"sources":["/Users/cherma/Desktop/FeastMode/feast-mode/client/src/components/Friends/index.js"],"names":["React","connect","firestoreConnect","compose","Friend","AcceptFriendButton","DeleteFriendButton","DeleteInviteButton","AddFriends","Loader","Friends","users","friends","userId","hasRequested","content","requests","length","map","user","friendId","friendFirst","friendLast","friendEmail","friendPhone","mapStateToProps","firebase","firestore","app","auth","uid","data","status","requested","mapDispatchToProps","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nimport Friend from './Friend';\nimport AcceptFriendButton from './Buttons/AcceptFriendButton';\nimport DeleteFriendButton from './Buttons/DeleteFriendButton';\nimport DeleteInviteButton from './Buttons/DeleteInviteButton';\nimport AddFriends from './AddFriends';\nimport Loader from '../Loader/index.js';\n\nconst Friends = ({users, friends, userId, hasRequested }) => {\n  let content \n  \n  if (!friends || !friends[userId]) {\n    content = ( <Loader /> )\n  }\n\n  else {\n    if (!friends[userId].requests || friends[userId].requests.length === 0 ) {\n        content = (<p>No friends requests</p>)\n    }\n\n    else {\n        content = (\n            <>\n                <h1>Friend Requests</h1>\n                {friends[userId].requests.map(user =>\n                <div className=\"friend\" key={user}>\n                    <Friend \n                        display={true} \n                        friendId={user.friendId} \n                        friendFirst={user.friendFirst} \n                        friendLast={user.friendLast} \n                        friendEmail={user.friendEmail} \n                        friendPhone={user.friendPhone} \n                    />\n                    <AcceptFriendButton friend={{\n                        friendId: user.friendId,\n                        friendFirst: user.friendFirst,\n                        friendLast: user.friendLast,\n                        friendEmail: user.friendEmail,\n                        friendPhone: user.friendPhone,\n                    }}\n                    />\n                    <DeleteInviteButton friend={user.friendId}/>\n                </div>\n                )}\n            </>\n        )\n    } \n\n    if(!friends[userId].friends || friends[userId].friends.length === 0) {\n        content = (\n            <>\n                {content}\n                <p>You have no friends.</p>\n            </>\n        )\n    }\n\n    else {\n        content = (\n            <>\n                {content}\n                <h1>Your Friends</h1>\n                {friends[userId].friends.map(user =>\n                <div className=\"friend\" key={user}>\n                    <Friend \n                        display={true} \n                        friendId={user.friendId} \n                        friendFirst={user.friendFirst} \n                        friendLast={user.friendLast} \n                        friendEmail={user.friendEmail} \n                        friendPhone={user.friendPhone} \n                    />\n                    <DeleteFriendButton friend={user.friendId}/>\n                </div>\n                )}\n            </>\n        )\n    }\n  }\n  \n  \n  return (\n    <div className = \"friends-change\">\n        <AddFriends />\n      {content}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  friends: firestore.data.friends,\n  hasRequested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"friends/\"]),\n  firestoreConnect(props => [\"users/\"]),\n)(Friends)\n"]},"metadata":{},"sourceType":"module"}