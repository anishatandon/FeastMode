{"ast":null,"code":"'use strict';\n\nvar urls = require('./urls.json');\n\nvar request = require('request');\n\nvar parser = require('xml2json');\n\nmodule.exports.byPhone = function (phone, callback) {\n  if (!phone || !callback) {\n    if (callback) {\n      callback({\n        success: false,\n        message: 'Phone is required!'\n      });\n    }\n\n    return;\n  }\n\n  this.byUrl(urls.track + 'Phone=' + phone, callback);\n};\n\nmodule.exports.byId = function (storeID, orderKey, callback) {\n  if (!storeID || !orderKey || !callback) {\n    if (callback) callback({\n      success: false,\n      message: 'storeID, orderKey, and callback are all required to get pizza info using the orderKey'\n    });\n    return;\n  }\n\n  this.byUrl(urls.track + 'StoreID=' + storeID + '&OrderKey=' + orderKey, callback);\n};\n\nmodule.exports.byUrl = function (url, callback) {\n  request.get(url, function (error, response, body) {\n    if (error) {\n      callback({\n        success: false,\n        message: error\n      });\n      return;\n    }\n\n    if (response.statusCode !== 200) {\n      callback({\n        success: false,\n        message: 'HTML Status Code Error ' + response.statusCode\n      });\n      return;\n    }\n\n    var result = parser.toJson(body, {\n      coerce: false,\n      sanitize: false,\n      object: true,\n      trim: false\n    });\n\n    if (!result['soap:Envelope']) {\n      callback({\n        success: false,\n        message: 'API soap:Envelope not present',\n        data: result\n      });\n      return;\n    }\n\n    if (!result['soap:Envelope']['soap:Body']) {\n      callback({\n        success: false,\n        message: 'API soap:Body not present',\n        data: result\n      });\n      return;\n    }\n\n    if (!result['soap:Envelope']['soap:Body'].GetTrackerDataResponse) {\n      callback({\n        success: false,\n        message: 'API GetTrackerDataResponse not present',\n        data: result\n      });\n      return;\n    }\n\n    callback({\n      orders: result['soap:Envelope']['soap:Body'].GetTrackerDataResponse.OrderStatuses,\n      query: result['soap:Envelope']['soap:Body'].GetTrackerDataResponse.Query\n    });\n  });\n};","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/dominos/src/Track.js"],"names":["urls","require","request","parser","module","exports","byPhone","phone","callback","success","message","byUrl","track","byId","storeID","orderKey","url","get","error","response","body","statusCode","result","toJson","coerce","sanitize","object","trim","data","GetTrackerDataResponse","orders","OrderStatuses","query","Query"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AAEAG,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,UAASC,KAAT,EAAgBC,QAAhB,EAA0B;AAC/C,MAAI,CAACD,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrB,QAAGA,QAAH,EAAa;AACTA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH;;AACD;AACH;;AAED,OAAKC,KAAL,CAAWX,IAAI,CAACY,KAAL,GAAa,QAAb,GAAwBL,KAAnC,EAA0CC,QAA1C;AACH,CAZD;;AAcAJ,MAAM,CAACC,OAAP,CAAeQ,IAAf,GAAsB,UAASC,OAAT,EAAkBC,QAAlB,EAA4BP,QAA5B,EAAsC;AACxD,MAAG,CAACM,OAAD,IAAY,CAACC,QAAb,IAAyB,CAACP,QAA7B,EAAsC;AAClC,QAAGA,QAAH,EACIA,QAAQ,CAAC;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIJ;AACH;;AAED,OAAKC,KAAL,CAAWX,IAAI,CAACY,KAAL,GAAa,UAAb,GAA0BE,OAA1B,GAAoC,YAApC,GAAmDC,QAA9D,EAAwEP,QAAxE;AACH,CAXD;;AAaAJ,MAAM,CAACC,OAAP,CAAeM,KAAf,GAAuB,UAASK,GAAT,EAAcR,QAAd,EAAuB;AAC1CN,EAAAA,OAAO,CAACe,GAAR,CACID,GADJ,EAEI,UAAUE,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC7B,QAAIF,KAAJ,EAAW;AACPV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAEQ;AAFJ,OAAD,CAAR;AAIA;AACH;;AAED,QAAIC,QAAQ,CAACE,UAAT,KAAwB,GAA5B,EAAgC;AAC5Bb,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAC,4BAA4BS,QAAQ,CAACE;AAFxC,OAAD,CAAR;AAIA;AACH;;AAED,QAAIC,MAAM,GAAGnB,MAAM,CAACoB,MAAP,CACTH,IADS,EAET;AACII,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,QAAQ,EAAE,KAFd;AAGIC,MAAAA,MAAM,EAAE,IAHZ;AAIIC,MAAAA,IAAI,EAAE;AAJV,KAFS,CAAb;;AAUA,QAAG,CAACL,MAAM,CAAC,eAAD,CAAV,EAA4B;AACxBd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAE,+BAFJ;AAGLkB,QAAAA,IAAI,EAAEN;AAHD,OAAD,CAAR;AAKA;AACH;;AAED,QAAG,CAACA,MAAM,CAAC,eAAD,CAAN,CAAwB,WAAxB,CAAJ,EAAyC;AACrCd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAE,2BAFJ;AAGLkB,QAAAA,IAAI,EAAEN;AAHD,OAAD,CAAR;AAKA;AACH;;AAED,QAAG,CAACA,MAAM,CAAC,eAAD,CAAN,CAAwB,WAAxB,EAAqCO,sBAAzC,EAAgE;AAC5DrB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EAAC,wCAFH;AAGLkB,QAAAA,IAAI,EAAEN;AAHD,OAAD,CAAR;AAKA;AACH;;AAEDd,IAAAA,QAAQ,CAAC;AACLsB,MAAAA,MAAM,EAAER,MAAM,CAAC,eAAD,CAAN,CAAwB,WAAxB,EAAqCO,sBAArC,CAA4DE,aAD/D;AAELC,MAAAA,KAAK,EAAEV,MAAM,CAAC,eAAD,CAAN,CAAwB,WAAxB,EAAqCO,sBAArC,CAA4DI;AAF9D,KAAD,CAAR;AAIH,GA5DL;AA8DH,CA/DD","sourcesContent":["'use strict';\n\nvar urls = require('./urls.json');\nvar request = require('request');\nvar parser = require('xml2json');\n\nmodule.exports.byPhone = function(phone, callback) {\n    if( !phone || !callback) {\n        if(callback) {\n            callback({\n                success: false,\n                message: 'Phone is required!'\n            });\n        }\n        return;\n    }\n\n    this.byUrl(urls.track + 'Phone=' + phone, callback);\n};\n\nmodule.exports.byId = function(storeID, orderKey, callback) {\n    if(!storeID || !orderKey || !callback){\n        if(callback)\n            callback({\n                success: false,\n                message: 'storeID, orderKey, and callback are all required to get pizza info using the orderKey'\n            });\n        return;\n    }\n\n    this.byUrl(urls.track + 'StoreID=' + storeID + '&OrderKey=' + orderKey, callback);\n};\n\nmodule.exports.byUrl = function(url, callback){\n    request.get(\n        url,\n        function (error, response, body) {\n            if (error) {\n                callback({\n                    success: false,\n                    message: error\n                });\n                return;\n            }\n\n            if (response.statusCode !== 200){\n                callback({\n                    success: false,\n                    message:'HTML Status Code Error ' + response.statusCode\n                });\n                return;\n            }\n\n            var result = parser.toJson(\n                body,\n                {\n                    coerce: false,\n                    sanitize: false,\n                    object: true,\n                    trim: false\n                }\n            );\n\n            if(!result['soap:Envelope']){\n                callback({\n                    success: false,\n                    message: 'API soap:Envelope not present',\n                    data: result\n                });\n                return;\n            }\n\n            if(!result['soap:Envelope']['soap:Body']){\n                callback({\n                    success: false,\n                    message: 'API soap:Body not present',\n                    data: result\n                });\n                return;\n            }\n\n            if(!result['soap:Envelope']['soap:Body'].GetTrackerDataResponse){\n                callback({\n                    success: false,\n                    message:'API GetTrackerDataResponse not present',\n                    data: result\n                });\n                return;\n            }\n\n            callback({\n                orders: result['soap:Envelope']['soap:Body'].GetTrackerDataResponse.OrderStatuses,\n                query: result['soap:Envelope']['soap:Body'].GetTrackerDataResponse.Query\n            });\n        }\n    );\n};\n"]},"metadata":{},"sourceType":"module"}