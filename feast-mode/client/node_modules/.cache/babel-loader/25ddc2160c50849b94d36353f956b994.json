{"ast":null,"code":"var _jsxFileName = \"/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    const _this$props$initialCe = this.props.initialCenter,\n          lat = _this$props$initialCe.lat,\n          lng = _this$props$initialCe.lng;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n  }\n\n  componentDidMount() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // google is available\n      const google = this.props.google;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      let _this$props = this.props,\n          initialCenter = _this$props.initialCenter,\n          zoom = _this$props.zoom;\n      const _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      });\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Loading map...\");\n  }\n\n}\nMap.propTypes = {\n  google: React.PropTypes.object,\n  zoom: React.PropTypes.number,\n  initialCenter: React.PropTypes.object,\n  centerAroundCurrentLocation: React.PropTypes.bool\n};\nMap.defaultProps = {\n  zoom: 13,\n  // San Francisco, by default\n  initialCenter: {\n    lat: 37.774929,\n    lng: -122.419416\n  },\n  centerAroundCurrentLocation: false\n};\nexport default Map;","map":{"version":3,"sources":["/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/Map.js"],"names":["React","ReactDOM","PropTypes","Map","Component","constructor","props","initialCenter","lat","lng","state","currentLocation","componentDidUpdate","prevProps","prevState","google","loadMap","componentDidMount","maps","mapRef","refs","map","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","render","propTypes","object","number","centerAroundCurrentLocation","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAKA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,kCAGI,KAAKA,KAAL,CAAWC,aAHf;AAAA,UAGRC,GAHQ,yBAGRA,GAHQ;AAAA,UAGHC,GAHG,yBAGHA,GAHG;AAIf,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AACbH,QAAAA,GAAG,EAAEA,GADQ;AAEbC,QAAAA,GAAG,EAAEA;AAFQ;AADR,KAAb;AAMH;;AAGDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAID,SAAS,CAACE,MAAV,KAAqB,KAAKT,KAAL,CAAWS,MAApC,EAA4C;AACxC,WAAKC,OAAL;AACH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,OAAL;AACH;;AAEDA,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKV,KAAL,IAAc,KAAKA,KAAL,CAAWS,MAA7B,EAAqC;AACrC;AADqC,YAE9BA,MAF8B,GAEpB,KAAKT,KAFe,CAE9BS,MAF8B;AAGrC,YAAMG,IAAI,GAAGH,MAAM,CAACG,IAApB;AAEA,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,GAAzB;AACA,YAAMC,IAAI,GAAGrB,QAAQ,CAACsB,WAAT,CAAqBJ,MAArB,CAAb;AANqC,wBAQT,KAAKb,KARI;AAAA,UAQhCC,aARgC,eAQhCA,aARgC;AAAA,UAQjBiB,IARiB,eAQjBA,IARiB;AAAA,oCASlB,KAAKd,KAAL,CAAWC,eATO;AAAA,YAS9BH,GAT8B,yBAS9BA,GAT8B;AAAA,YASzBC,GATyB,yBASzBA,GATyB;AAUrC,YAAMgB,MAAM,GAAG,IAAIP,IAAI,CAACQ,MAAT,CAAgBlB,GAAhB,EAAqBC,GAArB,CAAf;AACA,YAAMkB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAChCJ,QAAAA,MAAM,EAAEA,MADwB;AAEhCD,QAAAA,IAAI,EAAEA;AAF0B,OAAlB,CAAlB;AAKA,WAAKH,GAAL,GAAW,IAAIH,IAAI,CAACf,GAAT,CAAamB,IAAb,EAAmBK,SAAnB,CAAX;AACC;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH;;AAnDoC;AAsDvC3B,GAAG,CAAC4B,SAAJ,GAAgB;AACdhB,EAAAA,MAAM,EAAEf,KAAK,CAACE,SAAN,CAAgB8B,MADV;AAEdR,EAAAA,IAAI,EAAExB,KAAK,CAACE,SAAN,CAAgB+B,MAFR;AAGd1B,EAAAA,aAAa,EAAEP,KAAK,CAACE,SAAN,CAAgB8B,MAHjB;AAIdE,EAAAA,2BAA2B,EAAElC,KAAK,CAACE,SAAN,CAAgBiC;AAJ/B,CAAhB;AAMAhC,GAAG,CAACiC,YAAJ,GAAmB;AACjBZ,EAAAA,IAAI,EAAE,EADW;AAEjB;AACAjB,EAAAA,aAAa,EAAE;AACbC,IAAAA,GAAG,EAAE,SADQ;AAEbC,IAAAA,GAAG,EAAE,CAAC;AAFO,GAHE;AAOjByB,EAAAA,2BAA2B,EAAE;AAPZ,CAAnB;AAWF,eAAe/B,GAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\n\n\n\n\nexport class Map extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        const {lat, lng} = this.props.initialCenter;\n        this.state = {\n            currentLocation: {\n                lat: lat,\n                lng: lng\n            }\n        }\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n            this.loadMap();\n        }\n    }\n\n    componentDidMount() {\n        this.loadMap();\n    }\n  \n    loadMap() {\n        if (this.props && this.props.google) {\n        // google is available\n        const {google} = this.props;\n        const maps = google.maps;\n\n        const mapRef = this.refs.map;\n        const node = ReactDOM.findDOMNode(mapRef);\n\n        let {initialCenter, zoom} = this.props;\n        const {lat, lng} = this.state.currentLocation;\n        const center = new maps.LatLng(lat, lng);\n        const mapConfig = Object.assign({}, {\n            center: center,\n            zoom: zoom\n        })\n\n        this.map = new maps.Map(node, mapConfig);\n        }\n    }\n  \n    render() {\n        return (\n            <div ref='map'>\n                Loading map...\n            </div>\n        )\n    }\n  }\n\n  Map.propTypes = {\n    google: React.PropTypes.object,\n    zoom: React.PropTypes.number,\n    initialCenter: React.PropTypes.object,\n    centerAroundCurrentLocation: React.PropTypes.bool\n  }\n  Map.defaultProps = {\n    zoom: 13,\n    // San Francisco, by default\n    initialCenter: {\n      lat: 37.774929,\n      lng: -122.419416\n    },\n    centerAroundCurrentLocation: false\n  }\n\n\nexport default Map"]},"metadata":{},"sourceType":"module"}