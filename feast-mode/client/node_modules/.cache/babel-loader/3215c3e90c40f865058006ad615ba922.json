{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Loader from '../Loader/index.js';\n\nconst Friend = ({\n  friendId,\n  allUsers\n}) => {\n  let user;\n  if (!allUsers || !allUsers[friendId]) return React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n  user = allUsers[friendId];\n  return React.createElement(\"div\", {\n    className: \"friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Image: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Id: \", friendId), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Name: \", user.firstName + \" \" + user.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" E-mail: \", user.email));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  // firebaseGood: firebase,\n  // userId: firebase.auth.uid,\n  allUsers: firestore.data.users,\n  requested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"users/\"]))(Friend);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js"],"names":["React","useEffect","connect","firestoreConnect","compose","Loader","Friend","friendId","allUsers","user","firstName","lastName","email","mapStateToProps","firebase","firestore","app","data","users","requested","status","mapDispatchToProps","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACzC,MAAIC,IAAJ;AAEA,MAAG,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACD,QAAD,CAAzB,EACE,OAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEFE,EAAAA,IAAI,GAAGD,QAAQ,CAACD,QAAD,CAAf;AAEA,SAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQA,QAAR,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUE,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE,QAAtC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,IAAI,CAACG,KAAlB,CALF,CAFF;AAWD,CAnBD;;AAqBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,MAAmC;AACzD;AACA;AACAR,EAAAA,QAAQ,EAAEO,SAAS,CAACE,IAAV,CAAeC,KAHgC;AAIzDC,EAAAA,SAAS,EAAEJ,SAAS,CAACK,MAAV,CAAiBD;AAJ6B,CAAnC,CAAxB;;AAOA,MAAME,kBAAkB,GAAG,EAA3B;AAEA,eAAejB,OAAO,CACpBF,OAAO,CAACW,eAAD,EAAkBQ,kBAAlB,CADa,EAEpBlB,gBAAgB,CAACmB,KAAK,IAAI,CAAC,QAAD,CAAV,CAFI,CAAP,CAGbhB,MAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nimport Loader from '../Loader/index.js';\n\n\nconst Friend = ({ friendId, allUsers }) => {\n  let user;\n\n  if(!allUsers || !allUsers[friendId])\n    return <Loader />;\n\n  user = allUsers[friendId];\n\n  return(\n    \n    <div className=\"friend\">\n      <p></p>\n      <p>Image: </p>\n      <p>Id: {friendId}</p>\n      <p>Name: {user.firstName + \" \" + user.lastName}</p>\n      <p> E-mail: {user.email}</p>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  // firebaseGood: firebase,\n  // userId: firebase.auth.uid,\n  allUsers: firestore.data.users,\n  requested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"users/\"]),\n)(Friend)\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}