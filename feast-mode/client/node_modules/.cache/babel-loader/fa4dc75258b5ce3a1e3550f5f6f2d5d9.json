{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 1;\\n  width: 100%;\\n  min-height: 100vh;\\n  padding: 8rem 0rem;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background-color: \", \";\\n\\n  ::-webkit-scrollbar { width: 0 t }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Landing from './Auth/Landing';\nimport SignUp from './Auth/SignUp';\nimport LogOut from './Auth/LogOut';\nimport Home from './Home';\nimport SideDrawer from './Navigation/SideDrawer.js';\nimport PasswordReset from './Auth/Profile/PasswordReset.js';\nimport ProfileEdit from './Auth/Profile/ProfileEdit/index.js';\nimport Restaurants from './Food/Restaurants';\nimport About from './About';\nimport Navbar from './Navigation';\nimport Backdrop from './Modal/Backdrop.js';\nimport EmailVerification from './Auth/EmailVerification'; // import AddFriends from './Friends/AddFriends'\n\nimport DisplayFriends from './Friends/Friends';\nimport PickFood from './Food/PickFood';\nimport '../style/Backdrop.css';\nimport '../style/EmailVerification.css';\nimport '../style/about.css';\nimport '../style/Card.css';\nimport '../style/AppsFormWrapper.css';\nexport const MainWrapper = styled.main(_templateObject(), ({\n  loggedIn,\n  path\n}) => loggedIn && path !== \"/profile_edit\" ? 'var(--color-white)' : 'var(--color-background)');\n\nconst App = ({\n  loggedIn,\n  emailVerified,\n  location\n}) => {\n  let routes;\n\n  if (loggedIn && !emailVerified) {\n    routes = React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.EMAIL_VERIFICATION,\n      component: EmailVerification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LOG_OUT,\n      component: LogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.EMAIL_VERIFICATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n  } else if (loggedIn && emailVerified) {\n    routes = React.createElement(React.Fragment, null, React.createElement(Navbar, {\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      path: location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.HOME,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LOG_OUT,\n      component: LogOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.SIDEDRAWER,\n      component: SideDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PROFILE_EDIT,\n      component: ProfileEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.RESTAURANTS,\n      component: Restaurants,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.ABOUT,\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.DISPLAY_FRIENDS,\n      component: DisplayFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PICK_FOOD,\n      component: PickFood,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.HOME,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))));\n  } else {\n    routes = React.createElement(MainWrapper, {\n      loggedIn: loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: ROUTES.LANDING,\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.SIGN_UP,\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: ROUTES.PASSWORD_RESET,\n      component: PasswordReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: ROUTES.LANDING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, null, routes);\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified\n});\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/App.js"],"names":["React","withRouter","Route","Switch","Redirect","ROUTES","connect","styled","Landing","SignUp","LogOut","Home","SideDrawer","PasswordReset","ProfileEdit","Restaurants","About","Navbar","Backdrop","EmailVerification","DisplayFriends","PickFood","MainWrapper","main","loggedIn","path","App","emailVerified","location","routes","EMAIL_VERIFICATION","LOG_OUT","pathname","HOME","SIDEDRAWER","PROFILE_EDIT","RESTAURANTS","ABOUT","DISPLAY_FRIENDS","PICK_FOOD","LANDING","SIGN_UP","PASSWORD_RESET","mapStateToProps","firebase","auth","uid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Landing from './Auth/Landing'\nimport SignUp from './Auth/SignUp'\nimport LogOut from './Auth/LogOut'\nimport Home from './Home'\nimport SideDrawer from './Navigation/SideDrawer.js'\nimport PasswordReset from './Auth/Profile/PasswordReset.js'\nimport ProfileEdit from './Auth/Profile/ProfileEdit/index.js'\nimport Restaurants from './Food/Restaurants'\nimport About from './About'\nimport Navbar from './Navigation'\nimport Backdrop from './Modal/Backdrop.js'\nimport EmailVerification from './Auth/EmailVerification'\n// import AddFriends from './Friends/AddFriends'\nimport DisplayFriends from './Friends/Friends'\nimport PickFood from './Food/PickFood'\n\nimport '../style/Backdrop.css'\nimport '../style/EmailVerification.css'\nimport '../style/about.css'\nimport '../style/Card.css'\nimport '../style/AppsFormWrapper.css'\n\nexport const MainWrapper = styled.main`\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  min-height: 100vh;\n  padding: 8rem 0rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${({ loggedIn, path }) => (loggedIn && path !== \"/profile_edit\") ? 'var(--color-white)' : 'var(--color-background)'};\n\n  ::-webkit-scrollbar { width: 0 t }\n`\n\nconst App = ({ loggedIn, emailVerified, location }) => {\n  let routes\n  \n  if (loggedIn && !emailVerified) {\n    routes = (\n      <>\n        <Navbar/>\n        <MainWrapper loggedIn = {loggedIn}>\n          <Switch> \n            <Route exact path={ROUTES.EMAIL_VERIFICATION} component={EmailVerification} />\n            <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\n            <Redirect to={ROUTES.EMAIL_VERIFICATION} />\n          </Switch>\n        </MainWrapper>\n      </>\n    )\n    } else if (loggedIn && emailVerified) {\n    routes = (\n      <>\n        <Navbar path = {location.pathname}/>\n        <SideDrawer path = {location.pathname}/>\n\n        <MainWrapper loggedIn = {loggedIn} path = {location.pathname}>\n          <Switch>\n            <Route exact path={ROUTES.HOME} component={Home} />\n            <Route exact path={ROUTES.LOG_OUT} component={LogOut} />\n            <Route exact path={ROUTES.SIDEDRAWER} component={SideDrawer} />\n            <Route exact path={ROUTES.PROFILE_EDIT} component={ProfileEdit}/>\n            <Route exact path={ROUTES.RESTAURANTS} component={Restaurants} />\n            <Route exact path={ROUTES.ABOUT} component={About} />\n            {/* <Route exact path={ROUTES.FRIENDS} component={Friends} /> */}\n            {/* <Route exact path={ROUTES.ADD_FRIENDS} component={AddFriends} /> */}\n            <Route exact path={ROUTES.DISPLAY_FRIENDS} component={DisplayFriends} />\n            <Route exact path={ROUTES.PICK_FOOD} component={PickFood} />\n            <Redirect to={ROUTES.HOME} />\n          </Switch>\n          \n        </MainWrapper>\n      </>\n    )\n  } else {\n    routes = (\n      <MainWrapper loggedIn = {loggedIn}>\n        <Switch>\n          <Route exact path={ROUTES.LANDING} component={Landing} />\n          <Route exact path={ROUTES.SIGN_UP} component={SignUp} />\n          <Route exact path={ROUTES.PASSWORD_RESET} component={PasswordReset} />\n          <Redirect to={ROUTES.LANDING} />\n        </Switch>\n      </MainWrapper>\n    )\n  }\n\n  return <>{ routes }</>\n}\n\nconst mapStateToProps = ({ firebase }) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified,\n})\n\nexport default withRouter(connect(mapStateToProps)(App))"]},"metadata":{},"sourceType":"module"}