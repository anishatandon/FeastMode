{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux'; // import * as actions from '../../backend/store/actions'\n\nconst SignInSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n  password: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter a password\")\n});\n\nconst SignInForm = ({}) => {\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: SignInSchema,\n    onSubmit: (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      // signUp(values)\n      console.log(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(Form, {\n    className: \"classic-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [\"text-input\", touched.email && errors.email && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" Email \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: [\"text-input\", touched.passwordOne && errors.passwordOne && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Password \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"passwordOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: \"classic-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Next \")));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {// signUp: actions.signUp\n};\n\nconst SignInLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Already have an account?   \", React.createElement(Link, {\n  to: ROUTES.LANDING,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Log In\"));\n\nexport { SignInLink };\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInForm); // const USER = null;\n// class SignInFormBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { ...INITIAL_STATE }\n//   }\n//   // conponentWillMount() {\n//   //   this.songsRef = base.syncState('users', {\n//   //     context: this,\n//   //     state: 'users'\n//   //   })\n//   // }\n//   //\n//   // componentWillUnmount() {\n//   //   base.\n//   // }\n//   onSubmit = event => {\n//     const { email, password } = this.state;\n//     this.props.firebase\n//       .doSignInWithEmailAndPassword(email, password)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       // .then( () => {\n//       //   this.props.history.push(ROUTES.HOME); // Can't perform a React state update on an unmounted component\n//       // })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n//     event.preventDefault();\n//   };\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n//   render() {\n//     const { email, password, error } = this.state;\n//     const isInvalid = password === '' || email === '';\n//     return (\n//       <form onSubmit={this.onSubmit} className = \"classic-form\">\n//         <div className = \"text-input\">\n//           <label> Email </label> <br />\n//           <input\n//             name = \"email\"\n//             value = {email}\n//             onChange = {this.onChange}\n//             type = \"text\"\n//           /> <br />\n//         </div>\n//         <div className = \"text-input\">\n//           <label> Password </label> <br />\n//           <input\n//             name = \"password\"\n//             value = {password}\n//             onChange = {this.onChange}\n//             type = \"password\"\n//           /> <br />\n//         </div>\n//         <button disabled={isInvalid} type = \"submit\" className = \"classic-button\"> Log In </button>\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n// const SignInForm = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFormBase);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignIn/index.js"],"names":["React","Component","Link","withRouter","ROUTES","Form","Field","ErrorMessage","Formik","yup","connect","SignInSchema","object","shape","email","string","required","password","min","SignInForm","values","resetForm","setSubmitting","console","log","errors","touched","isSubmitting","join","msg","passwordOne","mapStateToProps","state","mapDispatchToProps","SignInLink","LANDING"],"mappings":"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kB,GAAG,CACvB;AADuB,CAA3B;;AAGA,MAAMC,UAAU,GAAG,MACjB;AAAK,EAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC6B,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAE9B,MAAM,CAAC+B,OAAjB;AAA0B,EAAA,SAAS,EAAG,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,CADF;;AAMA,SAASD,UAAT;AACA,eAAexB,OAAO,CAClBqB,eADkB,EAElBE,kBAFkB,CAAP,CAGbd,UAHa,CAAf,C,CAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport * as ROUTES from '../../constants/routes'\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\nimport * as yup from 'yup'\nimport { connect } from 'react-redux'\n\n// import * as actions from '../../backend/store/actions'\n\nconst SignInSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n  password: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter a password\"),\n})\n\nconst SignInForm = ({ }) => {\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema = {SignInSchema}\n      onSubmit = {( values, { resetForm, setSubmitting }) => {\n        // signUp(values)\n        console.log(values) \n        resetForm()\n        setSubmitting(false)\n      }}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form className = \"classic-form\">\n            \n          <div className = {[\"text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \n            <label> Email </label> <br />\n            <Field name = \"email\" type = \"email\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\n          </div>\n          \n          <div className = {[\"text-input\", touched.passwordOne && errors.passwordOne && \"text-error\"].join(' ')}>\n            <label> Password </label> <br />\n            <Field name = \"passwordOne\" type = \"password\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"passwordOne\" />\n          </div>\n\n          <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Next </button>\n\n          </Form>\n        )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {\n    // signUp: actions.signUp\n}\nconst SignInLink = () => (\n  <pre className = \"link-text\">\n    Already have an account?   <Link to={ROUTES.LANDING} className = \"link\">Log In</Link>\n  </pre>\n);\n\nexport { SignInLink }\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignInForm)\n\n\n// const USER = null;\n\n// class SignInFormBase extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { ...INITIAL_STATE }\n//   }\n\n//   // conponentWillMount() {\n//   //   this.songsRef = base.syncState('users', {\n//   //     context: this,\n//   //     state: 'users'\n//   //   })\n//   // }\n//   //\n//   // componentWillUnmount() {\n//   //   base.\n//   // }\n\n//   onSubmit = event => {\n//     const { email, password } = this.state;\n\n//     this.props.firebase\n//       .doSignInWithEmailAndPassword(email, password)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       // .then( () => {\n//       //   this.props.history.push(ROUTES.HOME); // Can't perform a React state update on an unmounted component\n//       // })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n\n//   render() {\n//     const { email, password, error } = this.state;\n\n//     const isInvalid = password === '' || email === '';\n\n//     return (\n//       <form onSubmit={this.onSubmit} className = \"classic-form\">\n\n//         <div className = \"text-input\">\n//           <label> Email </label> <br />\n//           <input\n//             name = \"email\"\n//             value = {email}\n//             onChange = {this.onChange}\n//             type = \"text\"\n//           /> <br />\n//         </div>\n        \n//         <div className = \"text-input\">\n//           <label> Password </label> <br />\n//           <input\n//             name = \"password\"\n//             value = {password}\n//             onChange = {this.onChange}\n//             type = \"password\"\n//           /> <br />\n//         </div>\n\n//         <button disabled={isInvalid} type = \"submit\" className = \"classic-button\"> Log In </button>\n\n//         {error && <p>{error.message}</p>}\n\n//       </form>\n//     );\n//   }\n// }\n\n// const SignInForm = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFormBase);"]},"metadata":{},"sourceType":"module"}