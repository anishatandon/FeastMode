{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 40%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  align-items: center;\\n\\n  div { width: 100% };\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n\\n  div { width: 48% };\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { Field, Formik } from 'formik';\nimport * as actions from '../../../backend/store/actions';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Cards from 'react-credit-cards';\nimport { SignUpSchema } from './SignUpSchema.js';\nimport { StyledForm } from '../../../style/UI/FormWrappers.js';\nimport Button from '../../../style/UI/Buttons.js';\nimport { TextInput } from '../../../style/UI/Inputs.js';\nimport { Message, MessageWrapper } from '../../../style/UI/Message.js';\nimport { getCreditCardType } from '../CreditCard.js';\nimport 'react-credit-cards/es/styles-compiled.css';\nconst AlignedWrapper = styled.div(_templateObject());\nconst OuterColumnWrapper = styled.div(_templateObject2());\nconst ColumnWrapper = styled.div(_templateObject3());\n\nconst SignUpForm = ({\n  signUp,\n  cleanUp,\n  error,\n  loading\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        focused = _useState2[0],\n        setFocused = _useState2[1];\n\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: \"\",\n      creditCardType: \"\",\n      expiry: \"\",\n      cvc: \"\",\n      apps: [false, false, false, false] // Postamtes, GrubHub, DoorDash, UberEats\n\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await signUp(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, ({\n    values,\n    isSubmitting,\n    isValid,\n    handleChanged\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"First Name\",\n    onClick: () => setFocused(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    component: TextInput,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Card Number\",\n    onClick: () => setFocused(\"number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Cards, {\n    number: values.creditCard,\n    name: values.firstName + \" \" + values.lastName,\n    expiry: values.expiry,\n    cvc: values.cvc,\n    focused: focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(ColumnWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expiry\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Expiration Date\",\n    onClick: () => setFocused(\"expiry\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"cvc\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Security Code\",\n    onClick: () => setFocused(\"cvc\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Expiration Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    component: TextInput,\n    label: \"Security Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Creating account...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, error))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js"],"names":["React","useEffect","useState","Field","Formik","actions","connect","styled","Cards","SignUpSchema","StyledForm","Button","TextInput","Message","MessageWrapper","getCreditCardType","AlignedWrapper","div","OuterColumnWrapper","ColumnWrapper","SignUpForm","signUp","cleanUp","error","loading","focused","setFocused","firstName","lastName","username","email","phone","passwordOne","passwordTwo","creditCard","creditCardType","expiry","cvc","apps","values","resetForm","setSubmitting","isSubmitting","isValid","handleChanged","mapStateToProps","auth","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Field, Formik } from 'formik'\nimport * as actions from '../../../backend/store/actions'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport Cards from 'react-credit-cards'\n\nimport { SignUpSchema } from './SignUpSchema.js'\nimport { StyledForm } from '../../../style/UI/FormWrappers.js'\nimport Button from '../../../style/UI/Buttons.js'\nimport { TextInput } from '../../../style/UI/Inputs.js'\nimport { Message, MessageWrapper } from '../../../style/UI/Message.js'\nimport { getCreditCardType } from '../CreditCard.js'\n\nimport 'react-credit-cards/es/styles-compiled.css'\n\nconst AlignedWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  div { width: 48% };\n`\nconst OuterColumnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst ColumnWrapper = styled.div`\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  div { width: 100% };\n`\n\nconst SignUpForm = ({ signUp, cleanUp, error, loading }) => {\n  const [focused, setFocused] = useState(\"\")\n\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return (\n    <Formik\n      initialValues = {{\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        phone: \"\",\n        passwordOne: \"\",\n        passwordTwo: \"\",\n        creditCard: \"\",\n        creditCardType: \"\",\n        expiry: \"\",\n        cvc: \"\",\n        apps: [false, false, false, false], // Postamtes, GrubHub, DoorDash, UberEats\n      }}\n      validationSchema = {SignUpSchema}\n      onSubmit = {async ( values, { resetForm, setSubmitting }) => {\n        await signUp(values)\n        resetForm()\n        setSubmitting(false)\n      }}\n    >\n      {({ values, isSubmitting, isValid, handleChanged }) => (\n        <StyledForm>\n\n          <AlignedWrapper>\n            <Field name = \"firstName\" type = \"text\" component = {TextInput} label = \"First Name\" onClick = {() => setFocused(\"name\")}/>\n            <Field name = \"lastName\" type = \"text\" component = {TextInput} label = \"Last Name\"/>\n          </AlignedWrapper>\n\n          <Field name = \"username\" type = \"text\" component = {TextInput} label = \"Username\"/>\n          <Field name = \"email\" type = \"email\" component = {TextInput} label = \"Email\"/>\n          <Field name = \"phone\" type = \"text\" component = {TextInput} label = \"Phone\"/>\n          \n          <AlignedWrapper>\n            <Field name = \"passwordOne\" type = \"password\" component = {TextInput} label = \"Password\"/>\n            <Field name = \"passwordTwo\" type = \"password\" component = {TextInput} label = \"Confirm Password\"/>\n          </AlignedWrapper>\n\n          <Field name = \"creditCard\" type = \"text\" component = {TextInput} label = \"Card Number\" onClick = {() => setFocused(\"number\")}/>\n          <AlignedWrapper>\n            <Cards\n              number = {values.creditCard}\n              name = {values.firstName + \" \" + values.lastName}\n              expiry = {values.expiry}\n              cvc ={values.cvc}\n              focused = {focused}\n            />\n            <ColumnWrapper>\n              <Field name = \"expiry\" type = \"text\" component = {TextInput} label = \"Expiration Date\" onClick = {() => setFocused(\"expiry\")}/>\n              <Field name = \"cvc\" type = \"text\" component = {TextInput} label = \"Security Code\" onClick = {() => setFocused(\"cvc\")}/>\n            </ColumnWrapper>\n          </AlignedWrapper>\n\n          <AlignedWrapper>\n              <Field name = \"expDate\" type = \"text\" component = {TextInput} label = \"Expiration Date\"/>\n              <Field name = \"secCode\" type = \"text\" component = {TextInput} label = \"Security Code\"/>\n          </AlignedWrapper>\n\n          <Button\n            disabled = {!isValid || isSubmitting}\n            loading = {loading ? 'Creating account...' : null}\n            type = \"submit\"\n          > \n            Sign Up \n          </Button>\n\n          <MessageWrapper>\n            <Message error show = {error}>{ error }</Message>\n          </MessageWrapper>\n\n        </StyledForm>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)"]},"metadata":{},"sourceType":"module"}