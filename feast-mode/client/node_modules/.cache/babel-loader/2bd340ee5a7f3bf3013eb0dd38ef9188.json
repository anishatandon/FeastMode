{"ast":null,"code":"var _jsxFileName = \"/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nMap.propTypes = {\n  google: React.PropTypes.object,\n  zoom: React.PropTypes.number,\n  initialCenter: React.PropTypes.object\n};\nMap.defaultProps = {\n  zoom: 13,\n  // San Francisco, by default\n  initialCenter: {\n    lat: 37.774929,\n    lng: -122.419416\n  }\n};\nexport class Map extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n  }\n\n  componentDidMount() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // google is available\n      const google = this.props.google;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      let _this$props = this.props,\n          initialCenter = _this$props.initialCenter,\n          zoom = _this$props.zoom;\n      const lat = initialCenter.lat,\n            lng = initialCenter.lng;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      });\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Loading map...\");\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/Map.js"],"names":["React","ReactDOM","Map","propTypes","google","PropTypes","object","zoom","number","initialCenter","defaultProps","lat","lng","Component","componentDidUpdate","prevProps","prevState","props","loadMap","componentDidMount","maps","mapRef","refs","map","node","findDOMNode","center","LatLng","mapConfig","Object","assign","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGAC,GAAG,CAACC,SAAJ,GAAgB;AACZC,EAAAA,MAAM,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,MADZ;AAEZC,EAAAA,IAAI,EAAEP,KAAK,CAACK,SAAN,CAAgBG,MAFV;AAGZC,EAAAA,aAAa,EAAET,KAAK,CAACK,SAAN,CAAgBC;AAHnB,CAAhB;AAMAJ,GAAG,CAACQ,YAAJ,GAAmB;AACfH,EAAAA,IAAI,EAAE,EADS;AAEf;AACAE,EAAAA,aAAa,EAAE;AACXE,IAAAA,GAAG,EAAE,SADM;AAEXC,IAAAA,GAAG,EAAE,CAAC;AAFK;AAHA,CAAnB;AAUA,OAAO,MAAMV,GAAN,SAAkBF,KAAK,CAACa,SAAxB,CAAkC;AACrCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAID,SAAS,CAACX,MAAV,KAAqB,KAAKa,KAAL,CAAWb,MAApC,EAA4C;AACxC,WAAKc,OAAL;AACH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,OAAL;AACH;;AAEDA,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWb,MAA7B,EAAqC;AACrC;AADqC,YAE9BA,MAF8B,GAEpB,KAAKa,KAFe,CAE9Bb,MAF8B;AAGrC,YAAMgB,IAAI,GAAGhB,MAAM,CAACgB,IAApB;AAEA,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,GAAzB;AACA,YAAMC,IAAI,GAAGvB,QAAQ,CAACwB,WAAT,CAAqBJ,MAArB,CAAb;AANqC,wBAQT,KAAKJ,KARI;AAAA,UAQhCR,aARgC,eAQhCA,aARgC;AAAA,UAQjBF,IARiB,eAQjBA,IARiB;AAAA,YAS9BI,GAT8B,GASlBF,aATkB,CAS9BE,GAT8B;AAAA,YASzBC,GATyB,GASlBH,aATkB,CASzBG,GATyB;AAUrC,YAAMc,MAAM,GAAG,IAAIN,IAAI,CAACO,MAAT,CAAgBhB,GAAhB,EAAqBC,GAArB,CAAf;AACA,YAAMgB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAChCJ,QAAAA,MAAM,EAAEA,MADwB;AAEhCnB,QAAAA,IAAI,EAAEA;AAF0B,OAAlB,CAAlB;AAKA,WAAKgB,GAAL,GAAW,IAAIH,IAAI,CAAClB,GAAT,CAAasB,IAAb,EAAmBI,SAAnB,CAAX;AACC;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH;;AAtCoC;AA0CvC,eAAe7B,GAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\n\nMap.propTypes = {\n    google: React.PropTypes.object,\n    zoom: React.PropTypes.number,\n    initialCenter: React.PropTypes.object\n  }\n\nMap.defaultProps = {\n    zoom: 13,\n    // San Francisco, by default\n    initialCenter: {\n        lat: 37.774929,\n        lng: -122.419416\n    }\n}\n\n\nexport class Map extends React.Component {\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n            this.loadMap();\n        }\n    }\n\n    componentDidMount() {\n        this.loadMap();\n    }\n  \n    loadMap() {\n        if (this.props && this.props.google) {\n        // google is available\n        const {google} = this.props;\n        const maps = google.maps;\n\n        const mapRef = this.refs.map;\n        const node = ReactDOM.findDOMNode(mapRef);\n\n        let {initialCenter, zoom} = this.props;\n        const {lat, lng} = initialCenter;\n        const center = new maps.LatLng(lat, lng);\n        const mapConfig = Object.assign({}, {\n            center: center,\n            zoom: zoom\n        })\n        \n        this.map = new maps.Map(node, mapConfig);\n        }\n    }\n  \n    render() {\n        return (\n            <div ref='map'>\n                Loading map...\n            </div>\n        )\n    }\n  }\n\n\n  export default Map"]},"metadata":{},"sourceType":"module"}