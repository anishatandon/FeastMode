{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /**\n   * Compares two path arrays of LatLng objects.\n   */\n\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n\n\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});","map":null,"metadata":{},"sourceType":"script"}