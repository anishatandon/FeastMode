{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/LogIn/index.js\";\nimport React, { useEffect } from 'react';\nimport { Field, ErrorMessage, Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../backend/store/actions';\nimport LogInSchema from './LogInSchemas.js';\nimport { StyledForm } from '../../../style/UI/FormWrappers.js';\nimport Input from '../../../style/UI/Input.js';\n\nconst LogInForm = ({\n  login,\n  loading,\n  error,\n  cleanUp\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LogInSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await login(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Your email...\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: [\"text-input\", touched.password && errors.password && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Password \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, error), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: \"classic-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Log In \")));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  login: actions.logIn,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/LogIn/index.js"],"names":["React","useEffect","Field","ErrorMessage","Formik","connect","actions","LogInSchema","StyledForm","Input","LogInForm","login","loading","error","cleanUp","email","password","values","resetForm","setSubmitting","errors","touched","isSubmitting","join","msg","mapStateToProps","auth","mapDispatchToProps","logIn","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Field, ErrorMessage, Formik } from 'formik'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../backend/store/actions'\nimport LogInSchema from './LogInSchemas.js'\n\nimport { StyledForm } from '../../../style/UI/FormWrappers.js'\nimport Input from '../../../style/UI/Input.js'\n\nconst LogInForm = ({ login, loading, error, cleanUp }) => {\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema = {LogInSchema}\n      onSubmit = {async ( values, { resetForm, setSubmitting }) => {\n        await login(values)\n        resetForm()\n        setSubmitting(false)\n      }}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <StyledForm>\n          \n            <Field name = \"email\" type = \"email\" placeholder = \"Your email...\" component = {Input}/> <br/>\n          <div className = {[\"text-input\", touched.password && errors.password && \"text-error\"].join(' ')}>\n            <label> Password </label> <br />\n            <Field name = \"password\" type = \"password\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"password\" />\n          </div>\n\n          <p>{error}</p>\n          <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Log In </button>\n\n        </StyledForm>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  login: actions.logIn,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm)"]},"metadata":{},"sourceType":"module"}