{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Field, Formik } from 'formik';\nimport * as actions from '../../../backend/store/actions';\nimport { connect } from 'react-redux';\nimport Cards from 'react-credit-cards';\nimport { SignUpSchema } from './SignUpSchema.js';\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js.js';\nimport Button from '../../../style/FormUI/Buttons.js.js';\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js.js';\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js.js';\nimport { getCreditCardType } from '../CreditCard.js';\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\n\nconst SignUpForm = ({\n  signUp,\n  cleanUp,\n  error,\n  loading\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        focused = _useState2[0],\n        setFocused = _useState2[1];\n\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: \"\",\n      creditCardType: \"\",\n      expDate: \"\",\n      secCode: \"\",\n      apps: {\n        postmates: false,\n        grubhub: false,\n        doordash: false,\n        ubereats: false\n      }\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await signUp(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, ({\n    values,\n    isSubmitting,\n    isValid\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"First Name\",\n    onClick: () => setFocused(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Last Name\",\n    onClick: () => setFocused(\"name\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    required: true,\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    required: true,\n    component: TextInput,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Cards, {\n    number: values.creditCard,\n    name: values.firstName + \" \" + values.lastName,\n    expiry: values.expDate,\n    cvc: values.secCode,\n    focused: focused,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Card Number\",\n    onClick: () => setFocused(\"number\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(AlignedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Expiration Date\",\n    onClick: () => setFocused(\"expiry\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    required: true,\n    component: TextInput,\n    label: \"Security Code\",\n    onClick: () => setFocused(\"cvc\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" What apps do you have? \"), React.createElement(\"ul\", {\n    className: \"checkbox-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.postmates\",\n    type: \"checkbox\",\n    id: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.grubhub\",\n    type: \"checkbox\",\n    id: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.doordash\",\n    type: \"checkbox\",\n    id: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps.ubereats\",\n    type: \"checkbox\",\n    id: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), \" \"))), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Creating account...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, error))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js"],"names":["React","useEffect","useState","Field","Formik","actions","connect","Cards","SignUpSchema","StyledForm","AlignedWrapper","Button","TextInput","Label","Message","MessageWrapper","getCreditCardType","postmates","doordash","grubhub","ubereats","SignUpForm","signUp","cleanUp","error","loading","focused","setFocused","firstName","lastName","username","email","phone","passwordOne","passwordTwo","creditCard","creditCardType","expDate","secCode","apps","values","setSubmitting","isSubmitting","isValid","mapStateToProps","auth","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Field, Formik } from 'formik'\nimport * as actions from '../../../backend/store/actions'\nimport { connect } from 'react-redux'\nimport Cards from 'react-credit-cards'\n\nimport { SignUpSchema } from './SignUpSchema.js'\nimport { StyledForm, AlignedWrapper } from '../../../style/FormUI/FormWrappers.js.js'\nimport Button from '../../../style/FormUI/Buttons.js.js'\nimport { TextInput, Label } from '../../../style/FormUI/Inputs.js.js'\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js.js'\nimport { getCreditCardType } from '../CreditCard.js'\n\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg'\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\n\n\nconst SignUpForm = ({ signUp, cleanUp, error, loading }) => {\n  const [focused, setFocused] = useState(\"\")\n\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return (\n    <Formik\n      initialValues = {{\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        phone: \"\",\n        passwordOne: \"\",\n        passwordTwo: \"\",\n        creditCard: \"\",\n        creditCardType: \"\",\n        expDate: \"\",\n        secCode: \"\",\n        apps: {postmates: false, grubhub: false, doordash: false, ubereats: false},\n      }}\n      validationSchema = {SignUpSchema}\n      onSubmit = {async ( values, { setSubmitting }) => {\n        await signUp(values)\n        setSubmitting(false)\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <StyledForm>\n\n          <AlignedWrapper>\n            <Field name = \"firstName\" type = \"text\" required component = {TextInput} label = \"First Name\" onClick = {() => setFocused(\"name\")}/>\n            <Field name = \"lastName\" type = \"text\" required component = {TextInput} label = \"Last Name\" onClick = {() => setFocused(\"name\")}/>\n          </AlignedWrapper>\n\n          <Field name = \"username\" type = \"text\" required component = {TextInput} label = \"Username\"/>\n          <Field name = \"email\" type = \"email\" required component = {TextInput} label = \"Email\"/>\n          <Field name = \"phone\" type = \"text\" required component = {TextInput} label = \"Phone\"/>\n          \n          <AlignedWrapper>\n            <Field name = \"passwordOne\" type = \"password\" required component = {TextInput} label = \"Password\"/>\n            <Field name = \"passwordTwo\" type = \"password\" required component = {TextInput} label = \"Confirm Password\"/>\n          </AlignedWrapper>\n\n          <Cards\n            number = {values.creditCard}\n            name = {values.firstName + \" \" + values.lastName}\n            expiry = {values.expDate}\n            cvc ={values.secCode}\n            focused = {focused}\n          />\n\n          <Field name = \"creditCard\" type = \"text\" required component = {TextInput} label = \"Card Number\" onClick = {() => setFocused(\"number\")}/>\n          <AlignedWrapper>\n            <Field name = \"expDate\" type = \"text\" required component = {TextInput} label = \"Expiration Date\" onClick = {() => setFocused(\"expiry\")}/>\n            <Field name = \"secCode\" type = \"text\" required component = {TextInput} label = \"Security Code\" onClick = {() => setFocused(\"cvc\")}/>\n          </AlignedWrapper>\n\n          <Label> What apps do you have? </Label>\n          <ul className = \"checkbox-input\">\n            <li>\n              <Field name = \"apps.postmates\" type = \"checkbox\" id = \"Postmates\"/>\n              <label for = \"Postmates\"> <img src = {postmates} /> </label>\n            </li>\n\n            <li>\n              <Field name = \"apps.grubhub\" type = \"checkbox\" id = \"GrubHub\"/>\n              <label for = \"GrubHub\"> <img src = {grubhub} /> </label>\n            </li>\n\n            <li>\n              <Field name = \"apps.doordash\" type = \"checkbox\" id = \"DoorDash\"/>\n              <label for = \"DoorDash\"> <img src = {doordash} /> </label>\n            </li>\n\n            <li>\n              <Field name = \"apps.ubereats\" type = \"checkbox\" id = \"UberEats\"/>\n              <label for = \"UberEats\"> <img src = {ubereats} /> </label>\n            </li>\n          </ul>\n\n          <Button\n            disabled = {!isValid || isSubmitting}\n            loading = {loading ? 'Creating account...' : null}\n            type = \"submit\"\n          > \n            Sign Up \n          </Button>\n\n          <MessageWrapper>\n            <Message error show = {error}>{ error }</Message>\n          </MessageWrapper>\n\n        </StyledForm>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)"]},"metadata":{},"sourceType":"module"}