{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Payment from 'payment';\n\nvar ReactCreditCards = function (_React$Component) {\n  _inherits(ReactCreditCards, _React$Component);\n\n  function ReactCreditCards(props) {\n    _classCallCheck(this, ReactCreditCards);\n\n    var _this = _possibleConstructorReturn(this, (ReactCreditCards.__proto__ || Object.getPrototypeOf(ReactCreditCards)).call(this, props));\n\n    _this.state = {\n      type: {\n        name: 'unknown',\n        maxLength: 16\n      }\n    };\n\n    _this.setCards();\n\n    return _this;\n  }\n\n  _createClass(ReactCreditCards, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var number = this.props.number;\n      this.updateType(number);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          acceptedCards = _props.acceptedCards,\n          number = _props.number;\n      var nextAcceptedCards = nextProps.acceptedCards,\n          nextNumber = nextProps.number;\n\n      if (number !== nextNumber) {\n        this.updateType(nextNumber);\n      }\n\n      if (acceptedCards.toString() !== nextAcceptedCards.toString()) {\n        this.setCards(nextProps);\n      }\n    }\n  }, {\n    key: 'setCards',\n    value: function setCards() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var acceptedCards = props.acceptedCards;\n      var newCardArray = [];\n\n      if (acceptedCards.length) {\n        Payment.getCardArray().forEach(function (d) {\n          if (acceptedCards.indexOf(d.type) !== -1) {\n            newCardArray.push(d);\n          }\n        });\n      } else {\n        newCardArray = newCardArray.concat(Payment.getCardArray());\n      }\n\n      Payment.setCardArray(newCardArray);\n    }\n  }, {\n    key: 'updateType',\n    value: function updateType(number) {\n      var callback = this.props.callback;\n      var type = Payment.fns.cardType(number) || 'unknown';\n      var maxLength = 16;\n\n      if (type === 'amex') {\n        maxLength = 15;\n      } else if (type === 'dinersclub') {\n        maxLength = 14;\n      } else if (['hipercard', 'mastercard', 'visa'].indexOf(type) !== -1) {\n        maxLength = 19;\n      }\n\n      var typeState = {\n        issuer: type,\n        maxLength: maxLength\n      };\n      var isValid = Payment.fns.validateCardNumber(number);\n      this.setState({\n        type: typeState\n      });\n      /* istanbul ignore else */\n\n      if (typeof callback === 'function') {\n        callback(typeState, isValid);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          cvc = _props2.cvc,\n          focused = _props2.focused,\n          locale = _props2.locale,\n          name = _props2.name,\n          placeholders = _props2.placeholders;\n      var number = this.number,\n          expiry = this.expiry;\n      return React.createElement('div', {\n        key: 'Cards',\n        className: 'rccs'\n      }, React.createElement('div', {\n        className: ['rccs__card', 'rccs__card--' + this.issuer, focused === 'cvc' && this.issuer !== 'amex' ? 'rccs__card--flipped' : ''].join(' ').trim()\n      }, React.createElement('div', {\n        className: 'rccs__card--front'\n      }, React.createElement('div', {\n        className: 'rccs__card__background'\n      }), React.createElement('div', {\n        className: 'rccs__issuer'\n      }), React.createElement('div', {\n        className: ['rccs__cvc__front', focused === 'cvc' ? 'rccs--focused' : ''].join(' ').trim()\n      }, cvc), React.createElement('div', {\n        className: ['rccs__number', number.replace(/ /g, '').length > 16 ? 'rccs__number--large' : '', focused === 'number' ? 'rccs--focused' : '', number.substr(0, 1) !== '•' ? 'rccs--filled' : ''].join(' ').trim()\n      }, number), React.createElement('div', {\n        className: ['rccs__name', focused === 'name' ? 'rccs--focused' : '', name ? 'rccs--filled' : ''].join(' ').trim()\n      }, name || placeholders.name), React.createElement('div', {\n        className: ['rccs__expiry', focused === 'expiry' ? 'rccs--focused' : '', expiry.substr(0, 1) !== '•' ? 'rccs--filled' : ''].join(' ').trim()\n      }, React.createElement('div', {\n        className: 'rccs__expiry__valid'\n      }, locale.valid), React.createElement('div', {\n        className: 'rccs__expiry__value'\n      }, expiry)), React.createElement('div', {\n        className: 'rccs__chip'\n      })), React.createElement('div', {\n        className: 'rccs__card--back'\n      }, React.createElement('div', {\n        className: 'rccs__card__background'\n      }), React.createElement('div', {\n        className: 'rccs__stripe'\n      }), React.createElement('div', {\n        className: 'rccs__signature'\n      }), React.createElement('div', {\n        className: ['rccs__cvc', focused === 'cvc' ? 'rccs--focused' : ''].join(' ').trim()\n      }, cvc), React.createElement('div', {\n        className: 'rccs__issuer'\n      }))));\n    }\n  }, {\n    key: 'issuer',\n    get: function get() {\n      var type = this.state.type;\n      var _props3 = this.props,\n          issuer = _props3.issuer,\n          preview = _props3.preview;\n      return preview && issuer ? issuer.toLowerCase() : type.issuer;\n    }\n  }, {\n    key: 'number',\n    get: function get() {\n      var type = this.state.type;\n      var _props4 = this.props,\n          number = _props4.number,\n          preview = _props4.preview;\n      var maxLength = preview ? 19 : type.maxLength;\n      var nextNumber = typeof number === 'number' ? number.toString() : number.replace(/[A-Za-z]| /g, '');\n\n      if (isNaN(parseInt(nextNumber, 10)) && !preview) {\n        nextNumber = '';\n      }\n\n      if (maxLength > 16) {\n        maxLength = nextNumber.length <= 16 ? 16 : maxLength;\n      }\n\n      if (nextNumber.length > maxLength) {\n        nextNumber = nextNumber.slice(0, maxLength);\n      }\n\n      while (nextNumber.length < maxLength) {\n        nextNumber += '•';\n      }\n\n      if (['amex', 'dinersclub'].indexOf(this.issuer) !== -1) {\n        var format = [0, 4, 10];\n        var limit = [4, 6, 5];\n        nextNumber = nextNumber.substr(format[0], limit[0]) + ' ' + nextNumber.substr(format[1], limit[1]) + ' ' + nextNumber.substr(format[2], limit[2]);\n      } else if (nextNumber.length > 16) {\n        var _format = [0, 4, 8, 12];\n        var _limit = [4, 7];\n        nextNumber = nextNumber.substr(_format[0], _limit[0]) + ' ' + nextNumber.substr(_format[1], _limit[0]) + ' ' + nextNumber.substr(_format[2], _limit[0]) + ' ' + nextNumber.substr(_format[3], _limit[1]);\n      } else {\n        for (var i = 1; i < maxLength / 4; i++) {\n          var space_index = i * 4 + (i - 1);\n          nextNumber = nextNumber.slice(0, space_index) + ' ' + nextNumber.slice(space_index);\n        }\n      }\n\n      return nextNumber;\n    }\n  }, {\n    key: 'expiry',\n    get: function get() {\n      var _props$expiry = this.props.expiry,\n          expiry = _props$expiry === undefined ? '' : _props$expiry;\n      var date = typeof expiry === 'number' ? expiry.toString() : expiry;\n      var month = '';\n      var year = '';\n\n      if (date.indexOf('/') !== -1) {\n        var _date$split = date.split('/');\n\n        var _date$split2 = _slicedToArray(_date$split, 2);\n\n        month = _date$split2[0];\n        year = _date$split2[1];\n      } else if (date.length) {\n        month = date.substr(0, 2);\n        year = date.substr(2, 6);\n      }\n\n      while (month.length < 2) {\n        month += '•';\n      }\n\n      if (year.length > 2) {\n        year = year.substr(2, 4);\n      }\n\n      while (year.length < 2) {\n        year += '•';\n      }\n\n      return month + '/' + year;\n    }\n  }]);\n\n  return ReactCreditCards;\n}(React.Component);\n\nReactCreditCards.propTypes = {\n  acceptedCards: PropTypes.array,\n  callback: PropTypes.func,\n  cvc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  expiry: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  focused: PropTypes.string,\n  issuer: PropTypes.string,\n  locale: PropTypes.shape({\n    valid: PropTypes.string\n  }),\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  placeholders: PropTypes.shape({\n    name: PropTypes.string\n  }),\n  preview: PropTypes.bool\n};\nReactCreditCards.defaultProps = {\n  acceptedCards: [],\n  locale: {\n    valid: 'valid thru'\n  },\n  placeholders: {\n    name: 'YOUR NAME HERE'\n  },\n  preview: false\n};\nexport default ReactCreditCards;","map":null,"metadata":{},"sourceType":"module"}