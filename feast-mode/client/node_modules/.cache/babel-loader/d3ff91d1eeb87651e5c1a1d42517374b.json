{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriendButton.js\";\nimport React, { useState } from 'react';\nimport * as actions from '../../backend/store/actions';\nimport { connect } from 'react-redux';\n\nconst AddFriendButton = ({\n  friend,\n  sendInvite,\n  cleanUp,\n  error,\n  loading\n}) => {\n  const onClick = () => {\n    sendInvite(friend);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"+\"));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  sendInvite: actions.sendInvite,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFriendButton); // import { connect } from 'react-redux'\n// import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\n// import Friend from './Friend.js';\n// import Loader from '../Loader/index.js';\n// const AddFriends = ({ allUsers, requesting, requested, userId }) => {\n//     let content;\n//     if (!allUsers) {\n//       content = (\n//           <Loader  />\n//       );\n//     } else if (!allUsers[userId] && requested[`users/${userId}`]) {\n//       content = (\n//           <h2 color=\"white\" size=\"h2\">\n//             You have no friends!\n//           </h2>\n//       );\n//     } else {\n//       content = (\n//         //   {allUsers[userId].users.map(user => (\n//         //     <Friend key={user.id} friend={user} />\n//         //   ))}\n//         <div></div>\n//       );\n//     }\n//     return (\n//         <div className=\"add-friends\">\n//             <h2>Add Friends</h2>\n//             {content}\n//         </div>\n//     );\n//   };\n//   const mapStateToProps = ({ firebase, firestore }) => ({\n//     userId: firebase.auth.uid,\n//     allUsers: firestore.data.users,\n//     requesting: firestore.status.requesting,\n//     requested: firestore.status.requested,\n//   });\n//   const mapDispatchToProps = {};\n//   export default compose(\n//     connect(\n//       mapStateToProps,\n//       mapDispatchToProps\n//     ),\n//     firestoreConnect(props => [`users/${props.userId}`])\n//   )(AddFriends);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriendButton.js"],"names":["React","useState","actions","connect","AddFriendButton","friend","sendInvite","cleanUp","error","loading","onClick","mapStateToProps","auth","mapDispatchToProps","clean"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA;AAArC,CAAD,KAAmD;AACvE,QAAMC,OAAO,GAAG,MAAM;AAClBJ,IAAAA,UAAU,CAACD,MAAD,CAAV;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAQH,CAbD;;AAgBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACnCH,EAAAA,OAAO,EAAEG,IAAI,CAACH,OADqB;AAEnCD,EAAAA,KAAK,EAAEI,IAAI,CAACJ;AAFuB,CAAf,CAAxB;;AAKA,MAAMK,kBAAkB,GAAG;AACvBP,EAAAA,UAAU,EAAEJ,OAAO,CAACI,UADG;AAEvBC,EAAAA,OAAO,EAAEL,OAAO,CAACY;AAFM,CAA3B;AAKA,eAAeX,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,eAA7C,CAAf,C,CAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport * as actions from '../../backend/store/actions'\nimport { connect } from 'react-redux';\n\n\nconst AddFriendButton = ({friend, sendInvite, cleanUp, error, loading}) => {\n    const onClick = () => {\n        sendInvite(friend);\n    }\n\n    return(\n        <div className=\"\">\n            <button onClick={onClick}>\n                +\n            </button>\n        </div>\n        \n    );\n};\n\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error,\n})\n\nconst mapDispatchToProps = {\n    sendInvite: actions.sendInvite,\n    cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFriendButton)\n\n\n\n\n\n\n\n\n\n// import { connect } from 'react-redux'\n// import { firestoreConnect } from 'react-redux-firebase'\n// import { compose } from 'redux'\n// import Friend from './Friend.js';\n// import Loader from '../Loader/index.js';\n\n// const AddFriends = ({ allUsers, requesting, requested, userId }) => {\n//     let content;\n//     if (!allUsers) {\n//       content = (\n//           <Loader  />\n//       );\n//     } else if (!allUsers[userId] && requested[`users/${userId}`]) {\n//       content = (\n//           <h2 color=\"white\" size=\"h2\">\n//             You have no friends!\n//           </h2>\n//       );\n//     } else {\n//       content = (\n//         //   {allUsers[userId].users.map(user => (\n//         //     <Friend key={user.id} friend={user} />\n//         //   ))}\n//         <div></div>\n//       );\n//     }\n  \n//     return (\n//         <div className=\"add-friends\">\n//             <h2>Add Friends</h2>\n//             {content}\n//         </div>\n      \n//     );\n//   };\n  \n//   const mapStateToProps = ({ firebase, firestore }) => ({\n//     userId: firebase.auth.uid,\n//     allUsers: firestore.data.users,\n//     requesting: firestore.status.requesting,\n//     requested: firestore.status.requested,\n//   });\n  \n//   const mapDispatchToProps = {};\n  \n//   export default compose(\n//     connect(\n//       mapStateToProps,\n//       mapDispatchToProps\n//     ),\n//     firestoreConnect(props => [`users/${props.userId}`])\n//   )(AddFriends);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}