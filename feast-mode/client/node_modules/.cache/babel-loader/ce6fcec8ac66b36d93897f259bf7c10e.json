{"ast":null,"code":"/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = morgan;\nmodule.exports.compile = compile;\nmodule.exports.format = format;\nmodule.exports.token = token;\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth');\n\nvar debug = require('debug')('morgan');\n\nvar deprecate = require('depd')('morgan');\n\nvar onFinished = require('on-finished');\n\nvar onHeaders = require('on-headers');\n/**\n * Array of CLF month names.\n * @private\n */\n\n\nvar CLF_MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000;\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan(format, options) {\n  var fmt = format;\n  var opts = options || {};\n\n  if (format && typeof format === 'object') {\n    opts = format;\n    fmt = opts.format || 'default'; // smart deprecation message\n\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead');\n  }\n\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format');\n  } // output on request instead of response\n\n\n  var immediate = opts.immediate; // check if log entry should be skipped\n\n  var skip = opts.skip || false; // format function\n\n  var formatLine = typeof fmt !== 'function' ? getFormatFunction(fmt) : fmt; // stream\n\n  var buffer = opts.buffer;\n  var stream = opts.stream || process.stdout; // buffering support\n\n  if (buffer) {\n    deprecate('buffer option'); // flush interval\n\n    var interval = typeof buffer !== 'number' ? DEFAULT_BUFFER_DURATION : buffer; // swap the stream\n\n    stream = createBufferStream(stream, interval);\n  }\n\n  return function logger(req, res, next) {\n    // request data\n    req._startAt = undefined;\n    req._startTime = undefined;\n    req._remoteAddress = getip(req); // response data\n\n    res._startAt = undefined;\n    res._startTime = undefined; // record request start\n\n    recordStartTime.call(req);\n\n    function logRequest() {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request');\n        return;\n      }\n\n      var line = formatLine(morgan, req, res);\n\n      if (line == null) {\n        debug('skip line');\n        return;\n      }\n\n      debug('log request');\n      stream.write(line + '\\n');\n    }\n\n    ;\n\n    if (immediate) {\n      // immediate log\n      logRequest();\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime); // log when response finished\n\n      onFinished(res, logRequest);\n    }\n\n    next();\n  };\n}\n/**\n * Apache combined log format.\n */\n\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]');\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');\ndeprecate.property(morgan, 'default', 'default format: use combined format');\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms');\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms');\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine(tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res) ? res.statusCode : undefined; // get status color\n\n  var color = status >= 500 ? 31 // red\n  : status >= 400 ? 33 // yellow\n  : status >= 300 ? 36 // cyan\n  : status >= 200 ? 32 // green\n  : 0; // no color\n  // get colored function\n\n  var fn = developmentFormatLine[color];\n\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' + color + 'm:status \\x1b[0m:response-time ms - :res[content-length]\\x1b[0m');\n  }\n\n  return fn(tokens, req, res);\n});\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken(req) {\n  return req.originalUrl || req.url;\n});\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken(req) {\n  return req.method;\n});\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken(req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return;\n  } // calculate diff\n\n\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 + (res._startAt[1] - req._startAt[1]) * 1e-6; // return truncated value\n\n  return ms.toFixed(digits === undefined ? 3 : digits);\n});\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken(req, res, format) {\n  var date = new Date();\n\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date);\n\n    case 'iso':\n      return date.toISOString();\n\n    case 'web':\n      return date.toUTCString();\n  }\n});\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken(req, res) {\n  return headersSent(res) ? String(res.statusCode) : undefined;\n});\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken(req) {\n  return req.headers['referer'] || req.headers['referrer'];\n});\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip);\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken(req) {\n  // parse basic credentials\n  var credentials = auth(req); // return username\n\n  return credentials ? credentials.name : undefined;\n});\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken(req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor;\n});\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken(req) {\n  return req.headers['user-agent'];\n});\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken(req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()];\n  return Array.isArray(header) ? header.join(', ') : header;\n});\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader(req, res, field) {\n  if (!headersSent(res)) {\n    return undefined;\n  } // get header\n\n\n  var header = res.getHeader(field);\n  return Array.isArray(header) ? header.join(', ') : header;\n});\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate(dateTime) {\n  var date = dateTime.getUTCDate();\n  var hour = dateTime.getUTCHours();\n  var mins = dateTime.getUTCMinutes();\n  var secs = dateTime.getUTCSeconds();\n  var year = dateTime.getUTCFullYear();\n  var month = CLF_MONTH[dateTime.getUTCMonth()];\n  return pad2(date) + '/' + month + '/' + year + ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) + ' +0000';\n}\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\n\nfunction compile(format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string');\n  }\n\n  var fmt = String(JSON.stringify(format));\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res';\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']';\n\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg));\n    }\n\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"';\n  }); // eslint-disable-next-line no-new-func\n\n  return new Function('tokens, req, res', js);\n}\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\n\nfunction createBufferStream(stream, interval) {\n  var buf = [];\n  var timer = null; // flush function\n\n  function flush() {\n    timer = null;\n    stream.write(buf.join(''));\n    buf.length = 0;\n  } // write function\n\n\n  function write(str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval);\n    }\n\n    buf.push(str);\n  } // return a minimal \"stream\"\n\n\n  return {\n    write: write\n  };\n}\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\n\nfunction format(name, fmt) {\n  morgan[name] = fmt;\n  return this;\n}\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\n\nfunction getFormatFunction(name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default; // return compiled format\n\n  return typeof fmt !== 'function' ? compile(fmt) : fmt;\n}\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\n\nfunction getip(req) {\n  return req.ip || req._remoteAddress || req.connection && req.connection.remoteAddress || undefined;\n}\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\n\nfunction headersSent(res) {\n  return typeof res.headersSent !== 'boolean' ? Boolean(res._header) : res.headersSent;\n}\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\n\nfunction pad2(num) {\n  var str = String(num);\n  return (str.length === 1 ? '0' : '') + str;\n}\n/**\n * Record the start time.\n * @private\n */\n\n\nfunction recordStartTime() {\n  this._startAt = process.hrtime();\n  this._startTime = new Date();\n}\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\n\nfunction token(name, fn) {\n  morgan[name] = fn;\n  return this;\n}","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/server/node_modules/morgan/index.js"],"names":["module","exports","morgan","compile","format","token","auth","require","debug","deprecate","onFinished","onHeaders","CLF_MONTH","DEFAULT_BUFFER_DURATION","options","fmt","opts","JSON","stringify","undefined","immediate","skip","formatLine","getFormatFunction","buffer","stream","process","stdout","interval","createBufferStream","logger","req","res","next","_startAt","_startTime","_remoteAddress","getip","recordStartTime","call","logRequest","line","write","property","developmentFormatLine","tokens","status","headersSent","statusCode","color","fn","getUrlToken","originalUrl","url","getMethodToken","method","getResponseTimeToken","digits","ms","toFixed","getDateToken","date","Date","clfdate","toISOString","toUTCString","getStatusToken","String","getReferrerToken","headers","getRemoteUserToken","credentials","name","getHttpVersionToken","httpVersionMajor","httpVersionMinor","getUserAgentToken","getRequestToken","field","header","toLowerCase","Array","isArray","join","getResponseHeader","getHeader","dateTime","getUTCDate","hour","getUTCHours","mins","getUTCMinutes","secs","getUTCSeconds","year","getUTCFullYear","month","getUTCMonth","pad2","TypeError","js","replace","_","arg","tokenArguments","tokenFunction","Function","buf","timer","flush","length","str","setTimeout","push","default","ip","connection","remoteAddress","Boolean","_header","num","hrtime"],"mappings":"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","sourcesContent":["/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = morgan\nmodule.exports.compile = compile\nmodule.exports.format = format\nmodule.exports.token = token\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth')\nvar debug = require('debug')('morgan')\nvar deprecate = require('depd')('morgan')\nvar onFinished = require('on-finished')\nvar onHeaders = require('on-headers')\n\n/**\n * Array of CLF month names.\n * @private\n */\n\nvar CLF_MONTH = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000\n\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan (format, options) {\n  var fmt = format\n  var opts = options || {}\n\n  if (format && typeof format === 'object') {\n    opts = format\n    fmt = opts.format || 'default'\n\n    // smart deprecation message\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\n  }\n\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format')\n  }\n\n  // output on request instead of response\n  var immediate = opts.immediate\n\n  // check if log entry should be skipped\n  var skip = opts.skip || false\n\n  // format function\n  var formatLine = typeof fmt !== 'function'\n    ? getFormatFunction(fmt)\n    : fmt\n\n  // stream\n  var buffer = opts.buffer\n  var stream = opts.stream || process.stdout\n\n  // buffering support\n  if (buffer) {\n    deprecate('buffer option')\n\n    // flush interval\n    var interval = typeof buffer !== 'number'\n      ? DEFAULT_BUFFER_DURATION\n      : buffer\n\n    // swap the stream\n    stream = createBufferStream(stream, interval)\n  }\n\n  return function logger (req, res, next) {\n    // request data\n    req._startAt = undefined\n    req._startTime = undefined\n    req._remoteAddress = getip(req)\n\n    // response data\n    res._startAt = undefined\n    res._startTime = undefined\n\n    // record request start\n    recordStartTime.call(req)\n\n    function logRequest () {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request')\n        return\n      }\n\n      var line = formatLine(morgan, req, res)\n\n      if (line == null) {\n        debug('skip line')\n        return\n      }\n\n      debug('log request')\n      stream.write(line + '\\n')\n    };\n\n    if (immediate) {\n      // immediate log\n      logRequest()\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime)\n\n      // log when response finished\n      onFinished(res, logRequest)\n    }\n\n    next()\n  }\n}\n\n/**\n * Apache combined log format.\n */\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\n\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]')\n\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\ndeprecate.property(morgan, 'default', 'default format: use combined format')\n\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms')\n\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms')\n\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine (tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res)\n    ? res.statusCode\n    : undefined\n\n  // get status color\n  var color = status >= 500 ? 31 // red\n    : status >= 400 ? 33 // yellow\n      : status >= 300 ? 36 // cyan\n        : status >= 200 ? 32 // green\n          : 0 // no color\n\n  // get colored function\n  var fn = developmentFormatLine[color]\n\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' +\n      color + 'm:status \\x1b[0m:response-time ms - :res[content-length]\\x1b[0m')\n  }\n\n  return fn(tokens, req, res)\n})\n\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken (req) {\n  return req.originalUrl || req.url\n})\n\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken (req) {\n  return req.method\n})\n\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // calculate diff\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 +\n    (res._startAt[1] - req._startAt[1]) * 1e-6\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken (req, res, format) {\n  var date = new Date()\n\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date)\n    case 'iso':\n      return date.toISOString()\n    case 'web':\n      return date.toUTCString()\n  }\n})\n\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken (req, res) {\n  return headersSent(res)\n    ? String(res.statusCode)\n    : undefined\n})\n\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken (req) {\n  return req.headers['referer'] || req.headers['referrer']\n})\n\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip)\n\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken (req) {\n  // parse basic credentials\n  var credentials = auth(req)\n\n  // return username\n  return credentials\n    ? credentials.name\n    : undefined\n})\n\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken (req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor\n})\n\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken (req) {\n  return req.headers['user-agent']\n})\n\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken (req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()]\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader (req, res, field) {\n  if (!headersSent(res)) {\n    return undefined\n  }\n\n  // get header\n  var header = res.getHeader(field)\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate (dateTime) {\n  var date = dateTime.getUTCDate()\n  var hour = dateTime.getUTCHours()\n  var mins = dateTime.getUTCMinutes()\n  var secs = dateTime.getUTCSeconds()\n  var year = dateTime.getUTCFullYear()\n\n  var month = CLF_MONTH[dateTime.getUTCMonth()]\n\n  return pad2(date) + '/' + month + '/' + year +\n    ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) +\n    ' +0000'\n}\n\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\nfunction compile (format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string')\n  }\n\n  var fmt = String(JSON.stringify(format))\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res'\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']'\n\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg))\n    }\n\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"'\n  })\n\n  // eslint-disable-next-line no-new-func\n  return new Function('tokens, req, res', js)\n}\n\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\nfunction createBufferStream (stream, interval) {\n  var buf = []\n  var timer = null\n\n  // flush function\n  function flush () {\n    timer = null\n    stream.write(buf.join(''))\n    buf.length = 0\n  }\n\n  // write function\n  function write (str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval)\n    }\n\n    buf.push(str)\n  }\n\n  // return a minimal \"stream\"\n  return { write: write }\n}\n\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\nfunction format (name, fmt) {\n  morgan[name] = fmt\n  return this\n}\n\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\nfunction getFormatFunction (name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default\n\n  // return compiled format\n  return typeof fmt !== 'function'\n    ? compile(fmt)\n    : fmt\n}\n\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\nfunction getip (req) {\n  return req.ip ||\n    req._remoteAddress ||\n    (req.connection && req.connection.remoteAddress) ||\n    undefined\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\nfunction pad2 (num) {\n  var str = String(num)\n\n  return (str.length === 1 ? '0' : '') + str\n}\n\n/**\n * Record the start time.\n * @private\n */\n\nfunction recordStartTime () {\n  this._startAt = process.hrtime()\n  this._startTime = new Date()\n}\n\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\nfunction token (name, fn) {\n  morgan[name] = fn\n  return this\n}\n"]},"metadata":{},"sourceType":"module"}