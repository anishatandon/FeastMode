{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ImageUpload.js\";\nimport React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass ImageUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      avatar: \"\",\n      isUploading: false,\n      avatarURL: \"\"\n    };\n\n    this.handleUploadSuccess = filename => {\n      this.setState({\n        avatar: filename,\n        isUploading: false\n      });\n      firebase.storage().ref(\"images\").child(filename).getDownloadURL().then(url => this.setState({\n        avatarURL: url\n      })); // Get current username\n\n      var user = firebase.auth().currentUser;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Avatar:\"), this.state.avatarURL && React.createElement(\"img\", {\n      src: this.state.avatarURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(FileUploader, {\n      accept: \"image/*\",\n      name: \"avatar\",\n      randomizeFilename: true,\n      storageRef: firebase.storage().ref(\"images\") // onUploadStart={this.handleUploadStart}\n      // onUploadError={this.handleUploadError}\n      ,\n      onUploadSuccess: this.handleUploadSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ImageUpload.js"],"names":["React","Component","firebase","FileUploader","ImageUpload","state","avatar","isUploading","avatarURL","handleUploadSuccess","filename","setState","storage","ref","child","getDownloadURL","then","url","user","auth","currentUser","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,WAAW,EAAE,KAFT;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADwB;;AAAA,SAOhCC,mBAPgC,GAOVC,QAAQ,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEI,QAAV;AAAoBH,QAAAA,WAAW,EAAE;AAAjC,OAAd;AACAL,MAAAA,QAAQ,CACHU,OADL,GAEKC,GAFL,CAES,QAFT,EAGKC,KAHL,CAGWJ,QAHX,EAIKK,cAJL,GAKKC,IALL,CAKUC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAES;AAAb,OAAd,CALjB,EAF8B,CAS9B;;AACA,UAAIC,IAAI,GAAGhB,QAAQ,CAACiB,IAAT,GAAgBC,WAA3B;AAGH,KApB+B;AAAA;;AAsBhCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKhB,KAAL,CAAWG,SAAX,IAAwB;AAAK,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7B,EAGI,oBAAC,YAAD;AACI,MAAA,MAAM,EAAC,SADX;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,iBAAiB,MAHrB;AAII,MAAA,UAAU,EAAEN,QAAQ,CAACU,OAAT,GAAmBC,GAAnB,CAAuB,QAAvB,CAJhB,CAKI;AACA;AANJ;AAOI,MAAA,eAAe,EAAE,KAAKJ,mBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AAiBH;;AAxC+B;;AA2CpC,eAAeL,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass ImageUpload extends Component {\n    state = {\n        avatar: \"\",\n        isUploading: false,\n        avatarURL: \"\"\n    };\n\n    handleUploadSuccess = filename => {\n        this.setState({ avatar: filename, isUploading: false });\n        firebase\n            .storage()\n            .ref(\"images\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => this.setState({ avatarURL: url }));\n            \n        // Get current username\n        var user = firebase.auth().currentUser;\n\n        \n    };\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label >Avatar:</label>\n                    {this.state.avatarURL && <img src={this.state.avatarURL} />}\n                    <FileUploader\n                        accept=\"image/*\"\n                        name=\"avatar\"\n                        randomizeFilename\n                        storageRef={firebase.storage().ref(\"images\")}\n                        // onUploadStart={this.handleUploadStart}\n                        // onUploadError={this.handleUploadError}\n                        onUploadSuccess={this.handleUploadSuccess}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}