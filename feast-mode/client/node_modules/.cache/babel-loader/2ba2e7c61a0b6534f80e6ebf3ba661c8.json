{"ast":null,"code":"var _jsxFileName = \"/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/index.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './Map.css';\nconst API_KEY = \"AIzaSyDygU61iYWBAL1-YltIBuKg4gi8c1G2tMQ\";\nconst mapStyles = {\n  width: '60%',\n  height: '40%'\n};\nconst markerStyle = {\n  height: '3rem',\n  width: '3rem',\n  marginTop: '-50px'\n};\nconst imgStyle = {\n  height: '100%'\n};\n\nconst Marker = ({\n  title\n}) => React.createElement(\"div\", {\n  style: markerStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  style: imgStyle,\n  src: \"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\",\n  alt: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, title));\n\nclass DisplayMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = () => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.watchPosition(position => {\n          this.setState({\n            center: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            },\n            loading: false\n          });\n        });\n      } else {\n        alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n      }\n    };\n\n    this.state = {\n      center: {\n        lat: 5.6219868,\n        lng: -0.23223\n      },\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  render() {\n    if (this.state.loading) return null;\n    return React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(GoogleMap, {\n      style: mapStyles,\n      bootstrapURLKeys: {\n        key: ''\n      },\n      center: {\n        lat: this.state.center.lat,\n        lng: this.state.center.lng\n      },\n      zoom: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      title: 'Current Location',\n      lat: this.state.center.lat,\n      lng: this.state.center.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DisplayMap;","map":{"version":3,"sources":["/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/index.js"],"names":["React","Component","GoogleMap","API_KEY","mapStyles","width","height","markerStyle","marginTop","imgStyle","Marker","title","DisplayMap","constructor","props","getLocation","navigator","geolocation","watchPosition","position","setState","center","lat","coords","latitude","lng","longitude","loading","alert","state","componentDidMount","render","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;AAKE,MAAMC,WAAW,GAAG;AAClBD,EAAAA,MAAM,EAAE,MADU;AAElBD,EAAAA,KAAK,EAAE,MAFW;AAGlBG,EAAAA,SAAS,EAAE;AAHO,CAApB;AAMA,MAAMC,QAAQ,GAAG;AACfH,EAAAA,MAAM,EAAE;AADO,CAAjB;;AAKA,MAAMI,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACb;AAAK,EAAA,KAAK,EAAEJ,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,KAAK,EAAEE,QAAZ;AAAsB,EAAA,GAAG,EAAC,iGAA1B;AAA4H,EAAA,GAAG,EAAEE,KAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAL,CAFF,CADF;;AAOA,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AACjCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,WAZmB,GAYL,MAAM;AAChB,UAAI,iBAAiBC,SAArB,EAAgC;AAC5BA,QAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAoCC,QAAQ,IAAI;AAC5C,eAAKC,QAAL,CAAc;AACVC,YAAAA,MAAM,EAAE;AACJC,cAAAA,GAAG,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,QADjB;AAEJC,cAAAA,GAAG,EAAEN,QAAQ,CAACI,MAAT,CAAgBG;AAFjB,aADE;AAKVC,YAAAA,OAAO,EAAE;AALC,WAAd;AAOH,SARD;AASJ,OAVA,MAWK;AACDC,QAAAA,KAAK,CAAC,mFAAD,CAAL;AACC;AACR,KA3BkB;;AAEf,SAAKC,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,SAAP;AAAkBG,QAAAA,GAAG,EAAE,CAAC;AAAxB,OADC;AAETE,MAAAA,OAAO,EAAE;AAFA,KAAb;AAID;;AAEHG,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL;AACH;;AAmBDgB,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKF,KAAL,CAAWF,OAAd,EACI,OAAO,IAAP;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEvB,SADX;AAEI,MAAA,gBAAgB,EAAE;AAAE4B,QAAAA,GAAG,EAAE;AAAP,OAFtB;AAGI,MAAA,MAAM,EAAE;AAAEV,QAAAA,GAAG,EAAE,KAAKO,KAAL,CAAWR,MAAX,CAAkBC,GAAzB;AAA8BG,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWR,MAAX,CAAkBI;AAArD,OAHZ;AAII,MAAA,IAAI,EAAE,EAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,kBADX;AAEI,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWR,MAAX,CAAkBC,GAF3B;AAGI,MAAA,GAAG,EAAE,KAAKO,KAAL,CAAWR,MAAX,CAAkBI,GAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CADF;AAgBD;;AAlDgC;;AAqDnC,eAAeb,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\n\nimport './Map.css'\n\nconst API_KEY = \"AIzaSyDygU61iYWBAL1-YltIBuKg4gi8c1G2tMQ\"\n\nconst mapStyles = {\n    width: '60%',\n    height: '40%'\n  }\n\n  const markerStyle = {\n    height: '3rem',\n    width: '3rem',\n    marginTop: '-50px'\n  }\n\n  const imgStyle = {\n    height: '100%'\n  }\n\n\n  const Marker = ({ title }) => (\n    <div style={markerStyle}>\n      <img style={imgStyle} src=\"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\" alt={title} />\n      <h3>{title}</h3>\n    </div>\n  );\n\n  class DisplayMap extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            center: { lat: 5.6219868, lng: -0.23223 },\n            loading: true,\n        }\n      }\n\n    componentDidMount() {\n        this.getLocation()\n    }\n\n    getLocation = () => {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.watchPosition(position => {\n                this.setState({\n                    center: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    loading: false,\n                })\n            })\n       } \n        else {\n            alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n            }\n    }\n\n    render() {\n        if(this.state.loading)\n            return null\n\n      return (\n        <div className=\"map\">\n            <GoogleMap\n                style={mapStyles}\n                bootstrapURLKeys={{ key: '' }}\n                center={{ lat: this.state.center.lat, lng: this.state.center.lng }}\n                zoom={14}\n            >\n                <Marker\n                    title={'Current Location'}\n                    lat={this.state.center.lat}\n                    lng={this.state.center.lng}\n                />\n            </GoogleMap>\n        </div>\n      )\n    }\n  }\n\n  export default DisplayMap;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}