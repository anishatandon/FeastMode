{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/Profile/ProfileEdit/ImageUpload.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    border-radius: 50%; \\n    align-items: center;\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 25rem;\\n    height: 25rem;\\n    object-fit: cover;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { setState } from 'react';\nimport { connect } from 'react-redux';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport * as actions from '../../../../backend/store/actions';\nimport { storage } from 'firebase';\nimport styled from 'styled-components';\nconst StyledImage = styled.img(_templateObject());\n\nconst ImageUpload = ({\n  updateImageUrl,\n  profile\n}) => {\n  const _setState = setState(''),\n        _setState2 = _slicedToArray(_setState, 2),\n        avatar = _setState2[0],\n        setAvatar = _setState2[1];\n\n  const _setState3 = setState(profile.ima),\n        _setState4 = _slicedToArray(_setState3, 2),\n        avatarUrl = _setState4[0],\n        setAvatarUrl = _setState4[1];\n\n  let state = {\n    avatar: \"\",\n    avatarURL: profile.imageUrl,\n    updateImageUrl: updateImageUrl\n  };\n\n  const handleUploadSuccess = filename => {\n    state.avatar = filename;\n    storage().ref(\"images/\").child(filename).getDownloadURL().then(url => {\n      state.avatarURL = url;\n      updateImageUrl(state.avatarURL);\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, state.avatarURL && React.createElement(StyledImage, {\n    src: state.avatarURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FileUploader, {\n    hidden: true,\n    accept: \"image/*\",\n    name: \"avatar\",\n    randomizeFilename: true,\n    storageRef: storage().ref(\"images\"),\n    onUploadSuccess: handleUploadSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  profile: firebase.profile\n});\n\nconst mapDispatchToProps = {\n  updateImageUrl: actions.updateImageUrl\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUpload);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/Profile/ProfileEdit/ImageUpload.js"],"names":["React","setState","connect","FileUploader","actions","storage","styled","StyledImage","img","ImageUpload","updateImageUrl","profile","avatar","setAvatar","ima","avatarUrl","setAvatarUrl","state","avatarURL","imageUrl","handleUploadSuccess","filename","ref","child","getDownloadURL","then","url","mapStateToProps","firebase","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAV,mBAAjB;;AAWA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAAA,oBACrBV,QAAQ,CAAC,EAAD,CADa;AAAA;AAAA,QAC1CW,MAD0C;AAAA,QAClCC,SADkC;;AAAA,qBAEfZ,QAAQ,CAACU,OAAO,CAACG,GAAT,CAFO;AAAA;AAAA,QAE1CC,SAF0C;AAAA,QAE/BC,YAF+B;;AAGjD,MAAIC,KAAK,GAAG;AACRL,IAAAA,MAAM,EAAE,EADA;AAERM,IAAAA,SAAS,EAAEP,OAAO,CAACQ,QAFX;AAGRT,IAAAA,cAAc,EAAEA;AAHR,GAAZ;;AAMA,QAAMU,mBAAmB,GAAGC,QAAQ,IAAI;AACpCJ,IAAAA,KAAK,CAACL,MAAN,GAAeS,QAAf;AACAhB,IAAAA,OAAO,GACFiB,GADL,CACS,SADT,EAEKC,KAFL,CAEWF,QAFX,EAGKG,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACTT,MAAAA,KAAK,CAACC,SAAN,GAAkBQ,GAAlB;AACAhB,MAAAA,cAAc,CAACO,KAAK,CAACC,SAAP,CAAd;AACH,KAPL;AASH,GAXD;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACC,SAAN,IAAmB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAID,KAAK,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,EAEI,oBAAC,YAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,MAAM,EAAG,SAFb;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,iBAAiB,MAJrB;AAKI,IAAA,UAAU,EAAIb,OAAO,GAAGiB,GAAV,CAAc,QAAd,CALlB;AAMI,IAAA,eAAe,EAAIF,mBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAeH,CArCD;;AAuCA,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AACvCjB,EAAAA,OAAO,EAAEiB,QAAQ,CAACjB;AADqB,CAAnB,CAAxB;;AAIA,MAAMkB,kBAAkB,GAAG;AACvBnB,EAAAA,cAAc,EAAEN,OAAO,CAACM;AADD,CAA3B;AAIA,eAAeR,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,WAA7C,CAAf","sourcesContent":["import React, { setState } from 'react'\nimport { connect } from 'react-redux'\nimport FileUploader from \"react-firebase-file-uploader\"\nimport * as actions from '../../../../backend/store/actions'\nimport { storage } from 'firebase'\nimport styled from 'styled-components'\n\nconst StyledImage = styled.img`\n    border-radius: 50%; \n    align-items: center;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 25rem;\n    height: 25rem;\n    object-fit: cover;\n`\n\nconst ImageUpload = ({ updateImageUrl, profile }) => {\n    const [avatar, setAvatar] = setState('')\n    const [avatarUrl, setAvatarUrl] = setState(profile.ima)\n    let state = {\n        avatar: \"\",\n        avatarURL: profile.imageUrl,\n        updateImageUrl: updateImageUrl,\n    }\n\n    const handleUploadSuccess = filename => {\n        state.avatar = filename\n        storage()\n            .ref(\"images/\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => {\n                state.avatarURL = url\n                updateImageUrl(state.avatarURL)\n            }\n        )\n    }\n\n    return (\n        <form>\n            <label>\n                {state.avatarURL && <StyledImage src = {state.avatarURL}/>}\n                <FileUploader\n                    hidden\n                    accept = \"image/*\"\n                    name = \"avatar\"\n                    randomizeFilename\n                    storageRef = {storage().ref(\"images\")}\n                    onUploadSuccess = {handleUploadSuccess}\n                />\n            </label>\n        </form>\n    )\n}\n\nconst mapStateToProps = ({ firebase }) => ({\n    profile: firebase.profile,\n})\n\nconst mapDispatchToProps = {\n    updateImageUrl: actions.updateImageUrl,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUpload);\n"]},"metadata":{},"sourceType":"module"}