{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  max-width: 60rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { ProfileEditSchema } from './ProfileSchemas.js';\nimport * as actions from '../../../backend/store/actions'; // App Logos\n\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg'; // Style\n\nimport styled from 'styled-components';\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js';\nimport { TextInput } from '../../../style/FormUI/Inputs.js';\nimport Button from '../../../style/FormUI/Buttons.js';\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js';\nimport { ProfileDeleteLink } from '../../../style/FormUI/Links.js';\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js';\nconst SignUpFormWrapper = styled(FormWrapper)(_templateObject());\nconst Wrapper = styled.div(_templateObject2()); // import ImageUpload from './ImageUpload.js';\n\nconst ProfileEdit = ({\n  firebase,\n  error,\n  loading,\n  cleanUp,\n  editProfile\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  if (!firebase.profile.isLoaded) return null;\n  let displayError;\n\n  if (error) {\n    displayError = {\n      display: \"block\"\n    };\n  } else {\n    displayError = {\n      display: \"none\"\n    };\n  }\n\n  return React.createElement(SignUpFormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Edit Your Profile \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Formik, {\n    initialValues: {\n      firstName: firebase.profile.firstName,\n      lastName: firebase.profile.lastName,\n      username: firebase.profile.username,\n      email: firebase.auth.email,\n      phone: firebase.profile.phone,\n      passwordOne: \"\",\n      passwordTwo: \"\",\n      creditCard: firebase.profile.creditCard,\n      expDate: firebase.profile.expDate,\n      secCode: firebase.profile.secCode,\n      creditCardType: firebase.profile.creditCardType,\n      apps: firebase.profile.apps,\n      // Postmates, GrubHub, DoorDash, UberEats\n      picture: firebase.profile.picture // initial picture, the default one given at signup\n\n    },\n    validationSchema: ProfileEditSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await editProfile(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, console.log(userApps), ({\n    values,\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"creditCard\",\n    type: \"text\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"expDate\",\n    type: \"text\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"secCode\",\n    type: \"text\",\n    aligned: \"true\",\n    component: TextInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"checkbox-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps[0]\",\n    type: \"checkbox\",\n    id: \"Postmates\",\n    checked: values.apps.postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"Postmates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: postmates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps[1]\",\n    type: \"checkbox\",\n    id: \"GrubHub\",\n    checked: values.apps.grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"GrubHub\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: grubhub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps[2]\",\n    type: \"checkbox\",\n    id: \"DoorDash\",\n    checked: values.apps.doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"DoorDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: doordash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), \" \")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"apps[3]\",\n    type: \"checkbox\",\n    id: \"UberEats\",\n    checked: values.apps.ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: \"UberEats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: ubereats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), \" \")))), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"apps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, error)))), React.createElement(ProfileDeleteLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  auth\n}) => ({\n  firebase,\n  loading: auth.profileEdit.loading,\n  error: auth.profileEdit.error\n});\n\nconst mapDispatchToProps = {\n  editProfile: actions.editProfile,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEdit);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/ProfileEdit.js"],"names":["React","useEffect","connect","Formik","Field","ErrorMessage","ProfileEditSchema","actions","postmates","doordash","grubhub","ubereats","styled","StyledForm","TextInput","Button","FormWrapper","ProfileDeleteLink","Message","MessageWrapper","SignUpFormWrapper","Wrapper","div","ProfileEdit","firebase","error","loading","cleanUp","editProfile","profile","isLoaded","displayError","display","firstName","lastName","username","email","auth","phone","passwordOne","passwordTwo","creditCard","expDate","secCode","creditCardType","apps","picture","values","resetForm","setSubmitting","console","log","userApps","errors","touched","isSubmitting","msg","mapStateToProps","profileEdit","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Formik, Field, ErrorMessage } from 'formik'\n\nimport { ProfileEditSchema } from './ProfileSchemas.js'\nimport * as actions from '../../../backend/store/actions'\n\n// App Logos\nimport postmates from '../../../images/postmates.jpg';\nimport doordash from '../../../images/doordash.jpg';\nimport grubhub from '../../../images/grubhub.png';\nimport ubereats from '../../../images/ubereats.jpeg';\n\n// Style\nimport styled from 'styled-components'\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js'\nimport { TextInput } from '../../../style/FormUI/Inputs.js'\nimport Button from '../../../style/FormUI/Buttons.js'\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js'\nimport { ProfileDeleteLink } from '../../../style/FormUI/Links.js'\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js'\n\nconst SignUpFormWrapper = styled(FormWrapper)`\n  max-width: 60rem;\n`\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`\n// import ImageUpload from './ImageUpload.js';\n\nconst ProfileEdit = ({ firebase, error, loading, cleanUp, editProfile }) => {\n    useEffect(() => {\n        return () => {\n            cleanUp()\n        }\n    }, [cleanUp])\n\n    if (!firebase.profile.isLoaded) return null\n\n    let displayError\n    if (error) {\n        displayError = { display: \"block\" }\n    } else {\n        displayError = { display: \"none\" }\n    }\n\n    return (\n        <SignUpFormWrapper>\n            <h1> Edit Your Profile </h1>\n            {/* <ImageUpload /> */}\n            <br />\n            <Formik\n                initialValues={{\n                    firstName: firebase.profile.firstName,\n                    lastName: firebase.profile.lastName,\n                    username: firebase.profile.username,\n                    email: firebase.auth.email,\n                    phone: firebase.profile.phone,\n                    passwordOne: \"\",\n                    passwordTwo: \"\",\n                    creditCard: firebase.profile.creditCard,\n                    expDate: firebase.profile.expDate,\n                    secCode: firebase.profile.secCode,\n                    creditCardType: firebase.profile.creditCardType,\n                    apps: firebase.profile.apps, // Postmates, GrubHub, DoorDash, UberEats\n                    picture: firebase.profile.picture, // initial picture, the default one given at signup\n                }}\n                validationSchema={ProfileEditSchema}\n                onSubmit={async (values, { resetForm, setSubmitting }) => {\n                    await editProfile(values)\n                    setSubmitting(false)\n                }}\n            >\n                {console.log(userApps)}\n                {({ values, errors, touched, isSubmitting }) => (\n                    <StyledForm>\n                        {/* <div className = \"compensate-input text-input\"> \n                            <label> Profile Picture </label> <br />\n                            <Field name = \"picture\" type = \"file\"/> <br/>\n                        </div> */}\n                        <Wrapper>\n                            <Field name=\"firstName\" type=\"text\" aligned=\"true\" component={TextInput} />\n                            <Field name=\"lastName\" type=\"text\" aligned=\"true\" component={TextInput} />\n                        </Wrapper>\n                        <Field name=\"username\" type=\"text\" component={TextInput} />\n                        <Field name=\"email\" type=\"email\" component={TextInput} />\n                        <Field name=\"phone\" type=\"text\" component={TextInput} />\n                        <Wrapper>\n                            <Field name=\"passwordOne\" type=\"password\" aligned=\"true\" component={TextInput} />\n                            <Field name=\"passwordTwo\" type=\"password\" aligned=\"true\" component={TextInput} />\n                        </Wrapper>\n                        <Field name=\"creditCard\" type=\"text\" component={TextInput} />\n                        <Wrapper>\n                            <Field name=\"expDate\" type=\"text\" aligned=\"true\" component={TextInput} />\n                            <Field name=\"secCode\" type=\"text\" aligned=\"true\" component={TextInput} />\n                        </Wrapper>\n                        <Wrapper>\n                            <ul className = \"checkbox-input\">\n                                <li>\n                                    <Field name = \"apps[0]\" type = \"checkbox\" id = \"Postmates\" checked = {values.apps.postmates}/>\n                                    <label for = \"Postmates\"> <img src = {postmates} /> </label>\n                                </li>\n\n                                <li>\n                                    <Field name = \"apps[1]\" type = \"checkbox\" id = \"GrubHub\" checked = {values.apps.grubhub}/>\n                                    <label for = \"GrubHub\"> <img src = {grubhub} /> </label>\n                                </li>\n\n                                <li>\n                                    <Field name = \"apps[2]\" type = \"checkbox\" id = \"DoorDash\" checked = {values.apps.doordash}/>\n                                    <label for = \"DoorDash\"> <img src = {doordash} /> </label>\n                                </li>\n\n                                <li>\n                                    <Field name = \"apps[3]\" type = \"checkbox\" id = \"UberEats\" checked = {values.apps.ubereats}/>\n                                    <label for = \"UberEats\"> <img src = {ubereats} /> </label>\n                                </li>\n                            </ul>\n                        </Wrapper>\n                        <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"apps\" />\n\n                        <Button disabled={isSubmitting} type=\"submit\">Edit</Button>\n                    \n                        <MessageWrapper>\n                            <Message error show = {error}>{ error }</Message>\n                        </MessageWrapper>\n                    \n                    </StyledForm>\n                )}\n            </Formik>\n            <ProfileDeleteLink />\n        </SignUpFormWrapper>\n    )\n}\n\nconst mapStateToProps = ({ firebase, auth }) => ({\n    firebase,\n    loading: auth.profileEdit.loading,\n    error: auth.profileEdit.error\n})\n\nconst mapDispatchToProps = {\n    editProfile: actions.editProfile,\n    cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEdit)"]},"metadata":{},"sourceType":"module"}