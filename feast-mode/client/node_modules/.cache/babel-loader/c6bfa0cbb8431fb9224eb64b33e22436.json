{"ast":null,"code":"import * as actions from './actionTypes.js';\nexport const sendInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data.uid;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.SEND_INVITE_START\n  });\n\n  try {\n    await firestore.collection(\"friends\").doc(inviteId).update({\n      requests: firestore.FieldValue.arrayUnion(userId)\n    });\n    dispatch({\n      type: actions.SEND_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.SEND_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const acceptInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data.uid;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.ACCEPT_INVITE_START\n  });\n\n  try {\n    await firestore.collection(\"friends\").doc(inviteId).update({\n      friends: firestore.FieldValue.arrayUnion(userId)\n    });\n    await firestore.collection(\"friends\").doc(userId).set({\n      friends: firestore.FieldValue.arrayUnion(inviteId)\n    });\n    dispatch({\n      type: actions.ACCEPT_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.ACCEPT_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const deleteInvite = data => async (dispatch, getState, {\n  getFirebase,\n  getFirestore\n}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const inviteId = data.uid;\n  const userId = getState().firebase.auth.uid;\n  dispatch({\n    type: actions.DELETE_INVITE_START\n  });\n\n  try {\n    await firestore.collection(\"friends\").doc(inviteId).update({\n      requests: firestore.FieldValue.arrayRemove(userId)\n    });\n    dispatch({\n      type: actions.DELETE_INVITE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.DELETE_INVITE_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/backend/store/actions/appActions.js"],"names":["actions","sendInvite","data","dispatch","getState","getFirebase","getFirestore","firebase","firestore","inviteId","uid","userId","auth","type","SEND_INVITE_START","collection","doc","update","requests","FieldValue","arrayUnion","SEND_INVITE_SUCCESS","err","SEND_INVITE_FAIL","payload","message","acceptInvite","ACCEPT_INVITE_START","friends","set","ACCEPT_INVITE_SUCCESS","ACCEPT_INVITE_FAIL","deleteInvite","DELETE_INVITE_START","arrayRemove","DELETE_INVITE_SUCCESS","DELETE_INVITE_FAIL"],"mappings":"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","sourcesContent":["import * as actions from './actionTypes.js'\n\n\nexport const sendInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data.uid;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.SEND_INVITE_START })\n    try {\n\n        await firestore.collection(\"friends\").doc(inviteId).update({\n            requests: firestore.FieldValue.arrayUnion(userId),\n        })\n\n        dispatch({ type: actions.SEND_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.SEND_INVITE_FAIL, payload: err.message })\n    }\n}\n\n\nexport const acceptInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data.uid;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.ACCEPT_INVITE_START })\n    try {\n\n        await firestore.collection(\"friends\").doc(inviteId).update({\n            friends: firestore.FieldValue.arrayUnion(userId),\n        })\n\n        await firestore.collection(\"friends\").doc(userId).set({\n            friends: firestore.FieldValue.arrayUnion(inviteId),\n        })\n\n        dispatch({ type: actions.ACCEPT_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.ACCEPT_INVITE_FAIL, payload: err.message })\n    }\n}\n\n\nexport const deleteInvite = data => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase()\n    const firestore = getFirestore()\n    const inviteId = data.uid;\n    const userId = getState().firebase.auth.uid;\n\n    dispatch({ type: actions.DELETE_INVITE_START })\n    try {\n\n        await firestore.collection(\"friends\").doc(inviteId).update({\n            requests: firestore.FieldValue.arrayRemove(userId),\n        })\n\n        dispatch({ type: actions.DELETE_INVITE_SUCCESS }) \n\n    } catch(err) {\n        dispatch({ type: actions.DELETE_INVITE_FAIL, payload: err.message })\n    }\n}"]},"metadata":{},"sourceType":"module"}