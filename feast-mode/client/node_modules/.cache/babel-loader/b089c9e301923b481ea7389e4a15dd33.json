{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nimport { Form, Field, ErrorMessage, withFormik } from 'formik';\nimport * as yup from 'yup';\nimport firebase from '../Firebase/firebase';\n\nconst SignUpFormBase2 = ({\n  errors,\n  touched,\n  isSubmitting\n}) => React.createElement(Form, {\n  className: \"classic-form\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"aligned-inputs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: touched.firstName && errors.firstName ? \"text-error\" : \"text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \" First Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"firstName\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"firstName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: touched.lastName && errors.lastName ? \"text-error\" : \"text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \" Last Name \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"lastName\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"lastName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: [\"compensate-input\", touched.username && errors.username ? \"error\" : \"text-input\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \" Username \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"username\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"username\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: [\"compensate-input\", touched.email && errors.email ? \"error\" : \"text-input\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \" Email \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"email\",\n  type: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: [\"compensate-input\", touched.phone && errors.phone ? \"error\" : \"text-input\"].join(' '),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \" Phone Number \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"phone\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"phone\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"aligned-inputs\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: touched.passwordOne && errors.passwordOne ? \"error\" : \"text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \" Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"passwordOne\",\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"passwordOne\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: touched.passwordTwo && errors.passwordTwo ? \"error\" : \"text-input\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(Field, {\n  name: \"passwordTwo\",\n  type: \"password\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), \" \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  render: msg => React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" \", msg, \" \"),\n  name: \"passwordTwo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}))), React.createElement(\"button\", {\n  disabled: isSubmitting,\n  className: \"classic-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \" Next \"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \" \"));\n\nconst FormikForm = withFormik({\n  mapPropsToValues() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: \"\"\n    };\n  },\n\n  validationSchema: yup.object().shape({\n    firstName: yup.string(\"Hello\").required(\"Please enter your name\"),\n    lastName: yup.string(),\n    username: yup.string().min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n    email: yup.string().email(\"Must be a valid email\").required(\"Please enter an email\"),\n    phone: yup.number().positive().integer().required(\"Please enter a phone number\"),\n    passwordOne: yup.string().min(6).required(\"Please enter a password\"),\n    passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setSubmitting\n  }) {\n    const username = values.username,\n          email = values.email,\n          phone = values.phone,\n          passwordOne = values.passwordOne; // props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne)\n    //     .then(authUser => {\n    //     // Create a user in your Firebase realtime database\n    //     return this.props.firebase\n    //         .user(authUser.user.uid)\n    //         .set({\n    //         username,\n    //         email,\n    //         phone,\n    //         })\n    //     })\n    //     .then(() => {\n    //     this.setState({ ...INITIAL_STATE })\n    //     this.props.history.push('/pay')\n    //     })\n    //     .catch(error => {\n    //     this.setState({ error })\n    // })\n\n    setTimeout(() => {\n      console.log(\"Submitted\");\n      resetForm();\n      setSubmitting(false);\n    }, 1000);\n  }\n\n})(SignUpFormBase2);\nconst INITIAL_STATE = {\n  firstName: '',\n  lastName: '',\n  username: '',\n  passwordOne: '',\n  passwordTwo: '',\n  email: '',\n  phone: '',\n  touched: {\n    firstName: false,\n    lastName: false,\n    username: false,\n    passwordOne: false,\n    passwordTwo: false,\n    email: false,\n    phone: false\n  }\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            phone = _this$state.phone,\n            passwordOne = _this$state.passwordOne,\n            passwordTwo = _this$state.passwordTwo;\n      event.preventDefault();\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          phone\n        });\n      }).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push('/pay');\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \" All gone \");\n  }\n\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(FormikForm);\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n}, \"New to FeastMode?   \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}, \"Sign Up\"));\n\nexport default SignUpForm;\nexport { SignUpLink, INITIAL_STATE };","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js"],"names":["React","Component","Link","withRouter","compose","ROUTES","withFirebase","Form","Field","ErrorMessage","withFormik","yup","firebase","SignUpFormBase2","errors","touched","isSubmitting","firstName","msg","lastName","username","join","email","phone","passwordOne","passwordTwo","FormikForm","mapPropsToValues","validationSchema","object","shape","string","required","min","number","positive","integer","oneOf","ref","handleSubmit","values","resetForm","setSubmitting","setTimeout","console","log","INITIAL_STATE","SignUpFormBase","constructor","props","event","state","preventDefault","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","setState","history","push","catch","error","render","SignUpForm","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nimport { Form, Field, ErrorMessage, withFormik } from 'formik'\nimport * as yup from 'yup'\nimport firebase from '../Firebase/firebase'\n\nconst SignUpFormBase2 = ({\n    errors,\n    touched,\n    isSubmitting\n}) => (\n    <Form className = \"classic-form\">\n        <div className = \"aligned-inputs\"> \n            <div className = {touched.firstName && errors.firstName ? \"text-error\" : \"text-input\"}>\n                <label> First Name </label> <br />\n                <Field name = \"firstName\" type = \"text\"/> <br />\n                <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"firstName\" />\n            </div>\n\n            <div className = {touched.lastName && errors.lastName ? \"text-error\" : \"text-input\"}>\n                <label> Last Name </label> <br />\n                <Field name = \"lastName\" type = \"text\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"lastName\" />\n            </div>\n        </div>\n\n        <div className = {[\"compensate-input\", touched.username && errors.username ? \"error\" : \"text-input\"].join(' ')}>\n            <label> Username </label> <br />\n            <Field name = \"username\" type = \"text\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"username\" />\n        </div>\n        \n        <div className = {[\"compensate-input\", touched.email && errors.email ? \"error\" : \"text-input\"].join(' ')}> \n            <label> Email </label> <br />\n            <Field name = \"email\" type = \"email\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"email\" />\n        </div>\n        \n        <div className = {[\"compensate-input\", touched.phone && errors.phone ? \"error\" : \"text-input\"].join(' ')}>\n            <label> Phone Number </label> <br />\n            <Field name = \"phone\" type = \"text\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"phone\" />\n        </div>\n        \n        <div className = \"aligned-inputs\"> \n            <div className = {touched.passwordOne && errors.passwordOne ? \"error\" : \"text-input\"}>\n                <label> Password </label> <br />\n                <Field name = \"passwordOne\" type = \"password\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"passwordOne\" />\n            </div>\n            \n            <div className = {touched.passwordTwo && errors.passwordTwo ? \"error\" : \"text-input\"}>\n                <label> Confirm Password </label> <br />\n                <Field name = \"passwordTwo\" type = \"password\"/> <br/>\n                <ErrorMessage render = {msg => <p className = \"error-text\"> {msg} </p>} name = \"passwordTwo\" />\n            </div>\n        </div>\n\n        <button disabled = {isSubmitting} className = \"classic-button\"> Next </button>\n        <p> </p>\n\n    </Form>\n)\n\nconst FormikForm = withFormik({\n    mapPropsToValues() {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            username: \"\",\n            email: \"\",\n            phone: \"\",\n            passwordOne: \"\",\n            passwordTwo: \"\"\n        }\n    },\n\n    validationSchema: yup.object().shape({\n        firstName: yup.string(\"Hello\").required(\"Please enter your name\"),\n        lastName: yup.string(),\n        username: yup.string().min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n        email: yup.string().email(\"Must be a valid email\").required(\"Please enter an email\"),\n        phone: yup.number().positive().integer().required(\"Please enter a phone number\"),\n        passwordOne: yup.string().min(6).required(\"Please enter a password\"),\n        passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n    }),\n\n    handleSubmit(values, { resetForm, setSubmitting }) {\n        const { username, email, phone, passwordOne} = values\n\n        // props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne)\n        //     .then(authUser => {\n        //     // Create a user in your Firebase realtime database\n        //     return this.props.firebase\n        //         .user(authUser.user.uid)\n        //         .set({\n        //         username,\n        //         email,\n        //         phone,\n        //         })\n        //     })\n        //     .then(() => {\n        //     this.setState({ ...INITIAL_STATE })\n        //     this.props.history.push('/pay')\n        //     })\n        //     .catch(error => {\n        //     this.setState({ error })\n        // })\n\n        setTimeout(() => {\n            console.log(\"Submitted\") \n            resetForm()\n            setSubmitting(false)\n        }, 1000)\n    }\n})(SignUpFormBase2)\n\nconst INITIAL_STATE = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    passwordOne: '',\n    passwordTwo: '',\n    email: '',\n    phone: '',\n    touched: {\n        firstName: false,\n        lastName: false,\n        username: false,\n        passwordOne: false,\n        passwordTwo: false,\n        email: false,\n        phone: false,\n    }\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...INITIAL_STATE };\n    }\n\n    handleSubmit = event => {\n        const { username, email, phone, passwordOne, passwordTwo } = this.state;\n        \n        event.preventDefault();\n\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n            // Create a user in your Firebase realtime database\n            return this.props.firebase\n                .user(authUser.user.uid)\n                .set({\n                username,\n                email,\n                phone,\n                })\n            })\n            .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push('/pay');\n            })\n            .catch(error => {\n            this.setState({ error });\n            });\n    }\n\n    render() {\n        return (\n            <div> All gone </div>\n        );\n    }\n}\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(FormikForm);\n\nconst SignUpLink = () => (\n    <pre className = \"link-text\">\n      New to FeastMode?   <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\n    </pre>\n);\n\nexport default SignUpForm\nexport { SignUpLink, INITIAL_STATE };\n"]},"metadata":{},"sourceType":"module"}