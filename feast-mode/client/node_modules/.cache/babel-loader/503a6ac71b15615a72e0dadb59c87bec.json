{"ast":null,"code":"var _jsxFileName = \"/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/index.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport Geocode from \"react-geocode\";\nimport './Map.css'; // import LocationSearchInput from './AutocompleteSearch'\n\nconst API_KEY = \"AIzaSyDygU61iYWBAL1-YltIBuKg4gi8c1G2tMQ\";\nGeocode.setApiKey();\nGeocode.enableDebug();\nconst markerStyle = {\n  height: '3rem',\n  width: '3rem',\n  marginTop: '-50px'\n};\nconst imgStyle = {\n  height: '100%'\n};\n\nconst Marker = ({\n  title\n}) => React.createElement(\"div\", {\n  style: markerStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  style: imgStyle,\n  src: \"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\",\n  alt: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, title));\n\nclass DisplayMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: {\n        lat: 5.6219868,\n        lng: -0.23223\n      },\n      loading: true,\n      placeSearch: null,\n      autocomplete: null,\n      componentForm: {\n        street_number: 'short_name',\n        route: 'long_name',\n        locality: 'long_name',\n        administrative_area_level_1: 'short_name',\n        country: 'long_name',\n        postal_code: 'short_name'\n      },\n      location: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  getLocation() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.watchPosition(position => {\n        this.setState({\n          center: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          loading: false\n        });\n      });\n    } else {\n      alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n    }\n  }\n\n  render() {\n    if (this.state.loading) return null;\n    return React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"locationField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"autocomplete\",\n      placeholder: \"Enter your address\" // onFocus={geolocate()}\n      ,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(GoogleMap, {\n      bootstrapURLKeys: {\n        key: ''\n      },\n      center: {\n        lat: this.state.center.lat,\n        lng: this.state.center.lng\n      },\n      zoom: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      title: 'Current Location',\n      lat: this.state.center.lat,\n      lng: this.state.center.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DisplayMap;","map":{"version":3,"sources":["/Users/summer19/Desktop/FeastMode/feast-mode/client/src/components/Location/index.js"],"names":["React","Component","GoogleMap","Geocode","API_KEY","setApiKey","enableDebug","markerStyle","height","width","marginTop","imgStyle","Marker","title","DisplayMap","constructor","props","state","center","lat","lng","loading","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","location","componentDidMount","getLocation","navigator","geolocation","watchPosition","position","setState","coords","latitude","longitude","alert","render","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport Geocode from \"react-geocode\";\n\nimport './Map.css'\n// import LocationSearchInput from './AutocompleteSearch'\n\nconst API_KEY = \"AIzaSyDygU61iYWBAL1-YltIBuKg4gi8c1G2tMQ\"\n\n\nGeocode.setApiKey();\nGeocode.enableDebug();\n\n\nconst markerStyle = {\n    height: '3rem',\n    width: '3rem',\n    marginTop: '-50px'\n}\n\nconst imgStyle = {\n    height: '100%'\n}\n\n\n  const Marker = ({ title }) => (\n    <div style={markerStyle}>\n      <img style={imgStyle} src=\"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\" alt={title} />\n      <h3>{title}</h3>\n    </div>\n  );\n\n  class DisplayMap extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            center: { \n                lat: 5.6219868, \n                lng: -0.23223 \n            },\n            loading: true,\n            placeSearch: null,\n            autocomplete: null,\n            componentForm: {\n                street_number: 'short_name',\n                route: 'long_name',\n                locality: 'long_name',\n                administrative_area_level_1: 'short_name',\n                country: 'long_name',\n                postal_code: 'short_name'\n            },\n            location: \"\",\n      }\n    }\n\n    componentDidMount() {\n        this.getLocation();\n    }\n\n    getLocation() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.watchPosition(position => {\n                this.setState({\n                    center: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    loading: false,\n                })\n            })\n            \n       } \n        else {\n            alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n        }\n    }\n\n\n    \n\n\n\n    render() {\n        if(this.state.loading)\n            return null\n\n      return (\n        <div className=\"map\">\n            <div id=\"locationField\">\n                <input \n                    id=\"autocomplete\"\n                    placeholder=\"Enter your address\"\n                    // onFocus={geolocate()}\n                    type=\"text\"\n                />\n            </div>\n            <GoogleMap\n                bootstrapURLKeys={{ key: '' }}\n                center={{ lat: this.state.center.lat, lng: this.state.center.lng }}\n                zoom={14}\n            >\n                <Marker\n                    title={'Current Location'}\n                    lat={this.state.center.lat}\n                    lng={this.state.center.lng}\n                />\n            </GoogleMap>\n        </div>\n      )\n    }\n  }\n\n  export default DisplayMap;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}