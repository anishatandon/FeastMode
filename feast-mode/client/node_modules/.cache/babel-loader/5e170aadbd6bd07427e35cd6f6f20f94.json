{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/LogIn/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { Field, Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../../../backend/store/actions';\nimport LogInSchema from './LogInSchemas.js';\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js';\nimport { TextInput } from '../../../style/FormUI/Inputs.js';\nimport Button from '../../../style/FormUI/Buttons.js';\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js';\nimport { ForgotPasswordLink } from '../../../style/FormUI/Links.js';\nconst Wrapper = styled.div(_templateObject());\n\nconst LogInForm = ({\n  login,\n  loading,\n  error,\n  cleanUp\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LogInSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await login(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    component: TextInput,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(ForgotPasswordLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Button, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Logging in...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Log In\"), React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, error))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  login: actions.logIn,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/LogIn/index.js"],"names":["React","useEffect","Field","Formik","connect","styled","actions","LogInSchema","StyledForm","TextInput","Button","Message","MessageWrapper","ForgotPasswordLink","Wrapper","div","LogInForm","login","loading","error","cleanUp","email","password","values","setSubmitting","isSubmitting","isValid","mapStateToProps","auth","mapDispatchToProps","logIn","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Field, Formik } from 'formik'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport * as actions from '../../../backend/store/actions'\nimport LogInSchema from './LogInSchemas.js'\n\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js'\nimport { TextInput } from '../../../style/FormUI/Inputs.js'\nimport Button from '../../../style/FormUI/Buttons.js'\nimport { Message, MessageWrapper } from '../../../style/FormUI/Message.js'\nimport { ForgotPasswordLink } from '../../../style/FormUI/Links.js'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst LogInForm = ({ login, loading, error, cleanUp }) => {\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema = {LogInSchema}\n      onSubmit = {async ( values, { setSubmitting }) => {\n        await login(values)\n        setSubmitting(false)\n      }}\n    >\n      {({ isSubmitting, isValid }) => (\n        <StyledForm>\n          \n          <Field name = \"email\" type = \"email\" required component = {TextInput} label = \"Email\"/>\n          <Wrapper>\n            <Field name = \"password\" type = \"password\" required component = {TextInput} label = \"Password\"/>\n            <ForgotPasswordLink />\n          </Wrapper>\n          \n          <Button\n            disabled = {!isValid || isSubmitting}\n            loading = {loading ? 'Logging in...' : null}\n            type = \"submit\"\n          > \n            Log In \n          </Button>\n\n          <MessageWrapper>\n            <Message error show = {error}>{ error }</Message>\n          </MessageWrapper>\n\n        </StyledForm>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  login: actions.logIn,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm)"]},"metadata":{},"sourceType":"module"}