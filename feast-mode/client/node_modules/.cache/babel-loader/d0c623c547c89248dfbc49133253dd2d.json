{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Profile/password_change.js\";\nimport React, { useEffect } from 'react';\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../backend/store/actions';\nconst PasswordChangeSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\")\n});\n\nconst PasswordChangeForm = ({\n  sendEmail,\n  loading,\n  error,\n  cleanUp\n}) => {\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: PasswordChangeSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      sendEmail(values);\n      console.log(\"send email to recover\");\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(\"div\", {\n    className: \"password-change-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Recover your password\"), React.createElement(Form, {\n    className: \"classic-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [\"text-input\", touched.email && errors.email && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" Email \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Your email...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    loading: loading ? 'Sending recovery email...' : null,\n    className: \"classic-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Send Recover Email\"))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.recoverPassword.loading,\n  error: auth.recoverPassword.error\n});\n\nconst mapDispatchToProps = {\n  sendEmail: actions.recoverPassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordChangeForm); // import React, { Component } from 'react';\n// import { withFirebase } from '../../backend/Firebase'\n// const INITIAL_STATE = {\n//   passwordOne: '',\n//   passwordTwo: '',\n//   error: null,\n// };\n// class PasswordChangeForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { ...INITIAL_STATE };\n//   }\n//   onSubmit = event => {\n//     const { passwordOne } = this.state;\n//     this.props.firebase\n//       .doPasswordUpdate(passwordOne)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n//     event.preventDefault();\n//   };\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n//   render() {\n//     const { passwordOne, passwordTwo, error } = this.state;\n//     const isInvalid =\n//       passwordOne !== passwordTwo || passwordOne === '';\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <input\n//           name=\"passwordOne\"\n//           value={passwordOne}\n//           onChange={this.onChange}\n//           type=\"password\"\n//           placeholder=\"New Password\"\n//         />\n//         <input\n//           name=\"passwordTwo\"\n//           value={passwordTwo}\n//           onChange={this.onChange}\n//           type=\"password\"\n//           placeholder=\"Confirm New Password\"\n//         />\n//         <button disabled={isInvalid} type=\"submit\">\n//           Reset My Password\n//         </button>\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n// export default withFirebase(PasswordChangeForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Profile/password_change.js"],"names":["React","useEffect","Form","Field","ErrorMessage","Formik","yup","connect","actions","PasswordChangeSchema","object","shape","email","string","required","PasswordChangeForm","sendEmail","loading","error","cleanUp","values","resetForm","setSubmitting","console","log","errors","touched","isSubmitting","join","msg","mapStateToProps","auth","recoverPassword","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\nimport * as yup from 'yup'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../backend/store/actions'\n\nconst PasswordChangeSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\"),\n})\n\nconst PasswordChangeForm = ({ sendEmail, loading, error, cleanUp }) => {\n\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n      }}\n      validationSchema = {PasswordChangeSchema}\n      onSubmit = {async ( values, { resetForm, setSubmitting }) => {\n        sendEmail(values)\n        console.log(\"send email to recover\");\n        setSubmitting(false);\n      }}\n    >\n        \n        {({ errors, touched, isSubmitting }) => (\n            <div className=\"password-change-form\">\n                <h2>Recover your password</h2>\n                <Form className = \"classic-form\">\n            \n                <div className = {[\"text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \n                    <label> Email </label> <br />\n                    <Field \n                        name = \"email\" \n                        type = \"email\"\n                        placeholder=\"Your email...\"\n                    /> \n                    <br/>\n                    \n                    <ErrorMessage \n                        render = {msg => <p className = \"error-msg\"> {msg} </p>} \n                        name = \"email\" \n                    />\n                </div>\n\n                <button \n                    type=\"submit\" \n                    disabled={isSubmitting} \n                    loading={loading ? 'Sending recovery email...' : null }\n                    className = \"classic-button\"> \n                        Send Recover Email \n                </button>\n            </Form>\n        </div>\n        )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.recoverPassword.loading,\n  error: auth.recoverPassword.error,\n})\n\nconst mapDispatchToProps = {\n  sendEmail: actions.recoverPassword,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordChangeForm)\n\n\n\n// import React, { Component } from 'react';\n\n// import { withFirebase } from '../../backend/Firebase'\n\n// const INITIAL_STATE = {\n//   passwordOne: '',\n//   passwordTwo: '',\n//   error: null,\n// };\n\n// class PasswordChangeForm extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = { ...INITIAL_STATE };\n//   }\n\n//   onSubmit = event => {\n//     const { passwordOne } = this.state;\n\n//     this.props.firebase\n//       .doPasswordUpdate(passwordOne)\n//       .then(() => {\n//         this.setState({ ...INITIAL_STATE });\n//       })\n//       .catch(error => {\n//         this.setState({ error });\n//       });\n\n//     event.preventDefault();\n//   };\n\n//   onChange = event => {\n//     this.setState({ [event.target.name]: event.target.value });\n//   };\n\n//   render() {\n//     const { passwordOne, passwordTwo, error } = this.state;\n\n//     const isInvalid =\n//       passwordOne !== passwordTwo || passwordOne === '';\n\n//     return (\n//       <form onSubmit={this.onSubmit}>\n//         <input\n//           name=\"passwordOne\"\n//           value={passwordOne}\n//           onChange={this.onChange}\n//           type=\"password\"\n//           placeholder=\"New Password\"\n//         />\n//         <input\n//           name=\"passwordTwo\"\n//           value={passwordTwo}\n//           onChange={this.onChange}\n//           type=\"password\"\n//           placeholder=\"Confirm New Password\"\n//         />\n//         <button disabled={isInvalid} type=\"submit\">\n//           Reset My Password\n//         </button>\n\n//         {error && <p>{error.message}</p>}\n//       </form>\n//     );\n//   }\n// }\n\n// export default withFirebase(PasswordChangeForm);\n"]},"metadata":{},"sourceType":"module"}