{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport \"./SignUp.css\";\n\nconst SignUpPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(SignUpForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  username: '',\n  passwordOne: '',\n  passwordTwo: '',\n  email: '',\n  phone: '',\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            email = _this$state.email,\n            phone = _this$state.phone,\n            passwordOne = _this$state.passwordOne,\n            passwordTwo = _this$state.passwordTwo;\n      const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || phone === '' || username === '';\n      event.preventDefault();\n\n      if (isInvalid === true) {\n        if (passwordOne === '' || email === '' || phone === '' || username === '') {\n          alert(\"Please fill out all fields\");\n        } else {\n          alert(\"Passwords must match\");\n        }\n      } else {\n        this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n          // Create a user in your Firebase realtime database\n          return this.props.firebase.user(authUser.user.uid).set({\n            username,\n            email,\n            phone\n          });\n        }).then(authUser => {\n          this.setState(_objectSpread({}, INITIAL_STATE));\n          this.props.history.push('/pay');\n        }).catch(error => {\n          this.setState({\n            error\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE); // this.handleChange=this.handleChange.bind(this)\n    // this.handleSubmit=this.handleSubmit.bind(this)\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          error = _this$state2.error; // When the form is invalid, the submit button is disabled. \n    // Here is when the button is disabled: \n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || phone === '' || username === '';\n    return React.createElement(\"div\", {\n      className: \"sign-up-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Sign Up!\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"username\",\n      value: username,\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"phone\",\n      value: phone,\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.handleChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.handleChange,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onMouseOver: this.handleClick,\n      type: \"submit\",\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Next\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, error.message)));\n  }\n\n}\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  id: \"sign-up-link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, \"New to FeastMode? \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}, \" Sign Up \"));\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink, INITIAL_STATE };","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","compose","withFirebase","ROUTES","SignUpPage","INITIAL_STATE","username","passwordOne","passwordTwo","email","phone","error","SignUpFormBase","constructor","props","handleSubmit","event","state","isInvalid","preventDefault","alert","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","setState","history","push","catch","handleChange","target","name","value","render","handleClick","message","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport \"./SignUp.css\";\n\nconst SignUpPage = () => (\n  <div>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  passwordOne: '',\n  passwordTwo: '',\n  email: '',\n  phone: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n    // this.handleChange=this.handleChange.bind(this)\n    // this.handleSubmit=this.handleSubmit.bind(this)\n  }\n\n\n  handleSubmit = event => {\n    const { username, email, phone, passwordOne, passwordTwo } = this.state;\n    \n    const isInvalid =\n    passwordOne !== passwordTwo ||\n    passwordOne === '' ||\n    email === '' ||\n    phone === '' ||\n    username === '';\n\n    event.preventDefault();\n\n    if (isInvalid===true) {\n      if (passwordOne === '' || email === '' || phone === '' || username === ''){\n        alert(\"Please fill out all fields\")\n      }else{\n        alert(\"Passwords must match\")\n      }\n    }\n    else {\n      this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(authUser => {\n          // Create a user in your Firebase realtime database\n          return this.props.firebase\n            .user(authUser.user.uid)\n            .set({\n              username,\n              email,\n              phone,\n            })\n        })\n        .then(authUser => {\n          this.setState({ ...INITIAL_STATE });\n          this.props.history.push('/pay');\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n\n    const {\n      username,\n      passwordOne,\n      passwordTwo,\n      email,\n      phone,\n      error,\n    } = this.state;\n\n    // When the form is invalid, the submit button is disabled. \n    // Here is when the button is disabled: \n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      phone === '' ||\n      username === '';\n\n\n    return (\n      <div className = \"sign-up-form\">\n        <h2>Sign Up!</h2>\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            name=\"username\"\n            value={username}\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Full Name\"\n          />\n          <br/>\n          <br/>\n          <input\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n          <br/>\n          <br/>\n          <input\n            name=\"phone\"\n            value={phone}\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Phone Number\"\n          />\n          <br/>\n          <br/>\n          <input\n            name=\"passwordOne\"\n            value={passwordOne}\n            onChange={this.handleChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <br/>\n          <br/>\n          <input\n            name=\"passwordTwo\"\n            value={passwordTwo}\n            onChange={this.handleChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n          <br/>\n          <br/>\n          <button onMouseOver={this.handleClick} type=\"submit\" className =\"button\">Next</button>\n          {/* disabled={isInvalid} */}\n          {error && <p>{error.message}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <pre id = \"sign-up-link\">\n    New to FeastMode? <Link to={ROUTES.SIGN_UP} > Sign Up </Link>\n  </pre>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink, INITIAL_STATE };\n"]},"metadata":{},"sourceType":"module"}