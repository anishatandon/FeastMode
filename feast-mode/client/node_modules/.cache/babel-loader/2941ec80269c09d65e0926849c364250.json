{"ast":null,"code":"(function () {\n  var CardReact, ClassNames, Payment, React, ccDots, createReactClass, cvcDots, dot, expiryDots;\n  React = require('react');\n  createReactClass = require('create-react-class');\n  Payment = require('payment');\n  ClassNames = require('classnames');\n  dot = String.fromCharCode('8226');\n  ccDots = dot + dot + dot + dot;\n  cvcDots = dot + dot + dot;\n  expiryDots = dot + dot + '/' + dot + dot;\n  CardReact = createReactClass({\n    displayName: \"CardReact\",\n    getDefaultProps: function () {\n      return {\n        messages: {\n          validDate: 'valid\\nthru',\n          monthYear: 'month/year'\n        },\n        baseWidth: 350,\n        defaultValues: {\n          number: ccDots + \" \" + ccDots + \" \" + ccDots + \" \" + ccDots,\n          cvc: cvcDots,\n          expiry: expiryDots,\n          name: 'Full Name'\n        }\n      };\n    },\n    componentWillMount: function () {\n      return this.cardBrowserClass = this._addBrowserClass();\n    },\n    _addBrowserClass: function () {\n      var ua;\n\n      if (typeof navigator !== \"undefined\" && navigator !== null ? navigator.userAgent : void 0) {\n        ua = navigator.userAgent.toLowerCase();\n\n        if (ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1) {\n          return 'jp-card-safari';\n        }\n      }\n\n      if (/MSIE 10\\./i.test(navigator.userAgent)) {\n        return 'jp-card-ie-10';\n      }\n\n      if (/rv:11.0/i.test(navigator.userAgent)) {\n        return 'jp-card-ie-11';\n      } else {\n        return '';\n      }\n    },\n    _getCardType: function (cardNumber) {\n      this.cardType = Payment.fns.cardType(cardNumber);\n\n      if (this.cardType && this.cardType !== 'unknown') {\n        return \"jp-card-\" + this.cardType + \" jp-card-identified\";\n      }\n    },\n    _isFocusedInput: function (inputName) {\n      var currentInputValue;\n      currentInputValue = this.props.formInputsNames[inputName];\n      return this.props.focusedInput === currentInputValue || this.props.inputsValues[currentInputValue];\n    },\n    _getInputValidationState: function (inputName) {\n      var validationState;\n      validationState = this.props.inputsValidationClass[this.props.formInputsNames[inputName]];\n\n      if (typeof validationState === 'undefined') {\n        return '';\n      } else {\n        return validationState;\n      }\n    },\n    render: function () {\n      var containerStyle, expiryValue, scaleWidth;\n      containerStyle = {};\n\n      if (this.props.width) {\n        scaleWidth = \"scale(\" + this.props.width / this.props.baseWidth + \")\";\n        containerStyle = {\n          WebkitTransform: scaleWidth,\n          MozTransform: scaleWidth,\n          msTransform: scaleWidth,\n          OTransform: scaleWidth,\n          transform: scaleWidth\n        };\n      }\n\n      expiryValue = this.props.inputsValues[this.props.formInputsNames[\"expiry\"]];\n\n      if (expiryValue) {\n        expiryValue = expiryValue.replace(/\\s+/g, '');\n      } else {\n        expiryValue = this.props.defaultValues.expiry;\n      }\n\n      return React.createElement(\"div\", {\n        \"className\": \"jp-card-container\",\n        \"style\": containerStyle\n      }, React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card\", this.cardBrowserClass, this._getCardType(this.props.inputsValues[this.props.formInputsNames[\"number\"]]), {\n          'jp-card-flipped': this.props.cardFlipped\n        })\n      }, React.createElement(\"div\", {\n        \"className\": \"jp-card-front\"\n      }, React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-visa\"\n      }, \"visa\"), React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-mastercard\"\n      }, \"MasterCard\"), React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-maestro\"\n      }, \"Maestro\"), React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-amex\"\n      }), React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-discover\"\n      }, \"discover\"), React.createElement(\"div\", {\n        \"className\": \"jp-card-logo jp-card-dankort\"\n      }, React.createElement(\"div\", {\n        \"className\": \"dk\"\n      }, React.createElement(\"div\", {\n        \"className\": \"d\"\n      }), React.createElement(\"div\", {\n        \"className\": \"k\"\n      }))), React.createElement(\"div\", {\n        \"className\": \"jp-card-lower\"\n      }, React.createElement(\"div\", {\n        \"className\": \"jp-card-shiny\"\n      }), React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card-cvc\", \"jp-card-display\", {\n          \"jp-card-focused\": this._isFocusedInput(\"cvc\")\n        }, this._getInputValidationState(\"cvc\"))\n      }, this.props.inputsValues[this.props.formInputsNames[\"cvc\"]] || this.props.defaultValues.cvc), React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card-number\", \"jp-card-display\", {\n          \"jp-card-focused\": this._isFocusedInput(\"number\")\n        }, this._getInputValidationState(\"number\"))\n      }, this.props.inputsValues[this.props.formInputsNames[\"number\"]] || this.props.defaultValues.number), React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card-name\", \"jp-card-display\", {\n          \"jp-card-focused\": this._isFocusedInput(\"name\")\n        }, this._getInputValidationState(\"name\"))\n      }, this.props.inputsValues[this.props.formInputsNames[\"name\"]] || this.props.defaultValues.name), React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card-expiry\", \"jp-card-display\", {\n          \"jp-card-focused\": this._isFocusedInput(\"expiry\")\n        }, this._getInputValidationState(\"expiry\")),\n        \"data-before\": this.props.messages.monthYear,\n        \"data-after\": this.props.messages.validDate\n      }, expiryValue))), React.createElement(\"div\", {\n        \"className\": \"jp-card-back\"\n      }, React.createElement(\"div\", {\n        \"className\": \"jp-card-bar\"\n      }), React.createElement(\"div\", {\n        \"className\": ClassNames(\"jp-card-cvc\", \"jp-card-display\", {\n          \"jp-card-focused\": this._isFocusedInput(\"cvc\")\n        }, this._getInputValidationState(\"cvc\"))\n      }, this.props.inputsValues[this.props.formInputsNames[\"cvc\"]] || this.props.defaultValues.cvc), React.createElement(\"div\", {\n        \"className\": \"jp-card-shiny\"\n      }))));\n    }\n  });\n  module.exports = CardReact;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}