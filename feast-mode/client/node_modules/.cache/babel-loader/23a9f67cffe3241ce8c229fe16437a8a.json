{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\nimport { SignUpSchemas } from './SignUpSchemas.js';\nimport Heading from '../../../style/UI/Heading.js';\nimport { StyledForm } from '../../../style/UI/FormWrappers.js';\nimport Button from '../../../style/UI/Buttons.js';\nconst Wrapper = styled.div(_templateObject());\n\nconst SignUpForm = ({\n  login,\n  loading,\n  error,\n  cleanUp\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: values,\n    enableReinitialize: false,\n    validationSchema: SignUpSchemas[page],\n    onSubmit: this.handleSubmit,\n    render: props => React.createElement(React.Fragment, null, React.createElement(Heading, {\n      size: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Welcome to FeastMode \"), React.createElement(StyledForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.cloneElement(activePage, {\n      parentState: _objectSpread({}, props)\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, page > 0 && React.createElement(Button, {\n      type: \"button\",\n      color: true,\n      onClick: this.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Previous \"), !isLastPage && React.createElement(Button, {\n      type: \"submit\",\n      disabled: !props.isValid || props.isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Next \"), isLastPage && React.createElement(Button, {\n      type: \"submit\",\n      color: props.isValid,\n      disabled: props.isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" Submit \")))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/SignUp/SignUpForm.js"],"names":["React","useEffect","Formik","ErrorMessage","styled","SignUpSchemas","Heading","StyledForm","Button","Wrapper","div","SignUpForm","login","loading","error","cleanUp","values","page","handleSubmit","props","cloneElement","activePage","parentState","previous","isLastPage","isValid","isSubmitting","mapStateToProps","auth","mapDispatchToProps","signUp","actions","clean","connect"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,QAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,mBAAb;;AAMA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AACzDd,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXc,MAAAA,OAAO;AACR,KAFD;AAGD,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMA,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAIC,MADnB;AAEE,IAAA,kBAAkB,EAAI,KAFxB;AAGE,IAAA,gBAAgB,EAAIX,aAAa,CAACY,IAAD,CAHnC;AAIE,IAAA,QAAQ,EAAI,KAAKC,YAJnB;AAKE,IAAA,MAAM,EAAIC,KAAK,IACb,0CACA,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGnB,KAAK,CAACoB,YAAN,CAAmBC,UAAnB,EAA+B;AAAEC,MAAAA,WAAW,oBAAMH,KAAN;AAAb,KAA/B,CAFH,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,GAAG,CAAP,IAAY,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,KAAK,EAAI,IAAjC;AAAuC,MAAA,OAAO,EAAE,KAAKM,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADf,EAEG,CAACC,UAAD,IAAe,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,QAAQ,EAAI,CAACL,KAAK,CAACM,OAAP,IAAkBN,KAAK,CAACO,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFlB,EAGGF,UAAU,IAAI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,KAAK,EAAIL,KAAK,CAACM,OAAvC;AAAgD,MAAA,QAAQ,EAAIN,KAAK,CAACO,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHjB,CAJF,CAFA,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAwBD,CA/BD;;AAiCA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACrCf,EAAAA,OAAO,EAAEe,IAAI,CAACf,OADuB;AAErCC,EAAAA,KAAK,EAAEc,IAAI,CAACd;AAFyB,CAAf,CAAxB;;AAKA,MAAMe,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAEC,OAAO,CAACD,MADS;AAEzBf,EAAAA,OAAO,EAAEgB,OAAO,CAACC;AAFQ,CAA3B;AAKA,eAAeC,OAAO,CAACN,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Formik, ErrorMessage } from 'formik'\nimport styled from 'styled-components'\n\nimport { SignUpSchemas } from './SignUpSchemas.js'\nimport Heading from '../../../style/UI/Heading.js'\nimport { StyledForm } from '../../../style/UI/FormWrappers.js'\nimport Button from '../../../style/UI/Buttons.js'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst SignUpForm = ({ login, loading, error, cleanUp }) => {\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return (\n    <Formik\n      initialValues = {values}\n      enableReinitialize = {false}\n      validationSchema = {SignUpSchemas[page]}\n      onSubmit = {this.handleSubmit}\n      render = {props => (\n        <>\n        <Heading size = \"h1\"> Welcome to FeastMode </Heading> \n        <StyledForm>\n\n          {React.cloneElement(activePage, { parentState: {...props} })}\n\n          <Wrapper>\n            {page > 0 && <Button type = \"button\" color = {true} onClick={this.previous}> Previous </Button>}\n            {!isLastPage && <Button type = \"submit\" disabled = {!props.isValid || props.isSubmitting}> Next </Button>}\n            {isLastPage && <Button type = \"submit\" color = {props.isValid} disabled = {props.isSubmitting}> Submit </Button>}\n          </Wrapper>\n\n        </StyledForm>\n        </>\n      )}\n    />\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm)"]},"metadata":{},"sourceType":"module"}