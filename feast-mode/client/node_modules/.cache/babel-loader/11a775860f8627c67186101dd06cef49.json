{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../backend/store/actions';\nconst SignUpSchema = yup.object().shape({\n  firstName: yup.string(\"Must be a valid name\").required(\"Please enter your name\"),\n  lastName: yup.string(\"Must be a valid name\"),\n  username: yup.string(\"Must be a valid username\").min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n  phone: yup.number(\"Must be a valid phone number\").positive(\"Must be a valid phone number\").integer(\"Must be a valid phone number\").required(\"Please enter a phone number\"),\n  passwordOne: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter a password\"),\n  passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n});\n\nconst SignUpForm = ({\n  signUp,\n  loading,\n  error\n}) => {\n  console.log(error); // remove this when you get error to show\n\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      passwordOne: \"\",\n      passwordTwo: ''\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await signUp(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(Form, {\n    className: \"classic-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"aligned-inputs text-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: touched.firstName && errors.firstName && \"text-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" First Name \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: touched.lastName && errors.lastName && \"text-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Last Name \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: [\"compensate-input text-input\", touched.username && errors.username && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" Username \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: [\"compensate-input text-input\", touched.email && errors.email && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" Email \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: [\"compensate-input text-input\", touched.phone && errors.phone && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Phone Number \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"phone\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"aligned-inputs text-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: touched.passwordOne && errors.passwordOne && \"text-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Password \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordOne\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"passwordOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: touched.passwordTwo && errors.passwordTwo && \"text-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \" Confirm Password \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"passwordTwo\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"passwordTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: \"classic-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" Next \")));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp\n};\n\nconst SignUpLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"New to FeastMode?   \", React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, \"Sign Up\"));\n\nexport { SignUpLink };\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/SignUpForm.js"],"names":["React","Link","ROUTES","Form","Field","ErrorMessage","Formik","yup","connect","actions","SignUpSchema","object","shape","firstName","string","required","lastName","username","min","email","phone","number","positive","integer","passwordOne","passwordTwo","oneOf","ref","SignUpForm","signUp","loading","error","console","log","values","resetForm","setSubmitting","errors","touched","isSubmitting","msg","join","mapStateToProps","auth","mapDispatchToProps","SignUpLink","SIGN_UP"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,YAAtB,EAAoCC,MAApC,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AAEA,MAAMC,YAAY,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACpCC,EAAAA,SAAS,EAAEN,GAAG,CAACO,MAAJ,CAAW,sBAAX,EAAmCC,QAAnC,CAA4C,wBAA5C,CADyB;AAEpCC,EAAAA,QAAQ,EAAET,GAAG,CAACO,MAAJ,CAAW,sBAAX,CAF0B;AAGpCG,EAAAA,QAAQ,EAAEV,GAAG,CAACO,MAAJ,CAAW,0BAAX,EAAuCI,GAAvC,CAA2C,CAA3C,EAA8C,wCAA9C,EAAwFH,QAAxF,CAAiG,yBAAjG,CAH0B;AAIpCI,EAAAA,KAAK,EAAEZ,GAAG,CAACO,MAAJ,CAAW,uBAAX,EAAoCK,KAApC,CAA0C,uBAA1C,EAAmEJ,QAAnE,CAA4E,uBAA5E,CAJ6B;AAKpCK,EAAAA,KAAK,EAAEb,GAAG,CAACc,MAAJ,CAAW,8BAAX,EAA2CC,QAA3C,CAAoD,8BAApD,EAAoFC,OAApF,CAA4F,8BAA5F,EAA4HR,QAA5H,CAAqI,6BAArI,CAL6B;AAMpCS,EAAAA,WAAW,EAAEjB,GAAG,CAACO,MAAJ,GAAaI,GAAb,CAAiB,CAAjB,EAAoB,wCAApB,EAA8DH,QAA9D,CAAuE,yBAAvE,CANuB;AAOpCU,EAAAA,WAAW,EAAElB,GAAG,CAACO,MAAJ,GAAaY,KAAb,CAAmB,CAACnB,GAAG,CAACoB,GAAJ,CAAQ,aAAR,CAAD,EAAyB,IAAzB,CAAnB,EAAmD,uBAAnD,EAA4EZ,QAA5E,CAAqF,2CAArF;AAPuB,CAAnB,CAArB;;AAUA,MAAMa,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD+C,CAC5B;;AACnB,SACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAI;AACblB,MAAAA,SAAS,EAAE,EADE;AAEbG,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbE,MAAAA,KAAK,EAAE,EAJM;AAKbC,MAAAA,KAAK,EAAE,EALM;AAMbI,MAAAA,WAAW,EAAE,EANA;AAObC,MAAAA,WAAW,EAAE;AAPA,KADrB;AAUI,IAAA,gBAAgB,EAAIf,YAVxB;AAWI,IAAA,QAAQ,EAAI,OAAQwB,MAAR,EAAgB;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAhB,KAAiD;AACzD,YAAMP,MAAM,CAACK,MAAD,CAAZ;AACAC,MAAAA,SAAS;AACTC,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,KAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBK,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAD,KACG,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAG,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAID,OAAO,CAACzB,SAAR,IAAqBwB,MAAM,CAACxB,SAA5B,IAAyC,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,OACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,WAAd;AAA0B,IAAA,IAAI,EAAG,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAE8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF9C,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAI2B,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAIF,OAAO,CAACtB,QAAR,IAAoBqB,MAAM,CAACrB,QAA3B,IAAuC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,OAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,UAAd;AAAyB,IAAA,IAAI,EAAG,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAE6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF7C,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAIwB,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CAFJ,EAgBI;AAAK,IAAA,SAAS,EAAI,CAAC,6BAAD,EAAgCF,OAAO,CAACrB,QAAR,IAAoBoB,MAAM,CAACpB,QAA3B,IAAuC,YAAvE,EAAqFwB,IAArF,CAA0F,GAA1F,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,UAAd;AAAyB,IAAA,IAAI,EAAG,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAE6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF7C,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAID,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAhBJ,EAsBI;AAAK,IAAA,SAAS,EAAI,CAAC,6BAAD,EAAgCF,OAAO,CAACnB,KAAR,IAAiBkB,MAAM,CAAClB,KAAxB,IAAiC,YAAjE,EAA+EsB,IAA/E,CAAoF,GAApF,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,OAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3B,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,OAAd;AAAsB,IAAA,IAAI,EAAG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAE2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF3C,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAID,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAtBJ,EA4BI;AAAK,IAAA,SAAS,EAAI,CAAC,6BAAD,EAAgCF,OAAO,CAAClB,KAAR,IAAiBiB,MAAM,CAACjB,KAAxB,IAAiC,YAAjE,EAA+EqB,IAA/E,CAAoF,GAApF,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,OACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,OAAd;AAAsB,IAAA,IAAI,EAAG,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAE0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF1C,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAID,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CA5BJ,EAkCI;AAAK,IAAA,SAAS,EAAG,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAIF,OAAO,CAACd,WAAR,IAAuBa,MAAM,CAACb,WAA9B,IAA6C,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,aAAd;AAA4B,IAAA,IAAI,EAAG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAEoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpD,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAIgB,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAIF,OAAO,CAACb,WAAR,IAAuBY,MAAM,CAACZ,WAA9B,IAA6C,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,OACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,aAAd;AAA4B,IAAA,IAAI,EAAG,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,OAEoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpD,EAGI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAIe,GAAG,IAAI;AAAG,MAAA,SAAS,EAAG,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,GAA7B,MAA/B;AAAuE,IAAA,IAAI,EAAG,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CAlCJ,EAiDI;AAAQ,IAAA,IAAI,EAAG,QAAf;AAAwB,IAAA,QAAQ,EAAID,YAApC;AAAkD,IAAA,SAAS,EAAG,gBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDJ,CAnBR,CADJ;AA2EH,CA7ED;;AA+EA,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACnCb,EAAAA,OAAO,EAAEa,IAAI,CAACb,OADqB;AAEnCC,EAAAA,KAAK,EAAEY,IAAI,CAACZ;AAFuB,CAAf,CAAxB;;AAKA,MAAMa,kBAAkB,GAAG;AACvBf,EAAAA,MAAM,EAAEpB,OAAO,CAACoB;AADO,CAA3B;;AAIA,MAAMgB,UAAU,GAAG,MACf;AAAK,EAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACsB,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAE3C,MAAM,CAAC4C,OAAjB;AAA0B,EAAA,SAAS,EAAG,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADtB,CADJ;;AAMA,SAASD,UAAT;AACA,eAAerC,OAAO,CAClBkC,eADkB,EAElBE,kBAFkB,CAAP,CAGbhB,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\nimport * as yup from 'yup'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../backend/store/actions'\n\nconst SignUpSchema = yup.object().shape({\n    firstName: yup.string(\"Must be a valid name\").required(\"Please enter your name\"),\n    lastName: yup.string(\"Must be a valid name\"),\n    username: yup.string(\"Must be a valid username\").min(4, \"Username must be at least 4 characters\").required(\"Please enter a username\"),\n    email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter an email\"),\n    phone: yup.number(\"Must be a valid phone number\").positive(\"Must be a valid phone number\").integer(\"Must be a valid phone number\").required(\"Please enter a phone number\"),\n    passwordOne: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter a password\"),\n    passwordTwo: yup.string().oneOf([yup.ref(\"passwordOne\"), null], \"Passwords don't match\").required(\"Make sure you can remember your password!\")\n})\n\nconst SignUpForm = ({ signUp, loading, error }) => {\n    console.log(error) // remove this when you get error to show\n    return(\n        <Formik\n            initialValues = {{\n                firstName: \"\",\n                lastName: \"\",\n                username: \"\",\n                email: \"\",\n                phone: \"\",\n                passwordOne: \"\",\n                passwordTwo: '',\n            }}\n            validationSchema = {SignUpSchema}\n            onSubmit = {async ( values, { resetForm, setSubmitting }) => {\n                await signUp(values)\n                resetForm()\n                setSubmitting(false)\n\n            }}\n        >\n            {({ errors, touched, isSubmitting}) => (\n                <Form className = \"classic-form\">\n                    \n                    <div className = \"aligned-inputs text-input\"> \n                        <div className = {touched.firstName && errors.firstName && \"text-error\"}>\n                            <label> First Name </label> <br />\n                            <Field name = \"firstName\" type = \"text\"/> <br />\n                            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"firstName\" />\n                        </div>\n\n                        <div className = {touched.lastName && errors.lastName && \"text-error\"}>\n                            <label> Last Name </label> <br />\n                            <Field name = \"lastName\" type = \"text\"/> <br/>\n                            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"lastName\" />\n                        </div>\n                    </div>\n\n                    <div className = {[\"compensate-input text-input\", touched.username && errors.username && \"text-error\"].join(' ')}>\n                        <label> Username </label> <br />\n                        <Field name = \"username\" type = \"text\"/> <br/>\n                        <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"username\" />\n                    </div>\n                    \n                    <div className = {[\"compensate-input text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \n                        <label> Email </label> <br />\n                        <Field name = \"email\" type = \"email\"/> <br/>\n                        <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\n                    </div>\n                    \n                    <div className = {[\"compensate-input text-input\", touched.phone && errors.phone && \"text-error\"].join(' ')}>\n                        <label> Phone Number </label> <br />\n                        <Field name = \"phone\" type = \"text\"/> <br/>\n                        <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"phone\" />\n                    </div>\n                    \n                    <div className = \"aligned-inputs text-input\"> \n                        <div className = {touched.passwordOne && errors.passwordOne && \"text-error\"}>\n                            <label> Password </label> <br />\n                            <Field name = \"passwordOne\" type = \"password\"/> <br/>\n                            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"passwordOne\" />\n                        </div>\n                        \n                        <div className = {touched.passwordTwo && errors.passwordTwo && \"text-error\"}>\n                            <label> Confirm Password </label> <br />\n                            <Field name = \"passwordTwo\" type = \"password\"/> <br/>\n                            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"passwordTwo\" />\n                        </div>\n                    </div>\n\n                    {/* <p>{error}</p> Conditional rendering */}\n                    <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Next </button>\n\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error,\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp,\n}\n\nconst SignUpLink = () => (\n    <pre className = \"link-text\">\n      New to FeastMode?   <Link to={ROUTES.SIGN_UP} className = \"link\">Sign Up</Link>\n    </pre>\n);\n\nexport { SignUpLink }\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignUpForm)"]},"metadata":{},"sourceType":"module"}