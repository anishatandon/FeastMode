{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/PasswordReset.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: -3.2rem;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { Field, Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../../../backend/store/actions';\nimport { PasswordResetSchema } from './ProfileSchemas.js';\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js';\nimport { TextInput } from '../../../style/FormUI/Inputs.js';\nimport { Message } from '../../../style/FormUI/Message.js';\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js';\nimport Heading from '../../../style/FormUI/Heading.js';\nimport Button from '../../../style/FormUI/Buttons.js';\nconst PasswordResetButton = styled(Button)(_templateObject());\nconst PasswordResetMessageWrapper = styled.div(_templateObject2());\n\nconst PasswordResetForm = ({\n  sendEmail,\n  loading,\n  error,\n  cleanUp\n}) => {\n  useEffect(() => {\n    return () => {\n      cleanUp();\n    };\n  }, [cleanUp]);\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: PasswordResetSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await sendEmail(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, ({\n    isValid,\n    isSubmitting\n  }) => React.createElement(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    noMargin: true,\n    bold: true,\n    size: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Reset Your Password \"), React.createElement(Heading, {\n    size: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Type in your email to receive a new password. You can change it later in your profile. \"), React.createElement(StyledForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    required: true,\n    component: TextInput,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(PasswordResetButton, {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? 'Sending recover email...' : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Send Email\"), React.createElement(PasswordResetMessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, error)), React.createElement(PasswordResetMessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Message, {\n    success: true,\n    show: error === false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Email sent successfully \")))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.recoverPassword.loading,\n  error: auth.recoverPassword.error\n});\n\nconst mapDispatchToProps = {\n  sendEmail: actions.recoverPassword,\n  cleanUp: actions.clean\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordResetForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Auth/Profile/PasswordReset.js"],"names":["React","useEffect","Field","Formik","connect","styled","actions","PasswordResetSchema","StyledForm","TextInput","Message","FormWrapper","Heading","Button","PasswordResetButton","PasswordResetMessageWrapper","div","PasswordResetForm","sendEmail","loading","error","cleanUp","email","values","setSubmitting","isValid","isSubmitting","mapStateToProps","auth","recoverPassword","mapDispatchToProps","clean"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Field, Formik } from 'formik'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport * as actions from '../../../backend/store/actions'\nimport { PasswordResetSchema } from './ProfileSchemas.js'\n\nimport { StyledForm } from '../../../style/FormUI/FormWrappers.js'\nimport { TextInput } from '../../../style/FormUI/Inputs.js'\nimport { Message } from '../../../style/FormUI/Message.js'\nimport { FormWrapper } from '../../../style/FormUI/FormWrappers.js'\nimport Heading from '../../../style/FormUI/Heading.js'\nimport Button from '../../../style/FormUI/Buttons.js'\n\nconst PasswordResetButton = styled(Button)`\n  margin-top: 1rem;\n`\nconst PasswordResetMessageWrapper = styled.div`\n  position: absolute;\n  bottom: -3.2rem;\n`\n\nconst PasswordResetForm = ({ sendEmail, loading, error, cleanUp }) => {\n  useEffect(() => {\n    return () => {\n      cleanUp()\n    }\n  }, [cleanUp])\n\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n      }}\n      validationSchema = {PasswordResetSchema}\n      onSubmit = {async ( values, { setSubmitting }) => {\n        await sendEmail(values)\n        setSubmitting(false);\n      }}\n    >\n      {({ isValid, isSubmitting }) => (\n        <FormWrapper>\n          <Heading noMargin bold size = \"h2\"> Reset Your Password </Heading>\n          <Heading size = \"h4\"> Type in your email to receive a new password. You can change it later in your profile. </Heading>\n          <StyledForm>\n\n            <Field name = \"email\" type = \"email\" required component = {TextInput} label = \"Email\"/>\n\n            <PasswordResetButton\n              disabled = {!isValid || isSubmitting}\n              loading = {loading ? 'Sending recover email...' : null}\n              type = \"submit\"\n            > \n             Send Email\n            </PasswordResetButton>\n\n            <PasswordResetMessageWrapper>\n              <Message error show = {error}>{ error }</Message>\n            </PasswordResetMessageWrapper>\n            <PasswordResetMessageWrapper>\n              <Message success show = {error === false}> Email sent successfully </Message>\n            </PasswordResetMessageWrapper>\n\n          </StyledForm>\n        </FormWrapper>\n      )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.recoverPassword.loading,\n  error: auth.recoverPassword.error,\n})\n\nconst mapDispatchToProps = {\n  sendEmail: actions.recoverPassword,\n  cleanUp: actions.clean,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordResetForm)"]},"metadata":{},"sourceType":"module"}