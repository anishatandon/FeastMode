{"ast":null,"code":"import _objectSpread from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/backend/server_twilio/src/SMSForm.js\";\nimport React, { Component } from 'react';\nimport './SMSForm.css';\n\nclass SMSForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBlur = field => evt => {\n      this.setState({\n        touched: _objectSpread({}, this.state.touched, {\n          [field]: true\n        })\n      });\n    };\n\n    this.greeting = \"Hey, there! \";\n    this.username = 'Alexandra'; // get username from firebase somehow\n\n    this.closing = \" has invited you to join their group order. \\n\\nClick here to open FeastMode and join the feast: \";\n    this.url = 'https://feast-mode/145fdj7&hfdk/alexandra'; // unique url that links back to FeastMode app (and the order specifically)\n\n    this.state = {\n      message: {\n        to: '',\n        body: this.greeting + this.username + this.closing + this.url\n      },\n      submitting: false,\n      error: false,\n      touched: {\n        to: false\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onHandleChange = this.onHandleChange.bind(this);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submitting: true\n    });\n    fetch('/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.message)\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          // reset what we have before\n          error: false,\n          submitting: false,\n          message: {\n            to: '',\n            body: ''\n          }\n        });\n      } else {\n        // can't submit\n        this.setState({\n          error: true,\n          submitting: false\n        });\n      }\n    });\n  }\n\n  onHandleChange(event) {\n    const name = event.target.getAttribute('name');\n    this.setState({\n      message: _objectSpread({}, this.state.message, {\n        [name]: event.target.value\n      })\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: this.state.error ? 'error sms-form' : 'sms-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"to\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"To:\"), React.createElement(\"input\", {\n      type: \"tel\",\n      name: \"to\",\n      id: \"to\",\n      value: this.state.message.to,\n      onChange: this.onHandleChange,\n      onBlur: this.handleBlur(\"firstName\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Invite to the Feast\")));\n  }\n\n}\n\nexport default SMSForm;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/backend/server_twilio/src/SMSForm.js"],"names":["React","Component","SMSForm","constructor","props","handleBlur","field","evt","setState","touched","state","greeting","username","closing","url","message","to","body","submitting","error","onSubmit","bind","onHandleChange","event","preventDefault","fetch","method","headers","JSON","stringify","then","res","json","data","success","name","target","getAttribute","value","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,UAvBmB,GAuBLC,KAAD,IAAYC,GAAD,IAAS;AAC/B,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,oBACA,KAAKC,KAAL,CAAWD,OADX;AACoB,WAACH,KAAD,GAAS;AAD7B;AADG,OAAd;AAKD,KA7BkB;;AAGjB,SAAKK,QAAL,GAAgB,cAAhB;AACA,SAAKC,QAAL,GAAgB,WAAhB,CAJiB,CAIW;;AAC5B,SAAKC,OAAL,GAAe,mGAAf;AACA,SAAKC,GAAL,GAAW,2CAAX,CANiB,CAMsC;;AAEvD,SAAKJ,KAAL,GAAa;AACXK,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAE,EADG;AAEPC,QAAAA,IAAI,EAAE,KAAKN,QAAL,GAAgB,KAAKC,QAArB,GAAgC,KAAKC,OAArC,GAA+C,KAAKC;AAFnD,OADE;AAKXI,MAAAA,UAAU,EAAE,KALD;AAMXC,MAAAA,KAAK,EAAE,KANI;AAOXV,MAAAA,OAAO,EAAE;AACPO,QAAAA,EAAE,EAAE;AADG;AAPE,KAAb;AAWA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAUDD,EAAAA,QAAQ,CAACG,KAAD,EAAQ;AACdA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKhB,QAAL,CAAc;AAAEU,MAAAA,UAAU,EAAE;AAAd,KAAd;AACAO,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFY;AAKrBV,MAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWK,OAA1B;AALe,KAAlB,CAAL,CAOGe,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,aAAK1B,QAAL,CAAc;AAAE;AACdW,UAAAA,KAAK,EAAE,KADK;AAEZD,UAAAA,UAAU,EAAE,KAFA;AAGZH,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAE,EADG;AAEPC,YAAAA,IAAI,EAAE;AAFC;AAHG,SAAd;AAQD,OATD,MASO;AAAE;AACP,aAAKT,QAAL,CAAc;AACZW,UAAAA,KAAK,EAAE,IADK;AAEZD,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID;AACF,KAxBH;AAyBD;;AAEDI,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,UAAMY,IAAI,GAAGZ,KAAK,CAACa,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAb;AACA,SAAK7B,QAAL,CAAc;AACZO,MAAAA,OAAO,oBAAO,KAAKL,KAAL,CAAWK,OAAlB;AAA2B,SAACoB,IAAD,GAAQZ,KAAK,CAACa,MAAN,CAAaE;AAAhD;AADK,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAE,KAAKnB,QADjB;AAEE,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWS,KAAX,GAAmB,gBAAnB,GAAsC,UAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,EAAE,EAAC,IAHL;AAIE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWK,OAAX,CAAmBC,EAJ5B;AAKE,MAAA,QAAQ,EAAE,KAAKM,cALjB;AAME,MAAA,MAAM,EAAI,KAAKjB,UAAL,CAAgB,WAAhB,CANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,EAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWQ,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAxBF,CADF,CADF;AAgCD;;AAtG6B;;AAyGhC,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './SMSForm.css';\n\nclass SMSForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.greeting = \"Hey, there! \"\n    this.username = 'Alexandra' // get username from firebase somehow\n    this.closing = \" has invited you to join their group order. \\n\\nClick here to open FeastMode and join the feast: \"\n    this.url = 'https://feast-mode/145fdj7&hfdk/alexandra' // unique url that links back to FeastMode app (and the order specifically)\n\n    this.state = {\n      message: {\n        to: '',\n        body: this.greeting + this.username + this.closing + this.url\n      },\n      submitting: false,\n      error: false,\n      touched: {\n        to: false\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onHandleChange = this.onHandleChange.bind(this);\n  }\n\n  handleBlur = (field) => (evt) => {\n    this.setState({\n        touched: {\n            ...this.state.touched, [field]: true\n        }\n    })\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    fetch('/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.message)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ // reset what we have before\n            error: false,\n            submitting: false,\n            message: {\n              to: '',\n              body: ''\n            }\n          });\n        } else { // can't submit\n          this.setState({\n            error: true,\n            submitting: false\n          });\n        }\n      });\n  }\n\n  onHandleChange(event) {\n    const name = event.target.getAttribute('name');\n    this.setState({\n      message: { ...this.state.message, [name]: event.target.value }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={this.onSubmit}\n          className={this.state.error ? 'error sms-form' : 'sms-form'}\n        >\n          <div>\n            <label htmlFor=\"to\">To:</label>\n            <input\n              type=\"tel\"\n              name=\"to\"\n              id=\"to\"\n              value={this.state.message.to}\n              onChange={this.onHandleChange}\n              onBlur = {this.handleBlur(\"firstName\")}\n            />\n          </div>\n          {/* <div>\n            <label htmlFor=\"body\">Body:</label>\n            <textarea\n              name=\"body\"\n              id=\"body\"\n              value={this.state.message.body}\n              onChange={this.onHandleChange}\n            />\n          </div> */}\n          <button type=\"submit\" disabled={this.state.submitting}>\n            Invite to the Feast\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SMSForm;"]},"metadata":{},"sourceType":"module"}