{"ast":null,"code":"'use strict';\n\nvar urls = require('./urls.json');\n\nvar httpJson = require('./http-json');\n\nvar Order = function (parameters) {\n  if (!parameters) {\n    parameters = {};\n  }\n\n  this.Address = '';\n  this.Coupons = [];\n  this.CustomerID = '';\n  this.Email = '';\n  this.Extension = '';\n  this.FirstName = '';\n  this.LastName = '';\n  this.LanguageCode = 'en';\n  this.OrderChannel = 'OLO';\n  this.OrderID = '';\n  this.OrderMethod = 'Web';\n  this.OrderTaker = null;\n  this.Payments = [];\n  this.Phone = '';\n  this.Products = [];\n  this.Market = '';\n  this.Currency = '';\n  this.ServiceMethod = parameters.deliveryMethod ? parameters.deliveryMethod : 'Delivery';\n  this.SourceOrganizationURI = 'order.dominos.com';\n  this.StoreID = parameters.storeID;\n  this.Tags = {};\n  this.Version = '1.0';\n  this.NoCombine = true;\n  this.Partners = {};\n  this.NewUser = true;\n  this.metaData = {};\n  this.Amounts = {};\n  this.BusinessDate = '';\n  this.EstimatedWaitMinutes = '';\n  this.PriceOrderTime = '';\n  this.AmountsBreakdown;\n\n  if (parameters['customer']) {\n    var Customer = parameters.customer;\n    this.Address = Customer.address;\n    this.CustomerID = Customer.ID;\n    this.Email = Customer.email;\n    this.FirstName = Customer.firstName;\n    this.LastName = Customer.lastName;\n  }\n\n  if (parameters['Order']) {\n    //Used to initialize order object from Dominos results (Also handy for initializing from DB)\n    var prevOrder = parameters.Order;\n    this.Address = prevOrder.Address;\n    this.CustomerID = prevOrder.CustomerID;\n    this.Email = prevOrder.Email;\n    this.FirstName = prevOrder.FirstName;\n    this.LastName = prevOrder.LastName;\n    this.OrderID = prevOrder.OrderID;\n    this.Products = prevOrder.Products;\n    this.Market = prevOrder.Market;\n    this.Currency = prevOrder.Currency;\n    this.StoreID = prevOrder.StoreID;\n    this.Amounts = prevOrder.Amounts ? prevOrder.Amounts : {};\n    this.BusinessDate = prevOrder.BusinessDate ? prevOrder.BusinessDate : '';\n    this.EstimatedWaitMinutes = prevOrder.EstimatedWaitMinutes ? prevOrder.EstimatedWaitMinutes : '';\n    this.PriceOrderTime = prevOrder.PriceOrderTime ? prevOrder.PriceOrderTime : '';\n    this.AmountsBreakdown = prevOrder.AmountsBreakdown ? prevOrder.AmountsBreakdown : {};\n  }\n\n  return this;\n};\n\nOrder.prototype.addItem = function (Item) {\n  //Add product to Order\n  this.Products.push(Item);\n};\n\nOrder.prototype.removeItem = function (Item) {\n  //Remove product from Order\n  var index = this.Products.indexOf(Item);\n\n  if (index != -1) {\n    this.Products.splice(index, 1);\n  }\n};\n\nOrder.prototype.validate = function (callback) {\n  //Validate Order\n  if (!this.Products || !callback) {\n    if (callback) {\n      callback({\n        success: false,\n        message: 'At least one product must be added!'\n      });\n    }\n\n    return;\n  } //Blame Dominos, this isn't my doing.\n\n\n  var stringified = JSON.stringify({\n    'Order': this\n  });\n  httpJson.post(urls.order.validate, stringified, callback);\n};\n\nOrder.prototype.price = function (callback) {\n  if (!this.Products || !callback) {\n    if (callback) {\n      callback({\n        success: false,\n        message: 'At least one product must be added!'\n      });\n    }\n\n    return;\n  }\n\n  var stringified = JSON.stringify({\n    'Order': this\n  });\n  httpJson.post(urls.order.price, stringified, callback);\n};\n\nOrder.prototype.place = function (stripeToken, callback) {\n  if (!this.Products || !callback) {\n    if (callback) {\n      callback({\n        success: false,\n        message: 'At least one product must be added!'\n      });\n    }\n  }\n\n  httpJson.post(urls.order.place, JSON.stringify(this), callback);\n};\n\nmodule.exports = Order;","map":null,"metadata":{},"sourceType":"script"}