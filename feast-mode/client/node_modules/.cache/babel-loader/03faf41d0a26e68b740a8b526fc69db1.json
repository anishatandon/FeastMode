{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Navigation/SideDrawer.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 2;\\n  width: 100%;\\n  left: 0;\\n  top: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-top: 8rem;\\n  height: 100vh;\\n  background-color: var(--color-main);\\n  visibility: \", \";\\n  transform: translateY(\", \");\\n  transition: all 0.1s cubic-bezier(0.445, 0.05, 0.55, 0.95);\\n  display: none;\\n\\n  @media \", \" {\\n    display: flex;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 100%;\\n  width: 100%;\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  background-color: var(--color-white);\\n  padding: 0rem 2rem;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 8rem;\\n  display: none;\\n\\n  @media \", \" {\\n    display: flex;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SideDrawerToggleButton from './SideDrawerToggleButton.js';\nimport NavItems from './NavItems.js';\nconst FixedWrapper = styled.header(_templateObject(), props => props.theme.mediaQueries.small);\nconst Wrapper = styled.div(_templateObject2());\nconst Menu = styled.div(_templateObject3(), props => props.opened ? 'visibile' : 'hidden', props => props.opened ? '0%' : '-100%', props => props.theme.mediaQueries.small);\n\nconst SideDrawer = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpened = _useState2[0],\n        setIsOpened = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(FixedWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(SideDrawerToggleButton, {\n    opened: isOpened,\n    clicked: () => setIsOpened(!isOpened),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(Menu, {\n    opened: isOpened,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(NavItems, {\n    mobile: true,\n    clicked: () => setIsOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nexport default SideDrawer;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Navigation/SideDrawer.js"],"names":["React","useState","styled","SideDrawerToggleButton","NavItems","FixedWrapper","header","props","theme","mediaQueries","small","Wrapper","div","Menu","opened","SideDrawer","isOpened","setIsOpened"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,sBAAP,MAAmC,6BAAnC;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAV,oBAUPC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,YAAZ,CAAyBC,KAV3B,CAAlB;AAcA,MAAMC,OAAO,GAAGT,MAAM,CAACU,GAAV,oBAAb;AAOA,MAAMC,IAAI,GAAGX,MAAM,CAACU,GAAV,qBAYML,KAAK,IAAKA,KAAK,CAACO,MAAN,GAAe,UAAf,GAA4B,QAZ5C,EAagBP,KAAK,IAAKA,KAAK,CAACO,MAAN,GAAe,IAAf,GAAsB,OAbhD,EAiBCP,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,YAAZ,CAAyBC,KAjBnC,CAAV;;AAsBA,MAAMK,UAAU,GAAG,MAAM;AAAA,oBACSd,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,QAChBe,QADgB;AAAA,QACNC,WADM;;AAEvB,SACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,MAAM,EAAID,QAAlC;AAA4C,IAAA,OAAO,EAAI,MAAMC,WAAW,CAAC,CAACD,QAAF,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAOE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAIA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,EAAI,MAAMC,WAAW,CAAC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD,CAfD;;AAiBA,eAAeF,UAAf","sourcesContent":["import React, { useState }  from 'react'\nimport styled from 'styled-components'\n\nimport SideDrawerToggleButton from './SideDrawerToggleButton.js'\nimport NavItems from './NavItems.js'\n\nconst FixedWrapper = styled.header`\n  position: fixed;\n  background-color: var(--color-white);\n  padding: 0rem 2rem;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 8rem;\n  display: none;\n\n  @media ${props => props.theme.mediaQueries.small} {\n    display: flex;\n  }\n`\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`\nconst Menu = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  left: 0;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 8rem;\n  height: 100vh;\n  background-color: var(--color-main);\n  visibility: ${props => (props.opened ? 'visibile' : 'hidden')};\n  transform: translateY(${props => (props.opened ? '0%' : '-100%')});\n  transition: all 0.1s cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  display: none;\n\n  @media ${props => props.theme.mediaQueries.small} {\n    display: flex;\n  }\n`\n\nconst SideDrawer = () => {\n  const [isOpened, setIsOpened] = useState(false)\n  return (\n    <>\n      <FixedWrapper>\n        <Wrapper>\n          <SideDrawerToggleButton opened = {isOpened} clicked = {() => setIsOpened(!isOpened)} />\n        </Wrapper>\n      </FixedWrapper>\n\n      <Menu opened = {isOpened}>\n        <NavItems mobile clicked = {() => setIsOpened(false)}/>\n      </Menu>\n    </>\n  )\n}\n\nexport default SideDrawer;\n"]},"metadata":{},"sourceType":"module"}