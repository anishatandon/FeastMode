{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js\";\nimport React, { useEffect } from 'react';\n\nconst Friend = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    className: \"friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Image: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Image: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" E-mail: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Phone number: \"));\n};\n\nexport default Friend; // import { connect } from 'react-redux';\n// import {firestoreConnect} from 'react-redux-firebase';\n// import { compose } from 'redux';\n// import * as actions from '../../backend/store/actions'\n// const Friend = (props) => {\n//   const { friend } = props;\n//   if( friend ){\n//     <div>\n//       <div>\n//         Friend\n//       </div>\n//     </div>\n//   }\n//   else{\n//     <div className=\"\">\n//       <p>Loading friends...</p>\n//     </div>\n//   }\n// }\n// const mapStateToProps = (state, ownProps) => {\n//   const id = ownProps.match.paarams.id;\n//   const friends = state.firestore.data.friends\n//   const friend = projects ? projects[id] : null\n//   return {\n//     project: project\n//   }\n// }\n// export default compose(\n//   connect( mapStateToProps ),\n//   firestoreConnect( [\n//     {collection: 'friends' }\n//   ])\n// )(Friend);\n//   useEffect(() => {\n//     return () => {\n//     cleanUp()\n//     }\n//   }, [cleanUp])\n//   if (!firebase.profile.isLoaded) return null\n//   let displayError\n//   if (error) {\n//     displayError = {display: \"block\"}\n//   } else {\n//     displayError = {display: \"none\"}\n//   }\n//   const initialValues = {\n//     friends: firebase.profile.friends,\n//     friend_requests: firebase.profile.requests,\n//     };\n//   const friend = this.props.friend;\n//   return (\n//     <div className = \"friends-change\">\n//       <h1> Friends </h1>\n//       <button\n//         onClick={async ( initialValues ) => {\n//           await acceptInvite(initialValues)\n//         }}\n//       >\n//         &#10003;\n//       </button>\n//       {/* Get friend ID */}\n//       Image: \n//       {/* {friend.friends} */}\n//       Name: \n//       {/* {user.first_name + \" \" + user.last_name} */}\n//       E-mail: \n//       {/* {user.email} */}\n//       Phone number: \n//       {/* {user.phone} */}\n//       <button>x</button>\n//     </div>\n//   )\n// }\n// const mapStateToProps = ({ firebase, app }) => ({\n//   firebase,\n//   loading: app.acceptInvite.loading,\n//   error: app.acceptInvite.error\n// })\n// const mapDispatchToProps = {\n//   acceptInvite: actions.acceptInvite,\n//   cleanUp: actions.clean,\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Friend)","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js"],"names":["React","useEffect","Friend","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAWD,CAbD;;AAeA,eAAeD,MAAf,C,CAcA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA","sourcesContent":["import React, { useEffect } from 'react';\n\nconst Friend = (props) => {\n  console.log(props);\n  return(\n    <div className=\"friends\">\n      <p>Image: </p>\n\n      <p>Image: </p>\n      <p>Name: </p>\n      <p> E-mail: </p>\n      <p>Phone number: </p>\n\n    </div>\n  )\n}\n\nexport default Friend\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { connect } from 'react-redux';\n// import {firestoreConnect} from 'react-redux-firebase';\n// import { compose } from 'redux';\n\n// import * as actions from '../../backend/store/actions'\n\n// const Friend = (props) => {\n//   const { friend } = props;\n//   if( friend ){\n//     <div>\n//       <div>\n//         Friend\n//       </div>\n//     </div>\n//   }\n\n//   else{\n//     <div className=\"\">\n//       <p>Loading friends...</p>\n//     </div>\n//   }\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n//   const id = ownProps.match.paarams.id;\n//   const friends = state.firestore.data.friends\n//   const friend = projects ? projects[id] : null\n//   return {\n//     project: project\n//   }\n// }\n\n// export default compose(\n//   connect( mapStateToProps ),\n//   firestoreConnect( [\n//     {collection: 'friends' }\n//   ])\n// )(Friend);\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//   useEffect(() => {\n//     return () => {\n//     cleanUp()\n//     }\n//   }, [cleanUp])\n\n\n//   if (!firebase.profile.isLoaded) return null\n\n//   let displayError\n//   if (error) {\n//     displayError = {display: \"block\"}\n//   } else {\n//     displayError = {display: \"none\"}\n//   }\n\n//   const initialValues = {\n//     friends: firebase.profile.friends,\n//     friend_requests: firebase.profile.requests,\n//     };\n\n//   const friend = this.props.friend;\n\n//   return (\n//     <div className = \"friends-change\">\n//       <h1> Friends </h1>\n\n\n//       <button\n//         onClick={async ( initialValues ) => {\n//           await acceptInvite(initialValues)\n//         }}\n//       >\n        \n//         &#10003;\n//       </button>\n\n//       {/* Get friend ID */}\n//       Image: \n//       {/* {friend.friends} */}\n//       Name: \n//       {/* {user.first_name + \" \" + user.last_name} */}\n//       E-mail: \n//       {/* {user.email} */}\n//       Phone number: \n//       {/* {user.phone} */}\n//       <button>x</button>\n\n//     </div>\n//   )\n// }\n\n// const mapStateToProps = ({ firebase, app }) => ({\n//   firebase,\n//   loading: app.acceptInvite.loading,\n//   error: app.acceptInvite.error\n// })\n\n// const mapDispatchToProps = {\n//   acceptInvite: actions.acceptInvite,\n//   cleanUp: actions.clean,\n// }\n\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Friend)"]},"metadata":{},"sourceType":"module"}