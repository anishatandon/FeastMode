{"ast":null,"code":"import _slicedToArray from \"/Users/cssummer19/Documents/FeastMode/feast-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriends.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Friend from './Friend';\nimport AddFriendButton from './Buttons/AddFriendButton';\nimport Loader from '../Loader/index.js';\nimport Modal from '../Modal/Modal';\nimport Button from '../../style/FormUI/Buttons';\nimport './AddFriends.css';\nimport * as actions from '../../backend/store/actions/';\n\nconst AddFriends = ({\n  addFriend,\n  users,\n  userId,\n  allFriends,\n  close,\n  opened,\n  hasRequested\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpened = _useState2[0],\n        setisOpened = _useState2[1]; // console.log(\"wh\")\n\n\n  let content;\n\n  if (!users) {\n    console.log(\"if\");\n    content = React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else if (users.length === 0) {\n    // console.log(\"elif\")\n    content = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"There are no users!\");\n  } else {\n    // console.log(\"else\")\n    users = Object.keys(users).filter(user => user !== userId); // let friends = [];\n    // console.log(friends)\n    // if(allFriends.friends)\n    // {\n    //   friends += allFriends.friends\n    // }\n    // if(allFriends.requests) \n    // {\n    //   friends += allFriends.requests\n    // }\n    // console.log(!friends.includes(userId))\n    // users = users.filter(user => !friends.includes(user) && user !== userId )\n\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, users.map(user => React.createElement(\"div\", {\n      className: \"friend\",\n      key: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Friend, {\n      display: true,\n      friend: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(AddFriendButton, {\n      friend: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))); // console.log(\"over here\")\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    color: \"main\",\n    contain: true,\n    onClick: () => setisOpened(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Add Friends\"), React.createElement(Modal, {\n    opened: isOpened,\n    close: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"main\",\n    contain: true,\n    onClick: () => setisOpened(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Done\"), React.createElement(\"div\", {\n    className: \"friends-change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" All Users \"), content)));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  users: firestore.data.users,\n  allFriends: firestore.data.users,\n  hasRequested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"users/\"]), firestoreConnect(props => [\"friends/\"]))(AddFriends);\n/*\n \n\n  */","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/AddFriends.js"],"names":["React","useEffect","useState","connect","firestoreConnect","compose","Friend","AddFriendButton","Loader","Modal","Button","actions","AddFriends","addFriend","users","userId","allFriends","close","opened","hasRequested","isOpened","setisOpened","content","console","log","length","Object","keys","filter","user","map","mapStateToProps","firebase","firestore","app","auth","uid","data","status","requested","mapDispatchToProps","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAIA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,kBAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,UAA3B;AAAuCC,EAAAA,KAAvC;AAA8CC,EAAAA,MAA9C;AAAsDC,EAAAA;AAAtD,CAAD,KAA0E;AAAA,oBAE3DjB,QAAQ,CAAC,KAAD,CAFmD;AAAA;AAAA,QAEpFkB,QAFoF;AAAA,QAE1EC,WAF0E,kBAI3F;;;AACA,MAAIC,OAAJ;;AAEA,MAAG,CAACR,KAAJ,EACA;AACES,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,IAAAA,OAAO,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAND,MASK,IAAIR,KAAK,CAACW,MAAN,KAAiB,CAArB,EACL;AACE;AACAH,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAGD,GANI,MAQL;AACE;AAEAR,IAAAA,KAAK,GAAGY,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,MAAnB,CAA0BC,IAAI,IAAIA,IAAI,KAAKd,MAA3C,CAAR,CAHF,CAKE;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;;AACAO,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIR,KAAK,CAACgB,GAAN,CAAUD,IAAI,IACd;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEA,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,IAAjB;AAAuB,MAAA,MAAM,EAAEA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAEA,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,CAFJ,CADF,CAtBF,CAkCE;AACD;;AAGD,SACE,0CACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,MAA5B;AAA6B,IAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,QAAf;AAAyB,IAAA,KAAK,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,MAA5B;AAA6B,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAECC,OAFD,CAJF,CAJA,CADF;AAmBD,CAjFD;;AAmFA,MAAMS,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,MAAmC;AACzDF,EAAAA,QADyD;AAEzDjB,EAAAA,MAAM,EAAEiB,QAAQ,CAACG,IAAT,CAAcC,GAFmC;AAGzDtB,EAAAA,KAAK,EAAEmB,SAAS,CAACI,IAAV,CAAevB,KAHmC;AAIzDE,EAAAA,UAAU,EAAEiB,SAAS,CAACI,IAAV,CAAevB,KAJ8B;AAKzDK,EAAAA,YAAY,EAAEc,SAAS,CAACK,MAAV,CAAiBC;AAL0B,CAAnC,CAAxB;;AAQA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAenC,OAAO,CACpBF,OAAO,CAAC4B,eAAD,EAAkBS,kBAAlB,CADa,EAEpBpC,gBAAgB,CAACqC,KAAK,IAAI,CAAC,QAAD,CAAV,CAFI,EAGpBrC,gBAAgB,CAACqC,KAAK,IAAI,CAAC,UAAD,CAAV,CAHI,CAAP,CAIb7B,UAJa,CAAf;AASA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\n\nimport Friend from './Friend';\nimport AddFriendButton from './Buttons/AddFriendButton';\nimport Loader from '../Loader/index.js';\nimport Modal from '../Modal/Modal'\nimport Button from '../../style/FormUI/Buttons'\nimport './AddFriends.css';\n\nimport * as actions from '../../backend/store/actions/';\n\nconst AddFriends = ({addFriend, users, userId, allFriends, close, opened, hasRequested }) => {\n\n  const [isOpened, setisOpened] = useState(false);\n\n  // console.log(\"wh\")\n  let content;\n  \n  if(!users)\n  {\n    console.log(\"if\")\n    content = (\n      <Loader />\n    );\n  }\n\n  \n  else if( users.length === 0 )\n  {\n    // console.log(\"elif\")\n    content = (\n      <p>There are no users!</p>\n    )\n  }\n  else\n  {\n    // console.log(\"else\")\n    \n    users = Object.keys(users).filter(user => user !== userId)\n  \n    // let friends = [];\n    // console.log(friends)\n    \n    // if(allFriends.friends)\n    // {\n    //   friends += allFriends.friends\n    // }\n      \n    // if(allFriends.requests) \n    // {\n    //   friends += allFriends.requests\n    // }\n\n\n    // console.log(!friends.includes(userId))\n\n    // users = users.filter(user => !friends.includes(user) && user !== userId )\n    content = (\n      <div>\n        {\n          users.map(user => \n          <div className=\"friend\" key={user}>\n              <Friend display={true} friend={user} />\n              <AddFriendButton friend={user}/>\n          </div>\n        )}\n        \n      </div>\n    )\n    // console.log(\"over here\")\n  }\n \n\n  return (\n    <>\n    <Button color=\"main\" contain onClick={() => setisOpened(true)}>\n      Add Friends\n    </Button>\n    <Modal opened={isOpened} close={() => setisOpened(false)}>\n      <Button color=\"main\" contain onClick={() => setisOpened(false)}>\n        Done\n      </Button >\n      <div className = \"friends-change\"> \n      <h1> All Users </h1>\n      {content}\n      </div>\n    </Modal>\n      \n\n   \n    </>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  firebase,\n  userId: firebase.auth.uid,\n  users: firestore.data.users,\n  allFriends: firestore.data.users,\n  hasRequested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"users/\"]),\n  firestoreConnect(props => [\"friends/\"]),\n)(AddFriends)\n\n\n\n\n/*\n \n\n  */"]},"metadata":{},"sourceType":"module"}