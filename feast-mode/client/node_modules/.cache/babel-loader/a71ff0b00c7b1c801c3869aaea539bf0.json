{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/WizardForm.js\";\nimport React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport Wizard from './Wizard.js';\nimport * as actions from '../../backend/store/actions';\nimport { connect } from 'react-redux';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst required = value => value ? undefined : 'Required';\n\nconst App = () => React.createElement(\"div\", {\n  className: \"App\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Multistep / Form Wizard \"), React.createElement(Wizard, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    favoriteColor: ''\n  },\n  onSubmit: (values, actions) => {\n    sleep(300).then(() => {\n      window.alert(JSON.stringify(values, null, 2));\n      actions.setSubmitting(false);\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Wizard.Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"First Name\"), React.createElement(Field, {\n  name: \"firstName\",\n  component: \"input\",\n  type: \"text\",\n  placeholder: \"First Name\",\n  validate: required,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"firstName\",\n  component: \"div\",\n  className: \"field-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Last Name\"), React.createElement(Field, {\n  name: \"lastName\",\n  component: \"input\",\n  type: \"text\",\n  placeholder: \"Last Name\",\n  validate: required,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"lastName\",\n  component: \"div\",\n  className: \"field-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}))), React.createElement(Wizard.Page, {\n  validate: values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    }\n\n    if (!values.favoriteColor) {\n      errors.favoriteColor = 'Required';\n    }\n\n    return errors;\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Email\"), React.createElement(Field, {\n  name: \"email\",\n  component: \"input\",\n  type: \"email\",\n  placeholder: \"Email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  name: \"email\",\n  component: \"div\",\n  className: \"field-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, \"Favorite Color\"), React.createElement(Field, {\n  name: \"favoriteColor\",\n  component: \"select\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  value: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"Select a Color\"), React.createElement(\"option\", {\n  value: \"#ff0000\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, \"\\u2764\\uFE0F Red\"), React.createElement(\"option\", {\n  value: \"#00ff00\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, \"\\uD83D\\uDC9A Green\"), React.createElement(\"option\", {\n  value: \"#0000ff\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, \"\\uD83D\\uDC99 Blue\")), React.createElement(ErrorMessage, {\n  name: \"favoriteColor\",\n  component: \"div\",\n  className: \"field-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n})))));\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.signUp,\n  cleanUp: actions.clean\n};\nexport default Aconnect(mapStateToProps, mapDispatchToProps)(Wizard);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignUp/WizardForm.js"],"names":["React","Formik","Field","ErrorMessage","Wizard","actions","connect","sleep","ms","Promise","resolve","setTimeout","required","value","undefined","App","firstName","lastName","email","favoriteColor","values","then","window","alert","JSON","stringify","setSubmitting","errors","mapStateToProps","auth","loading","error","mapDispatchToProps","signUp","cleanUp","clean","Aconnect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,QAA4C,QAA5C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAApB;;AAEA,MAAMI,QAAQ,GAAGC,KAAK,IAAKA,KAAK,GAAGC,SAAH,GAAe,UAA/C;;AAEA,MAAMC,GAAG,GAAG,MACR;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,MAAD;AACE,EAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE,EADE;AAEbC,IAAAA,QAAQ,EAAE,EAFG;AAGbC,IAAAA,KAAK,EAAE,EAHM;AAIbC,IAAAA,aAAa,EAAE;AAJF,GADjB;AAOE,EAAA,QAAQ,EAAE,CAACC,MAAD,EAASf,OAAT,KAAqB;AAC7BE,IAAAA,KAAK,CAAC,GAAD,CAAL,CAAWc,IAAX,CAAgB,MAAM;AACpBC,MAAAA,MAAM,CAACC,KAAP,CAAaC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAb;AACAf,MAAAA,OAAO,CAACqB,aAAR,CAAsB,KAAtB;AACD,KAHD;AAID,GAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAcE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,SAAS,EAAC,OAFZ;AAGE,EAAA,IAAI,EAAC,MAHP;AAIE,EAAA,WAAW,EAAC,YAJd;AAKE,EAAA,QAAQ,EAAEd,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EASE,oBAAC,YAAD;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,SAAS,EAAC,KAFZ;AAGE,EAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,SAAS,EAAC,OAFZ;AAGE,EAAA,IAAI,EAAC,MAHP;AAIE,EAAA,WAAW,EAAC,WAJd;AAKE,EAAA,QAAQ,EAAEA,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EASE,oBAAC,YAAD;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,SAAS,EAAC,KAFZ;AAGE,EAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CAhBF,CAdF,EA8CE,oBAAC,MAAD,CAAQ,IAAR;AACE,EAAA,QAAQ,EAAEQ,MAAM,IAAI;AAClB,UAAMO,MAAM,GAAG,EAAf;;AACA,QAAI,CAACP,MAAM,CAACF,KAAZ,EAAmB;AACjBS,MAAAA,MAAM,CAACT,KAAP,GAAe,UAAf;AACD;;AACD,QAAI,CAACE,MAAM,CAACD,aAAZ,EAA2B;AACzBQ,MAAAA,MAAM,CAACR,aAAP,GAAuB,UAAvB;AACD;;AACD,WAAOQ,MAAP;AACD,GAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,SAAS,EAAC,OAFZ;AAGE,EAAA,IAAI,EAAC,OAHP;AAIE,EAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAQE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,OAAnB;AAA2B,EAAA,SAAS,EAAC,KAArC;AAA2C,EAAA,SAAS,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CAZF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,eAAZ;AAA4B,EAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,EAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAQ,EAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAQ,EAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CAFF,EAQE,oBAAC,YAAD;AACE,EAAA,IAAI,EAAC,eADP;AAEE,EAAA,SAAS,EAAC,KAFZ;AAGE,EAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CAtBF,CA9CF,CAFF,CADJ;;AA0FA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACnCC,EAAAA,OAAO,EAAED,IAAI,CAACC,OADqB;AAEnCC,EAAAA,KAAK,EAAEF,IAAI,CAACE;AAFuB,CAAf,CAAxB;;AAKA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,MAAM,EAAE5B,OAAO,CAAC4B,MADO;AAEvBC,EAAAA,OAAO,EAAE7B,OAAO,CAAC8B;AAFM,CAA3B;AAKA,eAAeC,QAAQ,CAACR,eAAD,EAAkBI,kBAAlB,CAAR,CAA8C5B,MAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport Wizard from './Wizard.js'\nimport * as actions from '../../backend/store/actions'\nimport { connect } from 'react-redux'\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst required = value => (value ? undefined : 'Required');\n\nconst App = () => (\n    <div className=\"App\">\n      <h1>Multistep / Form Wizard </h1>\n      <Wizard\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          favoriteColor: '',\n        }}\n        onSubmit={(values, actions) => {\n          sleep(300).then(() => {\n            window.alert(JSON.stringify(values, null, 2));\n            actions.setSubmitting(false);\n          });\n        }}\n      >\n        <Wizard.Page>\n          <div>\n            <label>First Name</label>\n            <Field\n              name=\"firstName\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"First Name\"\n              validate={required}\n            />\n            <ErrorMessage\n              name=\"firstName\"\n              component=\"div\"\n              className=\"field-error\"\n            />\n          </div>\n          <div>\n            <label>Last Name</label>\n            <Field\n              name=\"lastName\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Last Name\"\n              validate={required}\n            />\n            <ErrorMessage\n              name=\"lastName\"\n              component=\"div\"\n              className=\"field-error\"\n            />\n          </div>\n        </Wizard.Page>\n        <Wizard.Page\n          validate={values => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = 'Required';\n            }\n            if (!values.favoriteColor) {\n              errors.favoriteColor = 'Required';\n            }\n            return errors;\n          }}\n        >\n          <div>\n            <label>Email</label>\n            <Field\n              name=\"email\"\n              component=\"input\"\n              type=\"email\"\n              placeholder=\"Email\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" className=\"field-error\" />\n          </div>\n          <div>\n            <label>Favorite Color</label>\n            <Field name=\"favoriteColor\" component=\"select\">\n              <option value=\"\">Select a Color</option>\n              <option value=\"#ff0000\">❤️ Red</option>\n              <option value=\"#00ff00\">💚 Green</option>\n              <option value=\"#0000ff\">💙 Blue</option>\n            </Field>\n            <ErrorMessage\n              name=\"favoriteColor\"\n              component=\"div\"\n              className=\"field-error\"\n            />\n          </div>\n        </Wizard.Page>\n      </Wizard>\n    </div>\n);\n  \nconst mapStateToProps = ({ auth }) => ({\n    loading: auth.loading,\n    error: auth.error,\n})\n\nconst mapDispatchToProps = {\n    signUp: actions.signUp,\n    cleanUp: actions.clean,\n}\n\nexport default Aconnect(mapStateToProps, mapDispatchToProps)(Wizard)"]},"metadata":{},"sourceType":"module"}