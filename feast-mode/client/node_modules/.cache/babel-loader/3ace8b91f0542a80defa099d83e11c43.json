{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignIn/index.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { Form, Field, ErrorMessage, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { connect } from 'react-redux';\nimport * as actions from '../../backend/store/actions';\nimport { auth } from 'firebase';\nconst SignInSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\"),\n  password: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter your password\")\n});\n\nconst SignInForm = ({\n  login,\n  loading,\n  error\n}) => {\n  console.log(error); // remove this when you get error to show\n\n  useEffect;\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: SignInSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setSubmitting\n    }) => {\n      await login(values);\n      resetForm();\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, ({\n    errors,\n    touched,\n    isSubmitting\n  }) => React.createElement(Form, {\n    className: \"classic-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: [\"text-input\", touched.email && errors.email && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" Email \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: [\"text-input\", touched.password && errors.password && \"text-error\"].join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Password \"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    render: msg => React.createElement(\"p\", {\n      className: \"error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" \", msg, \" \"),\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    className: \"classic-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Log In \")));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  login: actions.signIn,\n  clean\n};\n\nconst SignInLink = () => React.createElement(\"pre\", {\n  className: \"link-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, \"Already have an account?   \", React.createElement(Link, {\n  to: ROUTES.LANDING,\n  className: \"link\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Log In\"));\n\nexport { SignInLink };\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInForm);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/SignIn/index.js"],"names":["React","useEffect","Link","ROUTES","Form","Field","ErrorMessage","Formik","yup","connect","actions","auth","SignInSchema","object","shape","email","string","required","password","min","SignInForm","login","loading","error","console","log","values","resetForm","setSubmitting","errors","touched","isSubmitting","join","msg","mapStateToProps","mapDispatchToProps","signIn","clean","SignInLink","LANDING"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as ROUTES from '../../constants/routes'\nimport { Form, Field, ErrorMessage, Formik } from 'formik'\nimport * as yup from 'yup'\nimport { connect } from 'react-redux'\nimport * as actions from '../../backend/store/actions'\nimport { auth } from 'firebase';\n\nconst SignInSchema = yup.object().shape({\n  email: yup.string(\"Must be a valid email\").email(\"Must be a valid email\").required(\"Please enter your email\"),\n  password: yup.string().min(8, \"Password must be at least 8 characters\").required(\"Please enter your password\"),\n})\n\nconst SignInForm = ({ login, loading, error }) => {\n  console.log(error) // remove this when you get error to show\n  useEffect\n  return(\n    <Formik\n      initialValues = {{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema = {SignInSchema}\n      onSubmit = {async ( values, { resetForm, setSubmitting }) => {\n        await login(values)\n        resetForm()\n        setSubmitting(false)\n      }}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form className = \"classic-form\">\n            \n          <div className = {[\"text-input\", touched.email && errors.email && \"text-error\"].join(' ')}> \n            <label> Email </label> <br />\n            <Field name = \"email\" type = \"email\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"email\" />\n          </div>\n          \n          <div className = {[\"text-input\", touched.password && errors.password && \"text-error\"].join(' ')}>\n            <label> Password </label> <br />\n            <Field name = \"password\" type = \"password\"/> <br/>\n            <ErrorMessage render = {msg => <p className = \"error-msg\"> {msg} </p>} name = \"password\" />\n          </div>\n\n          {/* <p>{error}</p> Conditional rendering of the paragraph with styled components */}\n          <button type = \"submit\" disabled = {isSubmitting} className = \"classic-button\"> Log In </button>\n          </Form>\n        )}\n    </Formik>\n  )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  loading: auth.loading,\n  error: auth.error,\n})\n\nconst mapDispatchToProps = {\n  login: actions.signIn,\n  clean\n}\n\nconst SignInLink = () => (\n  <pre className = \"link-text\">\n    Already have an account?   <Link to={ROUTES.LANDING} className = \"link\">Log In</Link>\n  </pre>\n)\n\nexport { SignInLink }\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignInForm)"]},"metadata":{},"sourceType":"module"}