{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport Loader from '../Loader/index.js';\n\nconst Friend = ({\n  firebase,\n  friend,\n  allUsers\n}) => {\n  console.log(allUsers);\n  const user = allUsers[friend];\n  return React.createElement(\"div\", {\n    className: \"friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Image: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Id: \", friend), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Name: \", user.firstName + \" \" + user.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" E-mail: \", user.email));\n};\n\nconst mapStateToProps = ({\n  firebase,\n  firestore,\n  app\n}) => ({\n  firebase,\n  allUsers: firestore.data.users,\n  requested: firestore.status.requested\n});\n\nconst mapDispatchToProps = {};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect(props => [\"users/\"]))(Friend);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Friends/Friend.js"],"names":["React","useEffect","connect","firestoreConnect","compose","Loader","Friend","firebase","friend","allUsers","console","log","user","firstName","lastName","email","mapStateToProps","firestore","app","data","users","requested","status","mapDispatchToProps","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAGA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,IAAI,GAAGH,QAAQ,CAACD,MAAD,CAArB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQA,MAAR,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUI,IAAI,CAACC,SAAL,GAAiB,GAAjB,GAAuBD,IAAI,CAACE,QAAtC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,IAAI,CAACG,KAAlB,CALF,CADF;AAUD,CAbD;;AAeA,MAAMC,eAAe,GAAG,CAAC;AAAET,EAAAA,QAAF;AAAYU,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,MAAmC;AACzDX,EAAAA,QADyD;AAEzDE,EAAAA,QAAQ,EAAEQ,SAAS,CAACE,IAAV,CAAeC,KAFgC;AAGzDC,EAAAA,SAAS,EAAEJ,SAAS,CAACK,MAAV,CAAiBD;AAH6B,CAAnC,CAAxB;;AAMA,MAAME,kBAAkB,GAAG,EAA3B;AAEA,eAAenB,OAAO,CACpBF,OAAO,CAACc,eAAD,EAAkBO,kBAAlB,CADa,EAEpBpB,gBAAgB,CAACqB,KAAK,IAAI,CAAC,QAAD,CAAV,CAFI,CAAP,CAGblB,MAHa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nimport Loader from '../Loader/index.js';\n\n\nconst Friend = ({ firebase, friend, allUsers }) => {\n  console.log(allUsers)\n  const user = allUsers[friend];\n  return(\n    <div className=\"friend\">\n      <p></p>\n      <p>Image: </p>\n      <p>Id: {friend}</p>\n      <p>Name: {user.firstName + \" \" + user.lastName}</p>\n      <p> E-mail: {user.email}</p>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ firebase, firestore, app }) => ({\n  firebase,\n  allUsers: firestore.data.users,\n  requested: firestore.status.requested,\n})\n\nconst mapDispatchToProps = {}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(props => [\"users/\"]),\n)(Friend)\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}