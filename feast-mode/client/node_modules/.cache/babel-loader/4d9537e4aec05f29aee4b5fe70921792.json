{"ast":null,"code":"var _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Menu/ImageUpload.js\";\nimport React, { Component } from 'react';\nimport storage from '../../backend/firebase';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const newImage = e.target.files[0];\n        this.setState({\n          image: newImage\n        });\n        console.log(\"HELLO\");\n      }\n    };\n\n    this.handleUpload = () => {\n      const image = this.state.image;\n      const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n      uploadTask.on('state_changed', snapshot => {\n        // progress function ....\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0 // this.handleChange = this.handleChange.bind(this);\n      // this.handleUpload = this.handleUpload.bind(this);\n\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.image !== prevProps.image) {\n      console.log(\"upload worked\");\n    } else {\n      console.log(\"upload failed\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.url,\n      alt: \"Uploaded images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/src/components/Menu/ImageUpload.js"],"names":["React","Component","storage","ImageUpload","constructor","props","handleChange","e","target","files","newImage","setState","image","console","log","handleUpload","state","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport storage from '../../backend/firebase';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            url: '',\n            progress: 0\n        }\n        // this.handleChange = this.handleChange.bind(this);\n        // this.handleUpload = this.handleUpload.bind(this);\n    }\n\n    handleChange = e => {\n        if(e.target.files[0]) {\n            const newImage = e.target.files[0];\n            this.setState({\n                image: newImage\n            });\n            console.log(\"HELLO\");\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.image !== prevProps.image){\n            console.log(\"upload worked\")\n        }\n        else{\n            console.log(\"upload failed\")\n        }\n    }\n\n    handleUpload = () => {\n        const {image} = this.state;\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n        uploadTask.on('state_changed',\n        (snapshot) => {\n            // progress function ....\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            this.setState({progress});\n        },\n        (error) => {\n            // error function ....\n            console.log(error);\n        },\n        () => {\n            // complete function ....\n            storage.ref('images').child(image.name).getDownloadURL().then(url => {\n                console.log(url);\n                this.setState({url});\n            })\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <progress value={this.state.progress} max=\"100\"/>\n\n                <input type=\"file\" onChange={this.handleChange}/>\n                <button onClick={this.handleUpload}>Upload</button>\n                <br/>\n                <img src={this.state.url} alt=\"Uploaded images\"/>\n            </div>\n        )\n    }\n}\n\nexport default ImageUpload\n"]},"metadata":{},"sourceType":"module"}