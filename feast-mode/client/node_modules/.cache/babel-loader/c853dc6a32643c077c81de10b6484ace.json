{"ast":null,"code":"/**\n * Simple sanitization. It is not intended to sanitize\n * malicious element values.\n *\n * character | escaped\n *      <       &lt;\n *      >       &gt;\n *      (       &#40;\n *      )       &#41;\n *      #       &#35;\n *      &       &amp;\n *      \"       &quot;\n *      '       &apos;\n */\nvar chars = {\n  '&': '&amp;',\n  '#': '&#35;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '(': '&#40;',\n  ')': '&#41;',\n  '\"': '&quot;',\n  \"'\": '&apos;'\n};\n\nfunction escapeRegExp(string) {\n  return string.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nexports.sanitize = function sanitize(value, reverse) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  Object.keys(chars).forEach(function (key) {\n    if (reverse) {\n      value = value.replace(new RegExp(escapeRegExp(chars[key]), 'g'), key);\n    } else {\n      value = value.replace(new RegExp(escapeRegExp(key), 'g'), chars[key]);\n    }\n  });\n  return value;\n};","map":null,"metadata":{},"sourceType":"script"}