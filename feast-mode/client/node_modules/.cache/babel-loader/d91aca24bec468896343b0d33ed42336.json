{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/Profile/ProfileEdit/ImageUpload.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    border-radius: 50%; \\n    align-items: center;\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 25rem;\\n    height: 25rem;\\n    object-fit: cover;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    margin-bottom: 1rem;\\n    width: 74%;\\n    display: flex;\\n    align-items: center;\\n\\n    div, label {\\n        opacity: 0;\\n        transition: all 0.3s;\\n        cursor: pointer;\\n\\n        &:hover {\\n            -webkit-transform: translateX( -1px ) rotateY(180deg);\\n            transform: translateX( -1px ) rotateY( 180deg );\\n            -ms-transform: translateX( -1px ) rotateY(180deg);\\n            background-color: red;\\n        }\\n    }\\n\\n    :hover div, :hover label {\\n        opacity: 1;\\n        transform: translateY(-4px);\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport * as actions from '../../../../backend/store/actions';\nimport { storage } from 'firebase';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nconst ImageForm = styled.form(_templateObject());\nconst StyledImage = styled.img(_templateObject2());\n\nconst ImageUpload = ({\n  updateImageUrl,\n  profile\n}) => {\n  if (!profile.isLoaded) return null;\n  let state = {\n    avatar: \"\",\n    avatarURL: profile.image[0],\n    oldAvatar: profile.image[1]\n  };\n\n  const handleUploadSuccess = filename => {\n    state.avatar = filename;\n    storage().ref(\"images/\").child(filename).getDownloadURL().then(url => {\n      state.avatarURL = url;\n      updateImageUrl(state);\n    });\n  };\n\n  return React.createElement(ImageForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faCloudUploadAlt,\n    size: \"4x\",\n    color: \"#ff870C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(FileUploader, {\n    hidden: true,\n    accept: \"image/*\",\n    name: \"avatar\",\n    randomizeFilename: true,\n    storageRef: storage().ref(\"images\"),\n    onUploadSuccess: handleUploadSuccess,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), state.avatarURL && React.createElement(StyledImage, {\n    src: state.avatarURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \", React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    size: \"4x\",\n    color: \"#ff870C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \" \"));\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  profile: firebase.profile\n});\n\nconst mapDispatchToProps = {\n  updateImageUrl: actions.updateImageUrl\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUpload);","map":{"version":3,"sources":["/Users/cssummer19/Documents/FeastMode/feast-mode/client/src/components/Auth/Profile/ProfileEdit/ImageUpload.js"],"names":["React","connect","FileUploader","actions","storage","styled","FontAwesomeIcon","faTrashAlt","faCloudUploadAlt","ImageForm","form","StyledImage","img","ImageUpload","updateImageUrl","profile","isLoaded","state","avatar","avatarURL","image","oldAvatar","handleUploadSuccess","filename","ref","child","getDownloadURL","then","url","mapStateToProps","firebase","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,mCAA7C;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,IAAV,mBAAf;AAwBA,MAAMC,WAAW,GAAGN,MAAM,CAACO,GAAV,oBAAjB;;AAWA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AACjD,MAAI,CAACA,OAAO,CAACC,QAAb,EAAuB,OAAO,IAAP;AAEvB,MAAIC,KAAK,GAAG;AACRC,IAAAA,MAAM,EAAE,EADA;AAERC,IAAAA,SAAS,EAAEJ,OAAO,CAACK,KAAR,CAAc,CAAd,CAFH;AAGRC,IAAAA,SAAS,EAAEN,OAAO,CAACK,KAAR,CAAc,CAAd;AAHH,GAAZ;;AAMA,QAAME,mBAAmB,GAAGC,QAAQ,IAAI;AACpCN,IAAAA,KAAK,CAACC,MAAN,GAAeK,QAAf;AACAnB,IAAAA,OAAO,GACFoB,GADL,CACS,SADT,EAEKC,KAFL,CAEWF,QAFX,EAGKG,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACTX,MAAAA,KAAK,CAACE,SAAN,GAAkBS,GAAlB;AACAd,MAAAA,cAAc,CAACG,KAAD,CAAd;AACH,KAPL;AASH,GAXD;;AAaA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAIT,gBAAzB;AAA2C,IAAA,IAAI,EAAG,IAAlD;AAAuD,IAAA,KAAK,EAAG,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,MAAM,EAAG,SAFb;AAGI,IAAA,IAAI,EAAG,QAHX;AAII,IAAA,iBAAiB,MAJrB;AAKI,IAAA,UAAU,EAAIJ,OAAO,GAAGoB,GAAV,CAAc,QAAd,CALlB;AAMI,IAAA,eAAe,EAAIF,mBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAYKL,KAAK,CAACE,SAAN,IAAmB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAIF,KAAK,CAACE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZxB,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAM,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAIZ,UAAzB;AAAqC,IAAA,IAAI,EAAG,IAA5C;AAAiD,IAAA,KAAK,EAAG,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,MAbJ,CADJ;AAiBH,CAvCD;;AAyCA,MAAMsB,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AACvCf,EAAAA,OAAO,EAAEe,QAAQ,CAACf;AADqB,CAAnB,CAAxB;;AAIA,MAAMgB,kBAAkB,GAAG;AACvBjB,EAAAA,cAAc,EAAEX,OAAO,CAACW;AADD,CAA3B;AAIA,eAAeb,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,WAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport FileUploader from \"react-firebase-file-uploader\"\nimport * as actions from '../../../../backend/store/actions'\nimport { storage } from 'firebase'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst ImageForm = styled.form`\n    margin-bottom: 1rem;\n    width: 74%;\n    display: flex;\n    align-items: center;\n\n    div, label {\n        opacity: 0;\n        transition: all 0.3s;\n        cursor: pointer;\n\n        &:hover {\n            -webkit-transform: translateX( -1px ) rotateY(180deg);\n            transform: translateX( -1px ) rotateY( 180deg );\n            -ms-transform: translateX( -1px ) rotateY(180deg);\n            background-color: red;\n        }\n    }\n\n    :hover div, :hover label {\n        opacity: 1;\n        transform: translateY(-4px);\n    }\n`\nconst StyledImage = styled.img`\n    border-radius: 50%; \n    align-items: center;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 25rem;\n    height: 25rem;\n    object-fit: cover;\n`\n\nconst ImageUpload = ({ updateImageUrl, profile }) => {\n    if (!profile.isLoaded) return null\n\n    let state = {\n        avatar: \"\",\n        avatarURL: profile.image[0],\n        oldAvatar: profile.image[1]\n    }\n\n    const handleUploadSuccess = filename => {\n        state.avatar = filename\n        storage()\n            .ref(\"images/\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => {\n                state.avatarURL = url\n                updateImageUrl(state)\n            }\n        )\n    }\n\n    return (\n        <ImageForm>\n            <label>\n                <FontAwesomeIcon icon = {faCloudUploadAlt} size = \"4x\" color = \"#ff870C\" />\n                <FileUploader\n                    hidden\n                    accept = \"image/*\"\n                    name = \"avatar\"\n                    randomizeFilename\n                    storageRef = {storage().ref(\"images\")}\n                    onUploadSuccess = {handleUploadSuccess}\n                />\n            </label>\n            {state.avatarURL && <StyledImage src = {state.avatarURL}/>}\n            <div> <FontAwesomeIcon icon = {faTrashAlt} size = \"4x\" color = \"#ff870C\"/> </div>\n        </ImageForm>\n    )\n}\n\nconst mapStateToProps = ({ firebase }) => ({\n    profile: firebase.profile,\n})\n\nconst mapDispatchToProps = {\n    updateImageUrl: actions.updateImageUrl,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUpload);\n"]},"metadata":{},"sourceType":"module"}