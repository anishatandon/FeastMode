{"ast":null,"code":"'use strict';\n\nvar httpJson = require('./http-json');\n\nvar urls = require('./urls.json');\n\nvar Store = function (parameters) {\n  this.ID = parameters.ID;\n};\n\nStore.prototype.getInfo = function (callback) {\n  if (!this.ID || !callback) {\n    if (callback) callback({\n      success: false,\n      message: 'A callback is required to get store info'\n    });\n    return;\n  }\n\n  httpJson.get(urls.store.info.replace('${storeID}', this.ID), callback);\n};\n\nStore.prototype.getMenu = function (callback, lang) {\n  if (!this.ID || !callback) {\n    if (callback) callback({\n      success: false,\n      message: 'A callback is required to get a store menu'\n    });\n    return;\n  }\n\n  if (!lang) lang = 'en';\n  var url = urls.store.menu.replace('${storeID}', this.ID).replace('${lang}', lang);\n  httpJson.get(url, callback);\n};\n\nStore.prototype.getFriendlyNames = function (callback, lang) {\n  if (!this.ID || !callback) {\n    if (callback) callback({\n      success: false,\n      message: 'A callback is required to get a store menu'\n    });\n    return;\n  }\n\n  if (!lang) lang = 'en';\n  var url = urls.store.menu.replace('${storeID}', this.ID).replace('${lang}', lang);\n  httpJson.get(url, function (result) {\n    var itemMapping = [];\n    var variantKeys = Object.keys(result.result.Variants);\n    variantKeys.forEach(function (key) {\n      var json = {}; //Because JS is weird. You can't use variables as keys.\n\n      json[key] = result.result.Variants[key];\n      itemMapping.push(json);\n    });\n    callback({\n      success: true,\n      result: itemMapping\n    });\n  });\n};\n\nmodule.exports = Store;","map":null,"metadata":{},"sourceType":"script"}